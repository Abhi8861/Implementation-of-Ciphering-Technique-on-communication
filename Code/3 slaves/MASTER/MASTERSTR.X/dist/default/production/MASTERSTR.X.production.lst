

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri May 29 08:37:03 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  0086                     	;# 
    68  0087                     	;# 
    69  0089                     	;# 
    70  008C                     	;# 
    71  008D                     	;# 
    72  008E                     	;# 
    73  008F                     	;# 
    74  0090                     	;# 
    75  0091                     	;# 
    76  0092                     	;# 
    77  0093                     	;# 
    78  0093                     	;# 
    79  0093                     	;# 
    80  0094                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  0105                     	;# 
    93  0107                     	;# 
    94  0108                     	;# 
    95  0109                     	;# 
    96  010C                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  010F                     	;# 
   101  0185                     	;# 
   102  0187                     	;# 
   103  0188                     	;# 
   104  0189                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  000B                     _INTCON	set	11
   108  000C                     _PIR1bits	set	12
   109  001A                     _RCREG	set	26
   110  0013                     _SSPBUF	set	19
   111  0014                     _SSPCON	set	20
   112  0019                     _TXREG	set	25
   113  00C4                     _CREN	set	196
   114  0065                     _RCIF	set	101
   115  00C7                     _SPEN	set	199
   116  0063                     _SSPIF	set	99
   117  0064                     _TXIF	set	100
   118  008F                     _OSCCONbits	set	143
   119  0099                     _SPBRG	set	153
   120  0093                     _SSPADD	set	147
   121  0091                     _SSPCON2	set	145
   122  0091                     _SSPCON2bits	set	145
   123  0094                     _SSPSTAT	set	148
   124  0094                     _SSPSTATbits	set	148
   125  0087                     _TRISCbits	set	135
   126  04C2                     _BRGH	set	1218
   127  04C4                     _SYNC	set	1220
   128  04C1                     _TRMT	set	1217
   129  04C5                     _TXEN	set	1221
   130                           
   131                           	psect	strings
   132  0003                     __pstrings:	
   133  0003                     stringtab:	
   134  0003                     __stringtab:	
   135                           
   136                           ;	String table - string pointers are 2 bytes each
   137  0003  1BFF               	btfsc	btemp+1,7
   138  0004  280D               	ljmp	stringcode
   139  0005  1383               	bcf	3,7
   140  0006  187F               	btfsc	btemp+1,0
   141  0007  1783               	bsf	3,7
   142  0008  0800               	movf	0,w
   143  0009  0A84               	incf	4,f
   144  000A  1903               	skipnz
   145  000B  0AFF               	incf	btemp+1,f
   146  000C  0008               	return
   147  000D                     stringcode:	
   148  000D  087F               	movf	btemp+1,w
   149  000E  397F               	andlw	127
   150  000F  008A               	movwf	10
   151  0010  0804               	movf	4,w
   152  0011  0A84               	incf	4,f
   153  0012  1903               	skipnz
   154  0013  0AFF               	incf	btemp+1,f
   155  0014  0082               	movwf	2
   156  0015                     __stringbase:	
   157  0015                     __end_of__stringtab:	
   158                           
   159                           	psect	stringtext
   160  0800                     __pstringtext:	
   161  0800                     __stringdata:	
   162  0800                     STR_3:	
   163  0800  340D               	retlw	13
   164  0801  340A               	retlw	10
   165  0802  3445               	retlw	69	;'E'
   166  0803  346E               	retlw	110	;'n'
   167  0804  3474               	retlw	116	;'t'
   168  0805  3465               	retlw	101	;'e'
   169  0806  3472               	retlw	114	;'r'
   170  0807  3420               	retlw	32	;' '
   171  0808  3479               	retlw	121	;'y'
   172  0809  346F               	retlw	111	;'o'
   173  080A  3475               	retlw	117	;'u'
   174  080B  3472               	retlw	114	;'r'
   175  080C  3420               	retlw	32	;' '
   176  080D  3463               	retlw	99	;'c'
   177  080E  3468               	retlw	104	;'h'
   178  080F  346F               	retlw	111	;'o'
   179  0810  3469               	retlw	105	;'i'
   180  0811  3463               	retlw	99	;'c'
   181  0812  3465               	retlw	101	;'e'
   182  0813  3420               	retlw	32	;' '
   183  0814  340D               	retlw	13
   184  0815  340A               	retlw	10
   185  0816  3420               	retlw	32	;' '
   186  0817  3431               	retlw	49	;'1'
   187  0818  342E               	retlw	46	;'.'
   188  0819  3453               	retlw	83	;'S'
   189  081A  346C               	retlw	108	;'l'
   190  081B  3461               	retlw	97	;'a'
   191  081C  3476               	retlw	118	;'v'
   192  081D  3465               	retlw	101	;'e'
   193  081E  3420               	retlw	32	;' '
   194  081F  3431               	retlw	49	;'1'
   195  0820  3428               	retlw	40	;'('
   196  0821  3441               	retlw	65	;'A'
   197  0822  3464               	retlw	100	;'d'
   198  0823  3464               	retlw	100	;'d'
   199  0824  3472               	retlw	114	;'r'
   200  0825  3465               	retlw	101	;'e'
   201  0826  3473               	retlw	115	;'s'
   202  0827  3473               	retlw	115	;'s'
   203  0828  343A               	retlw	58	;':'
   204  0829  3430               	retlw	48	;'0'
   205  082A  3478               	retlw	120	;'x'
   206  082B  3441               	retlw	65	;'A'
   207  082C  3441               	retlw	65	;'A'
   208  082D  340D               	retlw	13
   209  082E  340A               	retlw	10
   210  082F  3432               	retlw	50	;'2'
   211  0830  342E               	retlw	46	;'.'
   212  0831  3453               	retlw	83	;'S'
   213  0832  346C               	retlw	108	;'l'
   214  0833  3461               	retlw	97	;'a'
   215  0834  3476               	retlw	118	;'v'
   216  0835  3465               	retlw	101	;'e'
   217  0836  3420               	retlw	32	;' '
   218  0837  3432               	retlw	50	;'2'
   219  0838  3428               	retlw	40	;'('
   220  0839  3441               	retlw	65	;'A'
   221  083A  3464               	retlw	100	;'d'
   222  083B  3464               	retlw	100	;'d'
   223  083C  3472               	retlw	114	;'r'
   224  083D  3465               	retlw	101	;'e'
   225  083E  3473               	retlw	115	;'s'
   226  083F  3473               	retlw	115	;'s'
   227  0840  343A               	retlw	58	;':'
   228  0841  3430               	retlw	48	;'0'
   229  0842  3478               	retlw	120	;'x'
   230  0843  3442               	retlw	66	;'B'
   231  0844  3442               	retlw	66	;'B'
   232  0845  3429               	retlw	41	;')'
   233  0846  340D               	retlw	13
   234  0847  340A               	retlw	10
   235  0848  3433               	retlw	51	;'3'
   236  0849  342E               	retlw	46	;'.'
   237  084A  3453               	retlw	83	;'S'
   238  084B  346C               	retlw	108	;'l'
   239  084C  3461               	retlw	97	;'a'
   240  084D  3476               	retlw	118	;'v'
   241  084E  3465               	retlw	101	;'e'
   242  084F  3420               	retlw	32	;' '
   243  0850  3433               	retlw	51	;'3'
   244  0851  3428               	retlw	40	;'('
   245  0852  3441               	retlw	65	;'A'
   246  0853  3464               	retlw	100	;'d'
   247  0854  3464               	retlw	100	;'d'
   248  0855  3472               	retlw	114	;'r'
   249  0856  3465               	retlw	101	;'e'
   250  0857  3473               	retlw	115	;'s'
   251  0858  3473               	retlw	115	;'s'
   252  0859  343A               	retlw	58	;':'
   253  085A  3430               	retlw	48	;'0'
   254  085B  3478               	retlw	120	;'x'
   255  085C  3443               	retlw	67	;'C'
   256  085D  3443               	retlw	67	;'C'
   257  085E  340D               	retlw	13
   258  085F  340A               	retlw	10
   259  0860  3400               	retlw	0
   260  0861                     STR_12:	
   261  0861  340D               	retlw	13
   262  0862  340A               	retlw	10
   263  0863  344E               	retlw	78	;'N'
   264  0864  346F               	retlw	111	;'o'
   265  0865  3420               	retlw	32	;' '
   266  0866  346D               	retlw	109	;'m'
   267  0867  3465               	retlw	101	;'e'
   268  0868  3473               	retlw	115	;'s'
   269  0869  3473               	retlw	115	;'s'
   270  086A  3461               	retlw	97	;'a'
   271  086B  3467               	retlw	103	;'g'
   272  086C  3465               	retlw	101	;'e'
   273  086D  3420               	retlw	32	;' '
   274  086E  3477               	retlw	119	;'w'
   275  086F  3469               	retlw	105	;'i'
   276  0870  346C               	retlw	108	;'l'
   277  0871  346C               	retlw	108	;'l'
   278  0872  3420               	retlw	32	;' '
   279  0873  3462               	retlw	98	;'b'
   280  0874  3465               	retlw	101	;'e'
   281  0875  3420               	retlw	32	;' '
   282  0876  3473               	retlw	115	;'s'
   283  0877  3465               	retlw	101	;'e'
   284  0878  346E               	retlw	110	;'n'
   285  0879  3474               	retlw	116	;'t'
   286  087A  3420               	retlw	32	;' '
   287  087B  3473               	retlw	115	;'s'
   288  087C  3469               	retlw	105	;'i'
   289  087D  346E               	retlw	110	;'n'
   290  087E  3463               	retlw	99	;'c'
   291  087F  3465               	retlw	101	;'e'
   292  0880  3420               	retlw	32	;' '
   293  0881  346E               	retlw	110	;'n'
   294  0882  346F               	retlw	111	;'o'
   295  0883  3420               	retlw	32	;' '
   296  0884  3473               	retlw	115	;'s'
   297  0885  346C               	retlw	108	;'l'
   298  0886  3461               	retlw	97	;'a'
   299  0887  3476               	retlw	118	;'v'
   300  0888  3465               	retlw	101	;'e'
   301  0889  3420               	retlw	32	;' '
   302  088A  346E               	retlw	110	;'n'
   303  088B  346F               	retlw	111	;'o'
   304  088C  3420               	retlw	32	;' '
   305  088D  3465               	retlw	101	;'e'
   306  088E  346E               	retlw	110	;'n'
   307  088F  3474               	retlw	116	;'t'
   308  0890  3465               	retlw	101	;'e'
   309  0891  3472               	retlw	114	;'r'
   310  0892  3465               	retlw	101	;'e'
   311  0893  3464               	retlw	100	;'d'
   312  0894  340D               	retlw	13
   313  0895  340A               	retlw	10
   314  0896  3400               	retlw	0
   315  0897                     STR_1:	
   316  0897  340D               	retlw	13
   317  0898  340A               	retlw	10
   318  0899  342D               	retlw	45	;'-'
   319  089A  342D               	retlw	45	;'-'
   320  089B  342D               	retlw	45	;'-'
   321  089C  342D               	retlw	45	;'-'
   322  089D  342D               	retlw	45	;'-'
   323  089E  342D               	retlw	45	;'-'
   324  089F  342D               	retlw	45	;'-'
   325  08A0  342D               	retlw	45	;'-'
   326  08A1  342D               	retlw	45	;'-'
   327  08A2  342D               	retlw	45	;'-'
   328  08A3  342D               	retlw	45	;'-'
   329  08A4  342D               	retlw	45	;'-'
   330  08A5  342D               	retlw	45	;'-'
   331  08A6  342D               	retlw	45	;'-'
   332  08A7  342D               	retlw	45	;'-'
   333  08A8  344D               	retlw	77	;'M'
   334  08A9  3441               	retlw	65	;'A'
   335  08AA  3453               	retlw	83	;'S'
   336  08AB  3454               	retlw	84	;'T'
   337  08AC  3445               	retlw	69	;'E'
   338  08AD  3452               	retlw	82	;'R'
   339  08AE  3420               	retlw	32	;' '
   340  08AF  3444               	retlw	68	;'D'
   341  08B0  3445               	retlw	69	;'E'
   342  08B1  3456               	retlw	86	;'V'
   343  08B2  3449               	retlw	73	;'I'
   344  08B3  3443               	retlw	67	;'C'
   345  08B4  3445               	retlw	69	;'E'
   346  08B5  342D               	retlw	45	;'-'
   347  08B6  342D               	retlw	45	;'-'
   348  08B7  342D               	retlw	45	;'-'
   349  08B8  342D               	retlw	45	;'-'
   350  08B9  342D               	retlw	45	;'-'
   351  08BA  342D               	retlw	45	;'-'
   352  08BB  342D               	retlw	45	;'-'
   353  08BC  342D               	retlw	45	;'-'
   354  08BD  342D               	retlw	45	;'-'
   355  08BE  342D               	retlw	45	;'-'
   356  08BF  342D               	retlw	45	;'-'
   357  08C0  342D               	retlw	45	;'-'
   358  08C1  342D               	retlw	45	;'-'
   359  08C2  342D               	retlw	45	;'-'
   360  08C3  342D               	retlw	45	;'-'
   361  08C4  342D               	retlw	45	;'-'
   362  08C5  342D               	retlw	45	;'-'
   363  08C6  340D               	retlw	13
   364  08C7  340A               	retlw	10
   365  08C8  3400               	retlw	0
   366  08C9                     STR_7:	
   367  08C9  340D               	retlw	13
   368  08CA  340A               	retlw	10
   369  08CB  3453               	retlw	83	;'S'
   370  08CC  3465               	retlw	101	;'e'
   371  08CD  346E               	retlw	110	;'n'
   372  08CE  3464               	retlw	100	;'d'
   373  08CF  3469               	retlw	105	;'i'
   374  08D0  346E               	retlw	110	;'n'
   375  08D1  3467               	retlw	103	;'g'
   376  08D2  3420               	retlw	32	;' '
   377  08D3  3474               	retlw	116	;'t'
   378  08D4  346F               	retlw	111	;'o'
   379  08D5  3420               	retlw	32	;' '
   380  08D6  3453               	retlw	83	;'S'
   381  08D7  346C               	retlw	108	;'l'
   382  08D8  3461               	retlw	97	;'a'
   383  08D9  3476               	retlw	118	;'v'
   384  08DA  3465               	retlw	101	;'e'
   385  08DB  3420               	retlw	32	;' '
   386  08DC  3431               	retlw	49	;'1'
   387  08DD  3420               	retlw	32	;' '
   388  08DE  3428               	retlw	40	;'('
   389  08DF  3441               	retlw	65	;'A'
   390  08E0  3464               	retlw	100	;'d'
   391  08E1  3464               	retlw	100	;'d'
   392  08E2  3472               	retlw	114	;'r'
   393  08E3  3465               	retlw	101	;'e'
   394  08E4  3473               	retlw	115	;'s'
   395  08E5  3473               	retlw	115	;'s'
   396  08E6  3420               	retlw	32	;' '
   397  08E7  3430               	retlw	48	;'0'
   398  08E8  3478               	retlw	120	;'x'
   399  08E9  3441               	retlw	65	;'A'
   400  08EA  3441               	retlw	65	;'A'
   401  08EB  3429               	retlw	41	;')'
   402  08EC  340D               	retlw	13
   403  08ED  340A               	retlw	10
   404  08EE  3400               	retlw	0
   405  08EF                     STR_8:	
   406  08EF  340D               	retlw	13
   407  08F0  340A               	retlw	10
   408  08F1  3453               	retlw	83	;'S'
   409  08F2  3465               	retlw	101	;'e'
   410  08F3  346E               	retlw	110	;'n'
   411  08F4  3464               	retlw	100	;'d'
   412  08F5  3469               	retlw	105	;'i'
   413  08F6  346E               	retlw	110	;'n'
   414  08F7  3467               	retlw	103	;'g'
   415  08F8  3420               	retlw	32	;' '
   416  08F9  3474               	retlw	116	;'t'
   417  08FA  346F               	retlw	111	;'o'
   418  08FB  3420               	retlw	32	;' '
   419  08FC  3453               	retlw	83	;'S'
   420  08FD  346C               	retlw	108	;'l'
   421  08FE  3461               	retlw	97	;'a'
   422  08FF  3476               	retlw	118	;'v'
   423  0900  3465               	retlw	101	;'e'
   424  0901  3420               	retlw	32	;' '
   425  0902  3432               	retlw	50	;'2'
   426  0903  3420               	retlw	32	;' '
   427  0904  3428               	retlw	40	;'('
   428  0905  3441               	retlw	65	;'A'
   429  0906  3464               	retlw	100	;'d'
   430  0907  3464               	retlw	100	;'d'
   431  0908  3472               	retlw	114	;'r'
   432  0909  3465               	retlw	101	;'e'
   433  090A  3473               	retlw	115	;'s'
   434  090B  3473               	retlw	115	;'s'
   435  090C  3420               	retlw	32	;' '
   436  090D  3430               	retlw	48	;'0'
   437  090E  3478               	retlw	120	;'x'
   438  090F  3442               	retlw	66	;'B'
   439  0910  3442               	retlw	66	;'B'
   440  0911  3429               	retlw	41	;')'
   441  0912  340D               	retlw	13
   442  0913  340A               	retlw	10
   443  0914  3400               	retlw	0
   444  0915                     STR_9:	
   445  0915  340D               	retlw	13
   446  0916  340A               	retlw	10
   447  0917  3453               	retlw	83	;'S'
   448  0918  3465               	retlw	101	;'e'
   449  0919  346E               	retlw	110	;'n'
   450  091A  3464               	retlw	100	;'d'
   451  091B  3469               	retlw	105	;'i'
   452  091C  346E               	retlw	110	;'n'
   453  091D  3467               	retlw	103	;'g'
   454  091E  3420               	retlw	32	;' '
   455  091F  3474               	retlw	116	;'t'
   456  0920  346F               	retlw	111	;'o'
   457  0921  3420               	retlw	32	;' '
   458  0922  3453               	retlw	83	;'S'
   459  0923  346C               	retlw	108	;'l'
   460  0924  3461               	retlw	97	;'a'
   461  0925  3476               	retlw	118	;'v'
   462  0926  3465               	retlw	101	;'e'
   463  0927  3420               	retlw	32	;' '
   464  0928  3433               	retlw	51	;'3'
   465  0929  3420               	retlw	32	;' '
   466  092A  3428               	retlw	40	;'('
   467  092B  3441               	retlw	65	;'A'
   468  092C  3464               	retlw	100	;'d'
   469  092D  3464               	retlw	100	;'d'
   470  092E  3472               	retlw	114	;'r'
   471  092F  3465               	retlw	101	;'e'
   472  0930  3473               	retlw	115	;'s'
   473  0931  3473               	retlw	115	;'s'
   474  0932  3420               	retlw	32	;' '
   475  0933  3430               	retlw	48	;'0'
   476  0934  3478               	retlw	120	;'x'
   477  0935  3443               	retlw	67	;'C'
   478  0936  3443               	retlw	67	;'C'
   479  0937  3429               	retlw	41	;')'
   480  0938  340D               	retlw	13
   481  0939  340A               	retlw	10
   482  093A  3400               	retlw	0
   483  093B                     STR_14:	
   484  093B  340D               	retlw	13
   485  093C  340A               	retlw	10
   486  093D  3459               	retlw	89	;'Y'
   487  093E  346F               	retlw	111	;'o'
   488  093F  3475               	retlw	117	;'u'
   489  0940  3420               	retlw	32	;' '
   490  0941  3468               	retlw	104	;'h'
   491  0942  3461               	retlw	97	;'a'
   492  0943  3476               	retlw	118	;'v'
   493  0944  3465               	retlw	101	;'e'
   494  0945  3420               	retlw	32	;' '
   495  0946  3465               	retlw	101	;'e'
   496  0947  346E               	retlw	110	;'n'
   497  0948  3474               	retlw	116	;'t'
   498  0949  3465               	retlw	101	;'e'
   499  094A  3472               	retlw	114	;'r'
   500  094B  3465               	retlw	101	;'e'
   501  094C  3464               	retlw	100	;'d'
   502  094D  3420               	retlw	32	;' '
   503  094E  3463               	retlw	99	;'c'
   504  094F  3468               	retlw	104	;'h'
   505  0950  346F               	retlw	111	;'o'
   506  0951  3469               	retlw	105	;'i'
   507  0952  3463               	retlw	99	;'c'
   508  0953  3465               	retlw	101	;'e'
   509  0954  3420               	retlw	32	;' '
   510  0955  346E               	retlw	110	;'n'
   511  0956  3475               	retlw	117	;'u'
   512  0957  346D               	retlw	109	;'m'
   513  0958  3462               	retlw	98	;'b'
   514  0959  3465               	retlw	101	;'e'
   515  095A  3472               	retlw	114	;'r'
   516  095B  343A               	retlw	58	;':'
   517  095C  340D               	retlw	13
   518  095D  340A               	retlw	10
   519  095E  3400               	retlw	0
   520  095F                     STR_13:	
   521  095F  340D               	retlw	13
   522  0960  340A               	retlw	10
   523  0961  3443               	retlw	67	;'C'
   524  0962  346C               	retlw	108	;'l'
   525  0963  346F               	retlw	111	;'o'
   526  0964  3473               	retlw	115	;'s'
   527  0965  3469               	retlw	105	;'i'
   528  0966  346E               	retlw	110	;'n'
   529  0967  3467               	retlw	103	;'g'
   530  0968  3420               	retlw	32	;' '
   531  0969  3443               	retlw	67	;'C'
   532  096A  346F               	retlw	111	;'o'
   533  096B  346D               	retlw	109	;'m'
   534  096C  346D               	retlw	109	;'m'
   535  096D  3475               	retlw	117	;'u'
   536  096E  346E               	retlw	110	;'n'
   537  096F  3469               	retlw	105	;'i'
   538  0970  3463               	retlw	99	;'c'
   539  0971  3461               	retlw	97	;'a'
   540  0972  3474               	retlw	116	;'t'
   541  0973  3469               	retlw	105	;'i'
   542  0974  346F               	retlw	111	;'o'
   543  0975  346E               	retlw	110	;'n'
   544  0976  3421               	retlw	33	;'!'
   545  0977  340D               	retlw	13
   546  0978  340A               	retlw	10
   547  0979  3400               	retlw	0
   548  097A                     STR_2:	
   549  097A  340D               	retlw	13
   550  097B  340A               	retlw	10
   551  097C  3454               	retlw	84	;'T'
   552  097D  3461               	retlw	97	;'a'
   553  097E  346B               	retlw	107	;'k'
   554  097F  3469               	retlw	105	;'i'
   555  0980  346E               	retlw	110	;'n'
   556  0981  3467               	retlw	103	;'g'
   557  0982  3420               	retlw	32	;' '
   558  0983  3469               	retlw	105	;'i'
   559  0984  346E               	retlw	110	;'n'
   560  0985  3420               	retlw	32	;' '
   561  0986  3474               	retlw	116	;'t'
   562  0987  3468               	retlw	104	;'h'
   563  0988  3465               	retlw	101	;'e'
   564  0989  3420               	retlw	32	;' '
   565  098A  3474               	retlw	116	;'t'
   566  098B  3465               	retlw	101	;'e'
   567  098C  3478               	retlw	120	;'x'
   568  098D  3474               	retlw	116	;'t'
   569  098E  3420               	retlw	32	;' '
   570  098F  340D               	retlw	13
   571  0990  340A               	retlw	10
   572  0991  3400               	retlw	0
   573  0992                     STR_6:	
   574  0992  340D               	retlw	13
   575  0993  340A               	retlw	10
   576  0994  3449               	retlw	73	;'I'
   577  0995  3432               	retlw	50	;'2'
   578  0996  3443               	retlw	67	;'C'
   579  0997  3420               	retlw	32	;' '
   580  0998  3469               	retlw	105	;'i'
   581  0999  346E               	retlw	110	;'n'
   582  099A  3469               	retlw	105	;'i'
   583  099B  3474               	retlw	116	;'t'
   584  099C  3469               	retlw	105	;'i'
   585  099D  3461               	retlw	97	;'a'
   586  099E  346C               	retlw	108	;'l'
   587  099F  3469               	retlw	105	;'i'
   588  09A0  3473               	retlw	115	;'s'
   589  09A1  3465               	retlw	101	;'e'
   590  09A2  3464               	retlw	100	;'d'
   591  09A3  343A               	retlw	58	;':'
   592  09A4  340D               	retlw	13
   593  09A5  340A               	retlw	10
   594  09A6  3400               	retlw	0
   595  09A7                     STR_5:	
   596  09A7  340D               	retlw	13
   597  09A8  340A               	retlw	10
   598  09A9  3455               	retlw	85	;'U'
   599  09AA  3441               	retlw	65	;'A'
   600  09AB  3452               	retlw	82	;'R'
   601  09AC  3454               	retlw	84	;'T'
   602  09AD  3420               	retlw	32	;' '
   603  09AE  3449               	retlw	73	;'I'
   604  09AF  346E               	retlw	110	;'n'
   605  09B0  3469               	retlw	105	;'i'
   606  09B1  3474               	retlw	116	;'t'
   607  09B2  3469               	retlw	105	;'i'
   608  09B3  3461               	retlw	97	;'a'
   609  09B4  346C               	retlw	108	;'l'
   610  09B5  3469               	retlw	105	;'i'
   611  09B6  3473               	retlw	115	;'s'
   612  09B7  3465               	retlw	101	;'e'
   613  09B8  3464               	retlw	100	;'d'
   614  09B9  340D               	retlw	13
   615  09BA  340A               	retlw	10
   616  09BB  3400               	retlw	0
   617  09BC                     STR_4:	
   618  09BC  3459               	retlw	89	;'Y'
   619  09BD  346F               	retlw	111	;'o'
   620  09BE  3475               	retlw	117	;'u'
   621  09BF  3420               	retlw	32	;' '
   622  09C0  3468               	retlw	104	;'h'
   623  09C1  3461               	retlw	97	;'a'
   624  09C2  3476               	retlw	118	;'v'
   625  09C3  3465               	retlw	101	;'e'
   626  09C4  3420               	retlw	32	;' '
   627  09C5  3465               	retlw	101	;'e'
   628  09C6  346E               	retlw	110	;'n'
   629  09C7  3474               	retlw	116	;'t'
   630  09C8  3465               	retlw	101	;'e'
   631  09C9  3472               	retlw	114	;'r'
   632  09CA  3465               	retlw	101	;'e'
   633  09CB  3464               	retlw	100	;'d'
   634  09CC  343A               	retlw	58	;':'
   635  09CD  340D               	retlw	13
   636  09CE  340A               	retlw	10
   637  09CF  3400               	retlw	0
   638  09D0                     STR_15:	
   639  09D0  340D               	retlw	13
   640  09D1  340A               	retlw	10
   641  09D2  3444               	retlw	68	;'D'
   642  09D3  3461               	retlw	97	;'a'
   643  09D4  3474               	retlw	116	;'t'
   644  09D5  3461               	retlw	97	;'a'
   645  09D6  3420               	retlw	32	;' '
   646  09D7  3472               	retlw	114	;'r'
   647  09D8  346F               	retlw	111	;'o'
   648  09D9  3475               	retlw	117	;'u'
   649  09DA  3474               	retlw	116	;'t'
   650  09DB  3469               	retlw	105	;'i'
   651  09DC  346E               	retlw	110	;'n'
   652  09DD  3465               	retlw	101	;'e'
   653  09DE  340D               	retlw	13
   654  09DF  340A               	retlw	10
   655  09E0  3400               	retlw	0
   656  09E1                     STR_10:	
   657  09E1  340D               	retlw	13
   658  09E2  340A               	retlw	10
   659  09E3  3441               	retlw	65	;'A'
   660  09E4  3464               	retlw	100	;'d'
   661  09E5  3464               	retlw	100	;'d'
   662  09E6  3472               	retlw	114	;'r'
   663  09E7  3465               	retlw	101	;'e'
   664  09E8  3473               	retlw	115	;'s'
   665  09E9  3473               	retlw	115	;'s'
   666  09EA  3420               	retlw	32	;' '
   667  09EB  3473               	retlw	115	;'s'
   668  09EC  3465               	retlw	101	;'e'
   669  09ED  346E               	retlw	110	;'n'
   670  09EE  3474               	retlw	116	;'t'
   671  09EF  340D               	retlw	13
   672  09F0  340A               	retlw	10
   673  09F1  3400               	retlw	0
   674  09F2                     STR_11:	
   675  09F2  340D               	retlw	13
   676  09F3  340A               	retlw	10
   677  09F4  3444               	retlw	68	;'D'
   678  09F5  3461               	retlw	97	;'a'
   679  09F6  3474               	retlw	116	;'t'
   680  09F7  3461               	retlw	97	;'a'
   681  09F8  3420               	retlw	32	;' '
   682  09F9  3473               	retlw	115	;'s'
   683  09FA  3465               	retlw	101	;'e'
   684  09FB  346E               	retlw	110	;'n'
   685  09FC  3474               	retlw	116	;'t'
   686  09FD  340D               	retlw	13
   687  09FE  340A               	retlw	10
   688  09FF  3400               	retlw	0
   689  0A00                     STR_16:	
   690  0A00  344B               	retlw	75	;'K'
   691  0A01  3465               	retlw	101	;'e'
   692  0A02  3479               	retlw	121	;'y'
   693  0A03  3465               	retlw	101	;'e'
   694  0A04  3464               	retlw	100	;'d'
   695  0A05  3420               	retlw	32	;' '
   696  0A06  3469               	retlw	105	;'i'
   697  0A07  346E               	retlw	110	;'n'
   698  0A08  3420               	retlw	32	;' '
   699  0A09  340D               	retlw	13
   700  0A0A  340A               	retlw	10
   701  0A0B  3400               	retlw	0
   702  0A0C                     __end_of__stringdata:	
   703                           
   704                           ; #config settings
   705  0000                     
   706                           	psect	cinit
   707  07F4                     start_initialization:	
   708  07F4                     __initialization:	
   709                           
   710                           ; Clear objects allocated to BITBANK0
   711  07F4  01EB               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   712                           
   713                           ; Clear objects allocated to BANK0
   714  07F5  1383               	bcf	3,7	;select IRP bank0
   715  07F6  3053               	movlw	low __pbssBANK0
   716  07F7  0084               	movwf	4
   717  07F8  306B               	movlw	low (__pbssBANK0+24)
   718  07F9  120A  118A  2384   	fcall	clear_ram0
   719  07FC                     end_of_initialization:	
   720                           ;End of C runtime variable initialization code
   721                           
   722  07FC                     __end_of__initialization:	
   723  07FC  0183               	clrf	3
   724  07FD  120A  118A  2E44   	ljmp	_main	;jump to C main() function
   725                           
   726                           	psect	bitbssBANK0
   727  0358                     __pbitbssBANK0:	
   728  0358                     _IC2_ack:	
   729  0358                     	ds	1
   730                           
   731                           	psect	bssBANK0
   732  0053                     __pbssBANK0:	
   733  0053                     I2C_address_send1@con:	
   734  0053                     	ds	1
   735  0054                     I2C_address_send2@con:	
   736  0054                     	ds	1
   737  0055                     I2C_address_send@con:	
   738  0055                     	ds	1
   739  0056                     _is:	
   740  0056                     	ds	1
   741  0057                     UART_Read_Text@string:	
   742  0057                     	ds	20
   743                           
   744                           	psect	clrtext
   745  0384                     clear_ram0:	
   746                           ;	Called with FSR containing the base address, and
   747                           ;	W with the last address+1
   748                           
   749  0384  0064               	clrwdt	;clear the watchdog before getting into this loop
   750  0385                     clrloop0:	
   751  0385  0180               	clrf	0	;clear RAM location pointed to by FSR
   752  0386  0A84               	incf	4,f	;increment pointer
   753  0387  0604               	xorwf	4,w	;XOR with final address
   754  0388  1903               	btfsc	3,2	;have we reached the end yet?
   755  0389  3400               	retlw	0	;all done for this memory range, return
   756  038A  0604               	xorwf	4,w	;XOR again to restore value
   757  038B  2B85               	goto	clrloop0	;do the next byte
   758                           
   759                           	psect	cstackCOMMON
   760  0070                     __pcstackCOMMON:	
   761  0070                     ?_I2C_init:	
   762  0070                     ??_I2C_init:	
   763                           ; 0 bytes @ 0x0
   764                           
   765  0070                     ?_i2c_idle:	
   766                           ; 0 bytes @ 0x0
   767                           
   768  0070                     ??_i2c_idle:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  0070                     ??_UART_Read:	
   772                           ; 0 bytes @ 0x0
   773                           
   774  0070                     ?_UART_Write:	
   775                           ; 0 bytes @ 0x0
   776                           
   777  0070                     ??_UART_Write:	
   778                           ; 0 bytes @ 0x0
   779                           
   780  0070                     ?_I2C_Start:	
   781                           ; 0 bytes @ 0x0
   782                           
   783  0070                     ??_I2C_Start:	
   784                           ; 0 bytes @ 0x0
   785                           
   786  0070                     ??_I2C_address_send:	
   787                           ; 0 bytes @ 0x0
   788                           
   789  0070                     ?_I2C_Write:	
   790                           ; 0 bytes @ 0x0
   791                           
   792  0070                     ?_I2C_Write_Text:	
   793                           ; 0 bytes @ 0x0
   794                           
   795  0070                     ?_I2C_Stop:	
   796                           ; 0 bytes @ 0x0
   797                           
   798  0070                     ??_I2C_Stop:	
   799                           ; 0 bytes @ 0x0
   800                           
   801  0070                     ??_I2C_address_send1:	
   802                           ; 0 bytes @ 0x0
   803                           
   804  0070                     ??_I2C_address_send2:	
   805                           ; 0 bytes @ 0x0
   806                           
   807  0070                     ?_delay1ms:	
   808                           ; 0 bytes @ 0x0
   809                           
   810  0070                     ??_delay1ms:	
   811                           ; 0 bytes @ 0x0
   812                           
   813  0070                     ?_main:	
   814                           ; 0 bytes @ 0x0
   815                           
   816  0070                     ?_UART_Read_Text:	
   817                           ; 0 bytes @ 0x0
   818                           
   819  0070                     ?_UART_Read:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_I2C_address_send:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_I2C_address_send1:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_I2C_address_send2:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?___aldiv:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     UART_Write@data:	
   835                           ; 4 bytes @ 0x0
   836                           
   837  0070                     delay1ms@j:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ___aldiv@divisor:	
   841                           ; 2 bytes @ 0x0
   842                           
   843                           
   844                           ; 4 bytes @ 0x0
   845  0070                     	ds	1
   846  0071                     ?_UART_Write_Text:	
   847  0071                     UART_Write_Text@text:	
   848                           ; 0 bytes @ 0x1
   849                           
   850                           
   851                           ; 2 bytes @ 0x1
   852  0071                     	ds	1
   853  0072                     ?_delay_ms:	
   854  0072                     delay_ms@i:	
   855                           ; 0 bytes @ 0x2
   856                           
   857                           
   858                           ; 2 bytes @ 0x2
   859  0072                     	ds	1
   860  0073                     ??_UART_Write_Text:	
   861                           
   862                           ; 0 bytes @ 0x3
   863  0073                     	ds	1
   864  0074                     ??_delay_ms:	
   865  0074                     ___aldiv@dividend:	
   866                           ; 0 bytes @ 0x4
   867                           
   868                           
   869                           ; 4 bytes @ 0x4
   870  0074                     	ds	2
   871  0076                     UART_Write_Text@i:	
   872                           
   873                           ; 2 bytes @ 0x6
   874  0076                     	ds	2
   875  0078                     ??_UART_Read_Text:	
   876  0078                     ??_I2C_Write:	
   877                           ; 0 bytes @ 0x8
   878                           
   879  0078                     ??___aldiv:	
   880                           ; 0 bytes @ 0x8
   881                           
   882  0078                     I2C_Write@Data:	
   883                           ; 0 bytes @ 0x8
   884                           
   885                           
   886                           ; 1 bytes @ 0x8
   887  0078                     	ds	1
   888  0079                     ??_I2C_Write_Text:	
   889  0079                     UART_Init@x:	
   890                           ; 0 bytes @ 0x9
   891                           
   892  0079                     UART_Read_Text@a:	
   893                           ; 2 bytes @ 0x9
   894                           
   895                           
   896                           ; 2 bytes @ 0x9
   897  0079                     	ds	1
   898  007A                     I2C_Write_Text@i:	
   899                           
   900                           ; 2 bytes @ 0xA
   901  007A                     	ds	1
   902  007B                     UART_Read_Text@x:	
   903                           
   904                           ; 1 bytes @ 0xB
   905  007B                     	ds	1
   906  007C                     I2C_Write_Text@s:	
   907  007C                     UART_Read_Text@i:	
   908                           ; 1 bytes @ 0xC
   909                           
   910                           
   911                           ; 1 bytes @ 0xC
   912  007C                     	ds	1
   913  007D                     ??_main:	
   914                           
   915                           ; 0 bytes @ 0xD
   916  007D                     	ds	1
   917                           
   918                           	psect	cstackBANK0
   919  0020                     __pcstackBANK0:	
   920  0020                     ___aldiv@counter:	
   921                           
   922                           ; 1 bytes @ 0x0
   923  0020                     	ds	1
   924  0021                     ___aldiv@sign:	
   925                           
   926                           ; 1 bytes @ 0x1
   927  0021                     	ds	1
   928  0022                     ___aldiv@quotient:	
   929                           
   930                           ; 4 bytes @ 0x2
   931  0022                     	ds	4
   932  0026                     ?_UART_Init:	
   933  0026                     UART_Init@baudrate:	
   934                           ; 1 bytes @ 0x6
   935                           
   936                           
   937                           ; 4 bytes @ 0x6
   938  0026                     	ds	4
   939  002A                     ??_UART_Init:	
   940                           
   941                           ; 0 bytes @ 0xA
   942  002A                     	ds	12
   943  0036                     main@msg4:	
   944                           
   945                           ; 2 bytes @ 0x16
   946  0036                     	ds	2
   947  0038                     main@msg5:	
   948                           
   949                           ; 2 bytes @ 0x18
   950  0038                     	ds	2
   951  003A                     main@mas:	
   952                           
   953                           ; 2 bytes @ 0x1A
   954  003A                     	ds	2
   955  003C                     main@arr1:	
   956                           
   957                           ; 2 bytes @ 0x1C
   958  003C                     	ds	2
   959  003E                     main@arr2:	
   960                           
   961                           ; 2 bytes @ 0x1E
   962  003E                     	ds	2
   963  0040                     main@arr3:	
   964                           
   965                           ; 2 bytes @ 0x20
   966  0040                     	ds	2
   967  0042                     main@arr4:	
   968                           
   969                           ; 2 bytes @ 0x22
   970  0042                     	ds	2
   971  0044                     main@arr5:	
   972                           
   973                           ; 2 bytes @ 0x24
   974  0044                     	ds	2
   975  0046                     main@msg1:	
   976                           
   977                           ; 2 bytes @ 0x26
   978  0046                     	ds	2
   979  0048                     main@msg2:	
   980                           
   981                           ; 2 bytes @ 0x28
   982  0048                     	ds	2
   983  004A                     main@msg3:	
   984                           
   985                           ; 2 bytes @ 0x2A
   986  004A                     	ds	2
   987  004C                     main@err:	
   988                           
   989                           ; 2 bytes @ 0x2C
   990  004C                     	ds	2
   991  004E                     main@fin:	
   992                           
   993                           ; 2 bytes @ 0x2E
   994  004E                     	ds	2
   995  0050                     main@msgm:	
   996                           
   997                           ; 2 bytes @ 0x30
   998  0050                     	ds	2
   999  0052                     main@choice:	
  1000                           
  1001                           ; 1 bytes @ 0x32
  1002  0052                     	ds	1
  1003                           
  1004                           	psect	maintext
  1005  0644                     __pmaintext:	
  1006 ;;
  1007 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1008 ;;
  1009 ;; *************** function _main *****************
  1010 ;; Defined at:
  1011 ;;		line 75 in file "Masterst.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  msgm            2   48[BANK0 ] PTR const unsigned char 
  1016 ;;		 -> STR_14(36), 
  1017 ;;  fin             2   46[BANK0 ] PTR const unsigned char 
  1018 ;;		 -> STR_13(27), 
  1019 ;;  err             2   44[BANK0 ] PTR const unsigned char 
  1020 ;;		 -> STR_12(54), 
  1021 ;;  msg3            2   42[BANK0 ] PTR const unsigned char 
  1022 ;;		 -> STR_9(38), 
  1023 ;;  msg2            2   40[BANK0 ] PTR const unsigned char 
  1024 ;;		 -> STR_8(38), 
  1025 ;;  msg1            2   38[BANK0 ] PTR const unsigned char 
  1026 ;;		 -> STR_7(38), 
  1027 ;;  arr5            2   36[BANK0 ] PTR const unsigned char 
  1028 ;;		 -> STR_6(21), 
  1029 ;;  arr4            2   34[BANK0 ] PTR const unsigned char 
  1030 ;;		 -> STR_5(21), 
  1031 ;;  arr3            2   32[BANK0 ] PTR const unsigned char 
  1032 ;;		 -> STR_4(20), 
  1033 ;;  arr2            2   30[BANK0 ] PTR const unsigned char 
  1034 ;;		 -> STR_3(97), 
  1035 ;;  arr1            2   28[BANK0 ] PTR const unsigned char 
  1036 ;;		 -> STR_2(24), 
  1037 ;;  mas             2   26[BANK0 ] PTR const unsigned char 
  1038 ;;		 -> STR_1(50), 
  1039 ;;  msg5            2   24[BANK0 ] PTR const unsigned char 
  1040 ;;		 -> STR_11(14), 
  1041 ;;  msg4            2   22[BANK0 ] PTR const unsigned char 
  1042 ;;		 -> STR_10(17), 
  1043 ;;  choice          1   50[BANK0 ] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;		None               void
  1046 ;; Registers used:
  1047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 17F/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0      29       0       0       0
  1055 ;;      Temps:          1       0       0       0       0
  1056 ;;      Totals:         1      29       0       0       0
  1057 ;;Total ram usage:       30 bytes
  1058 ;; Hardware stack levels required when called:    4
  1059 ;; This function calls:
  1060 ;;		_I2C_Start
  1061 ;;		_I2C_Stop
  1062 ;;		_I2C_Write
  1063 ;;		_I2C_Write_Text
  1064 ;;		_I2C_address_send
  1065 ;;		_I2C_address_send1
  1066 ;;		_I2C_address_send2
  1067 ;;		_I2C_init
  1068 ;;		_UART_Init
  1069 ;;		_UART_Read
  1070 ;;		_UART_Read_Text
  1071 ;;		_UART_Write
  1072 ;;		_UART_Write_Text
  1073 ;;		_delay_ms
  1074 ;;		_i2c_idle
  1075 ;; This function is called by:
  1076 ;;		Startup code after reset
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _main
  1082  0644                     _main:	
  1083                           
  1084                           ;Masterst.c: 77: const unsigned char *mas="\r\n---------------MASTER DEVICE-------------
      +                          ----\r\n";
  1085                           
  1086                           ;incstack = 0
  1087                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1088  0644  3097               	movlw	low (STR_1| (0+32768))
  1089  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0647  00BA               	movwf	main@mas
  1092  0648  3088               	movlw	high (STR_1| (0+32768))
  1093  0649  00BB               	movwf	main@mas+1
  1094                           
  1095                           ;Masterst.c: 79: const unsigned char * arr1 = "\r\nTaking in the text \r\n";
  1096  064A  307A               	movlw	low (STR_2| (0+32768))
  1097  064B  00BC               	movwf	main@arr1
  1098  064C  3089               	movlw	high (STR_2| (0+32768))
  1099  064D  00BD               	movwf	main@arr1+1
  1100                           
  1101                           ;Masterst.c: 81: const unsigned char *arr2="\r\nEnter your choice \r\n 1.Slave 1(Address
      +                          :0xAA\r\n2.Slave 2(Address:0xBB)\r\n3.Slave 3(Address:0xCC\r\n";
  1102  064E  3000               	movlw	low (STR_3| (0+32768))
  1103  064F  00BE               	movwf	main@arr2
  1104  0650  3088               	movlw	high (STR_3| (0+32768))
  1105  0651  00BF               	movwf	main@arr2+1
  1106                           
  1107                           ;Masterst.c: 83: const unsigned char *arr3= "You have entered:\r\n";
  1108  0652  30BC               	movlw	low (STR_4| (0+32768))
  1109  0653  00C0               	movwf	main@arr3
  1110  0654  3089               	movlw	high (STR_4| (0+32768))
  1111  0655  00C1               	movwf	main@arr3+1
  1112                           
  1113                           ;Masterst.c: 85: const unsigned char *arr4= "\r\nUART Initialised\r\n";
  1114  0656  30A7               	movlw	low (STR_5| (0+32768))
  1115  0657  00C2               	movwf	main@arr4
  1116  0658  3089               	movlw	high (STR_5| (0+32768))
  1117  0659  00C3               	movwf	main@arr4+1
  1118                           
  1119                           ;Masterst.c: 87: const unsigned char *arr5= "\r\nI2C initialised:\r\n";
  1120  065A  3092               	movlw	low (STR_6| (0+32768))
  1121  065B  00C4               	movwf	main@arr5
  1122  065C  3089               	movlw	high (STR_6| (0+32768))
  1123  065D  00C5               	movwf	main@arr5+1
  1124                           
  1125                           ;Masterst.c: 89: const unsigned char *msg1="\r\nSending to Slave 1 (Address 0xAA)\r\n";
  1126  065E  30C9               	movlw	low (STR_7| (0+32768))
  1127  065F  00C6               	movwf	main@msg1
  1128  0660  3088               	movlw	high (STR_7| (0+32768))
  1129  0661  00C7               	movwf	main@msg1+1
  1130                           
  1131                           ;Masterst.c: 91: const unsigned char *msg2="\r\nSending to Slave 2 (Address 0xBB)\r\n";
  1132  0662  30EF               	movlw	low (STR_8| (0+32768))
  1133  0663  00C8               	movwf	main@msg2
  1134  0664  3088               	movlw	high (STR_8| (0+32768))
  1135  0665  00C9               	movwf	main@msg2+1
  1136                           
  1137                           ;Masterst.c: 93: const unsigned char *msg3="\r\nSending to Slave 3 (Address 0xCC)\r\n";
  1138  0666  3015               	movlw	low (STR_9| (0+32768))
  1139  0667  00CA               	movwf	main@msg3
  1140  0668  3089               	movlw	high (STR_9| (0+32768))
  1141  0669  00CB               	movwf	main@msg3+1
  1142                           
  1143                           ;Masterst.c: 95: const unsigned char *msg4="\r\nAddress sent\r\n";
  1144  066A  30E1               	movlw	low (STR_10| (0+32768))
  1145  066B  00B6               	movwf	main@msg4
  1146  066C  3089               	movlw	high (STR_10| (0+32768))
  1147  066D  00B7               	movwf	main@msg4+1
  1148                           
  1149                           ;Masterst.c: 97: const unsigned char *msg5="\r\nData sent\r\n";
  1150  066E  30F2               	movlw	low (STR_11| (0+32768))
  1151  066F  00B8               	movwf	main@msg5
  1152  0670  3089               	movlw	high (STR_11| (0+32768))
  1153  0671  00B9               	movwf	main@msg5+1
  1154                           
  1155                           ;Masterst.c: 103: const unsigned char *err="\r\nNo message will be sent since no slave n
      +                          o entered\r\n";
  1156  0672  3061               	movlw	low (STR_12| (0+32768))
  1157  0673  00CC               	movwf	main@err
  1158  0674  3088               	movlw	high (STR_12| (0+32768))
  1159  0675  00CD               	movwf	main@err+1
  1160                           
  1161                           ;Masterst.c: 105: const unsigned char *fin="\r\nClosing Communication!\r\n";
  1162  0676  305F               	movlw	low (STR_13| (0+32768))
  1163  0677  00CE               	movwf	main@fin
  1164  0678  3089               	movlw	high (STR_13| (0+32768))
  1165  0679  00CF               	movwf	main@fin+1
  1166                           
  1167                           ;Masterst.c: 107: const unsigned char *msgm="\r\nYou have entered choice number:\r\n";
  1168  067A  303B               	movlw	low (STR_14| (0+32768))
  1169  067B  00D0               	movwf	main@msgm
  1170  067C  3089               	movlw	high (STR_14| (0+32768))
  1171  067D  00D1               	movwf	main@msgm+1
  1172                           
  1173                           ;Masterst.c: 109: unsigned char choice;
  1174                           ;Masterst.c: 111: OSCCONbits.IRCF = 0x07;
  1175  067E  3070               	movlw	112
  1176  067F  1683               	bsf	3,5	;RP0=1, select bank1
  1177  0680  1303               	bcf	3,6	;RP1=0, select bank1
  1178  0681  048F               	iorwf	15,f	;volatile
  1179  0682                     l85:	
  1180                           ;Masterst.c: 113: while(!OSCCONbits.HTS);
  1181                           
  1182  0682  1D0F               	btfss	15,2	;volatile
  1183  0683  2E82               	goto	l85
  1184                           
  1185                           ;Masterst.c: 115: INTCON=0;
  1186  0684  018B               	clrf	11	;volatile
  1187                           
  1188                           ;Masterst.c: 117: UART_Init(9600);
  1189  0685  3000               	movlw	0
  1190  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0688  00A9               	movwf	UART_Init@baudrate+3
  1193  0689  3000               	movlw	0
  1194  068A  00A8               	movwf	UART_Init@baudrate+2
  1195  068B  3025               	movlw	37
  1196  068C  00A7               	movwf	UART_Init@baudrate+1
  1197  068D  3080               	movlw	128
  1198  068E  00A6               	movwf	UART_Init@baudrate
  1199  068F  120A  118A  2553  120A  118A  	fcall	_UART_Init
  1200                           
  1201                           ;Masterst.c: 119: UART_Write_Text(mas);
  1202  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1203  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1204  0696  083B               	movf	main@mas+1,w
  1205  0697  01F2               	clrf	UART_Write_Text@text+1
  1206  0698  07F2               	addwf	UART_Write_Text@text+1,f
  1207  0699  083A               	movf	main@mas,w
  1208  069A  01F1               	clrf	UART_Write_Text@text
  1209  069B  07F1               	addwf	UART_Write_Text@text,f
  1210  069C  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1211                           
  1212                           ;Masterst.c: 121: UART_Write_Text(arr4);
  1213  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1214  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1215  06A3  0843               	movf	main@arr4+1,w
  1216  06A4  01F2               	clrf	UART_Write_Text@text+1
  1217  06A5  07F2               	addwf	UART_Write_Text@text+1,f
  1218  06A6  0842               	movf	main@arr4,w
  1219  06A7  01F1               	clrf	UART_Write_Text@text
  1220  06A8  07F1               	addwf	UART_Write_Text@text,f
  1221  06A9  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1222                           
  1223                           ;Masterst.c: 123: delay_ms(500);
  1224  06AE  30F4               	movlw	244
  1225  06AF  00F2               	movwf	delay_ms@i
  1226  06B0  3001               	movlw	1
  1227  06B1  00F3               	movwf	delay_ms@i+1
  1228  06B2  120A  118A  23C4  120A  118A  	fcall	_delay_ms
  1229                           
  1230                           ;Masterst.c: 125: I2C_init();
  1231  06B7  120A  118A  23E7  120A  118A  	fcall	_I2C_init
  1232                           
  1233                           ;Masterst.c: 127: UART_Write_Text(arr5);
  1234  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1235  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1236  06BE  0845               	movf	main@arr5+1,w
  1237  06BF  01F2               	clrf	UART_Write_Text@text+1
  1238  06C0  07F2               	addwf	UART_Write_Text@text+1,f
  1239  06C1  0844               	movf	main@arr5,w
  1240  06C2                     L1:	
  1241  06C2  01F1               	clrf	UART_Write_Text@text
  1242  06C3  07F1               	addwf	UART_Write_Text@text,f
  1243  06C4  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1244                           
  1245                           ;Masterst.c: 131: {
  1246                           ;Masterst.c: 132: UART_Write_Text(arr1);
  1247                           
  1248                           ;Masterst.c: 130: while(1)
  1249  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1250  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1251  06CB  083D               	movf	main@arr1+1,w
  1252  06CC  01F2               	clrf	UART_Write_Text@text+1
  1253  06CD  07F2               	addwf	UART_Write_Text@text+1,f
  1254  06CE  083C               	movf	main@arr1,w
  1255  06CF  01F1               	clrf	UART_Write_Text@text
  1256  06D0  07F1               	addwf	UART_Write_Text@text,f
  1257  06D1  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1258                           
  1259                           ;Masterst.c: 134: i2c_idle();
  1260  06D6  120A  118A  239E  120A  118A  	fcall	_i2c_idle
  1261                           
  1262                           ;Masterst.c: 138: is=UART_Read_Text();
  1263  06DB  120A  118A  245C  120A  118A  	fcall	_UART_Read_Text
  1264  06E0  00FD               	movwf	??_main
  1265  06E1  087D               	movf	??_main,w
  1266  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1267  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1268  06E4  00D6               	movwf	_is
  1269                           
  1270                           ;Masterst.c: 140: UART_Write_Text(arr3);
  1271  06E5  0841               	movf	main@arr3+1,w
  1272  06E6  01F2               	clrf	UART_Write_Text@text+1
  1273  06E7  07F2               	addwf	UART_Write_Text@text+1,f
  1274  06E8  0840               	movf	main@arr3,w
  1275  06E9  01F1               	clrf	UART_Write_Text@text
  1276  06EA  07F1               	addwf	UART_Write_Text@text,f
  1277  06EB  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1278                           
  1279                           ;Masterst.c: 142: UART_Write_Text(is);
  1280  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1281  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1282  06F2  0856               	movf	_is,w
  1283  06F3  00F1               	movwf	UART_Write_Text@text
  1284  06F4  3000               	movlw	0
  1285  06F5  00F2               	movwf	UART_Write_Text@text+1
  1286  06F6  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1287                           
  1288                           ;Masterst.c: 144: UART_Write_Text(arr2);
  1289  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1290  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1291  06FD  083F               	movf	main@arr2+1,w
  1292  06FE  01F2               	clrf	UART_Write_Text@text+1
  1293  06FF  07F2               	addwf	UART_Write_Text@text+1,f
  1294  0700  083E               	movf	main@arr2,w
  1295  0701  01F1               	clrf	UART_Write_Text@text
  1296  0702  07F1               	addwf	UART_Write_Text@text,f
  1297  0703  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1298                           
  1299                           ;Masterst.c: 146: choice=UART_Read();
  1300  0708  120A  118A  237E  120A  118A  	fcall	_UART_Read
  1301  070D  00FD               	movwf	??_main
  1302  070E  087D               	movf	??_main,w
  1303  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0711  00D2               	movwf	main@choice
  1306                           
  1307                           ;Masterst.c: 148: UART_Write_Text(msgm);
  1308  0712  0851               	movf	main@msgm+1,w
  1309  0713  01F2               	clrf	UART_Write_Text@text+1
  1310  0714  07F2               	addwf	UART_Write_Text@text+1,f
  1311  0715  0850               	movf	main@msgm,w
  1312  0716  01F1               	clrf	UART_Write_Text@text
  1313  0717  07F1               	addwf	UART_Write_Text@text,f
  1314  0718  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1315                           
  1316                           ;Masterst.c: 150: UART_Write(choice);
  1317  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1318  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1319  071F  0852               	movf	main@choice,w
  1320  0720  120A  118A  23A7  120A  118A  	fcall	_UART_Write
  1321                           
  1322                           ;Masterst.c: 152: switch(choice)
  1323  0725  2FDF               	goto	l1289
  1324  0726                     l1255:	
  1325                           ;Masterst.c: 153: {
  1326                           ;Masterst.c: 154: case 0x31:
  1327                           
  1328                           
  1329                           ;Masterst.c: 155: {
  1330                           ;Masterst.c: 156: UART_Write_Text(msg1);
  1331  0726  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0727  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0728  0847               	movf	main@msg1+1,w
  1334  0729  01F2               	clrf	UART_Write_Text@text+1
  1335  072A  07F2               	addwf	UART_Write_Text@text+1,f
  1336  072B  0846               	movf	main@msg1,w
  1337  072C  01F1               	clrf	UART_Write_Text@text
  1338  072D  07F1               	addwf	UART_Write_Text@text,f
  1339  072E  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1340                           
  1341                           ;Masterst.c: 158: I2C_Start();
  1342  0733  120A  118A  238C  120A  118A  	fcall	_I2C_Start
  1343                           
  1344                           ;Masterst.c: 160: if(I2C_address_send())
  1345  0738  120A  118A  23FB  120A  118A  	fcall	_I2C_address_send
  1346  073D  3A00               	xorlw	0
  1347  073E  1903               	skipnz
  1348  073F  2FEC               	goto	l93
  1349                           
  1350                           ;Masterst.c: 161: {
  1351                           ;Masterst.c: 162: I2C_Write(is[0]);
  1352  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0742  0856               	movf	_is,w
  1355  0743  0084               	movwf	4
  1356  0744  1383               	bcf	3,7	;select IRP bank0
  1357  0745  0800               	movf	0,w
  1358  0746  120A  118A  23D4  120A  118A  	fcall	_I2C_Write
  1359                           
  1360                           ;Masterst.c: 163: I2C_Write_Text(is);
  1361  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1362  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1363  074D  0856               	movf	_is,w
  1364  074E  120A  118A  243D  120A  118A  	fcall	_I2C_Write_Text
  1365                           
  1366                           ;Masterst.c: 164: I2C_Write('\b');
  1367  0753  3008               	movlw	8
  1368  0754  120A  118A  23D4  120A  118A  	fcall	_I2C_Write
  1369                           
  1370                           ;Masterst.c: 170: I2C_Stop();
  1371                           
  1372                           ;Masterst.c: 168: else
  1373                           ;Masterst.c: 169: break;
  1374                           
  1375                           ;Masterst.c: 166: }
  1376  0759  120A  118A  2395  120A  118A  	fcall	_I2C_Stop
  1377                           
  1378                           ;Masterst.c: 171: break;
  1379  075E  2FEC               	goto	l93
  1380  075F                     l1265:	
  1381                           ;Masterst.c: 172: }
  1382                           ;Masterst.c: 174: case 0x32:
  1383                           
  1384                           
  1385                           ;Masterst.c: 176: {
  1386                           ;Masterst.c: 177: UART_Write_Text(msg2);
  1387  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1388  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1389  0761  0849               	movf	main@msg2+1,w
  1390  0762  01F2               	clrf	UART_Write_Text@text+1
  1391  0763  07F2               	addwf	UART_Write_Text@text+1,f
  1392  0764  0848               	movf	main@msg2,w
  1393  0765  01F1               	clrf	UART_Write_Text@text
  1394  0766  07F1               	addwf	UART_Write_Text@text,f
  1395  0767  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1396                           
  1397                           ;Masterst.c: 179: I2C_Start();
  1398  076C  120A  118A  238C  120A  118A  	fcall	_I2C_Start
  1399                           
  1400                           ;Masterst.c: 181: if(I2C_address_send1())
  1401  0771  120A  118A  2411  120A  118A  	fcall	_I2C_address_send1
  1402  0776  3A00               	xorlw	0
  1403  0777  1903               	skipnz
  1404  0778  2FEC               	goto	l93
  1405                           
  1406                           ;Masterst.c: 182: {
  1407                           ;Masterst.c: 183: I2C_Write(is[0]);
  1408  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1409  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1410  077B  0856               	movf	_is,w
  1411  077C  0084               	movwf	4
  1412  077D  1383               	bcf	3,7	;select IRP bank0
  1413  077E  0800               	movf	0,w
  1414  077F  120A  118A  23D4  120A  118A  	fcall	_I2C_Write
  1415                           
  1416                           ;Masterst.c: 184: I2C_Write_Text(is);
  1417  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0786  0856               	movf	_is,w
  1420  0787  120A  118A  243D  120A  118A  	fcall	_I2C_Write_Text
  1421                           
  1422                           ;Masterst.c: 185: I2C_Write('\b');
  1423  078C  3008               	movlw	8
  1424  078D  120A  118A  23D4  120A  118A  	fcall	_I2C_Write
  1425                           
  1426                           ;Masterst.c: 190: I2C_Stop();
  1427                           
  1428                           ;Masterst.c: 188: else
  1429                           ;Masterst.c: 189: break;
  1430                           
  1431                           ;Masterst.c: 187: }
  1432  0792  120A  118A  2395  120A  118A  	fcall	_I2C_Stop
  1433                           
  1434                           ;Masterst.c: 191: break;
  1435  0797  2FEC               	goto	l93
  1436  0798                     l1275:	
  1437                           ;Masterst.c: 192: }
  1438                           ;Masterst.c: 194: case 0x33:
  1439                           
  1440                           
  1441                           ;Masterst.c: 195: {
  1442                           ;Masterst.c: 196: UART_Write_Text(msg3);
  1443  0798  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0799  1303               	bcf	3,6	;RP1=0, select bank0
  1445  079A  084B               	movf	main@msg3+1,w
  1446  079B  01F2               	clrf	UART_Write_Text@text+1
  1447  079C  07F2               	addwf	UART_Write_Text@text+1,f
  1448  079D  084A               	movf	main@msg3,w
  1449  079E  01F1               	clrf	UART_Write_Text@text
  1450  079F  07F1               	addwf	UART_Write_Text@text,f
  1451  07A0  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1452                           
  1453                           ;Masterst.c: 198: I2C_Start();
  1454  07A5  120A  118A  238C  120A  118A  	fcall	_I2C_Start
  1455                           
  1456                           ;Masterst.c: 200: if(I2C_address_send2())
  1457  07AA  120A  118A  2427  120A  118A  	fcall	_I2C_address_send2
  1458  07AF  3A00               	xorlw	0
  1459  07B0  1903               	skipnz
  1460  07B1  2FEC               	goto	l93
  1461                           
  1462                           ;Masterst.c: 201: {
  1463                           ;Masterst.c: 202: I2C_Write(is[0]);
  1464  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1465  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1466  07B4  0856               	movf	_is,w
  1467  07B5  0084               	movwf	4
  1468  07B6  1383               	bcf	3,7	;select IRP bank0
  1469  07B7  0800               	movf	0,w
  1470  07B8  120A  118A  23D4  120A  118A  	fcall	_I2C_Write
  1471                           
  1472                           ;Masterst.c: 203: I2C_Write_Text(is);
  1473  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1474  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1475  07BF  0856               	movf	_is,w
  1476  07C0  120A  118A  243D  120A  118A  	fcall	_I2C_Write_Text
  1477                           
  1478                           ;Masterst.c: 204: I2C_Write('\b');
  1479  07C5  3008               	movlw	8
  1480  07C6  120A  118A  23D4  120A  118A  	fcall	_I2C_Write
  1481                           
  1482                           ;Masterst.c: 209: I2C_Stop();
  1483                           
  1484                           ;Masterst.c: 207: else
  1485                           ;Masterst.c: 208: break;
  1486                           
  1487                           ;Masterst.c: 206: }
  1488  07CB  120A  118A  2395  120A  118A  	fcall	_I2C_Stop
  1489                           
  1490                           ;Masterst.c: 211: break;
  1491  07D0  2FEC               	goto	l93
  1492  07D1                     l1285:	
  1493                           ;Masterst.c: 212: }
  1494                           ;Masterst.c: 213: default:
  1495                           
  1496                           
  1497                           ;Masterst.c: 215: UART_Write_Text(err);
  1498  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1499  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1500  07D3  084D               	movf	main@err+1,w
  1501  07D4  01F2               	clrf	UART_Write_Text@text+1
  1502  07D5  07F2               	addwf	UART_Write_Text@text+1,f
  1503  07D6  084C               	movf	main@err,w
  1504  07D7  01F1               	clrf	UART_Write_Text@text
  1505  07D8  07F1               	addwf	UART_Write_Text@text,f
  1506  07D9  120A  118A  2487  120A  118A  	fcall	_UART_Write_Text
  1507                           
  1508                           ;Masterst.c: 217: }
  1509                           
  1510                           ;Masterst.c: 216: break;
  1511  07DE  2FEC               	goto	l93
  1512  07DF                     l1289:	
  1513  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1514  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1515  07E1  0852               	movf	main@choice,w
  1516                           
  1517                           ; Switch size 1, requested type "space"
  1518                           ; Number of cases is 3, Range of values is 49 to 51
  1519                           ; switch strategies available:
  1520                           ; Name         Instructions Cycles
  1521                           ; simple_byte           10     6 (average)
  1522                           ; direct_byte           20    11 (fixed)
  1523                           ; jumptable            263     9 (fixed)
  1524                           ;	Chosen strategy is simple_byte
  1525  07E2  3A31               	xorlw	49	; case 49
  1526  07E3  1903               	skipnz
  1527  07E4  2F26               	goto	l1255
  1528  07E5  3A03               	xorlw	3	; case 50
  1529  07E6  1903               	skipnz
  1530  07E7  2F5F               	goto	l1265
  1531  07E8  3A01               	xorlw	1	; case 51
  1532  07E9  1903               	skipnz
  1533  07EA  2F98               	goto	l1275
  1534  07EB  2FD1               	goto	l1285
  1535  07EC                     l93:	
  1536                           
  1537                           ;Masterst.c: 220: PIR1bits.SSPIF = 0;
  1538  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  1539  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  1540  07EE  118C               	bcf	12,3	;volatile
  1541                           
  1542                           ;Masterst.c: 223: UART_Write_Text(fin);
  1543  07EF  084F               	movf	main@fin+1,w
  1544  07F0  01F2               	clrf	UART_Write_Text@text+1
  1545  07F1  07F2               	addwf	UART_Write_Text@text+1,f
  1546  07F2  084E               	movf	main@fin,w
  1547  07F3  2EC2               	goto	L1
  1548  07F4                     __end_of_main:	
  1549                           
  1550                           	psect	text1
  1551  039E                     __ptext1:	
  1552 ;; *************** function _i2c_idle *****************
  1553 ;; Defined at:
  1554 ;;		line 451 in file "Masterst.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;		None               void
  1561 ;; Registers used:
  1562 ;;		wreg, status,2
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0
  1571 ;;      Totals:         0       0       0       0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_main
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           
  1582                           ;psect for function _i2c_idle
  1583  039E                     _i2c_idle:	
  1584  039E                     l236:	
  1585                           ;Masterst.c: 453: while((SSPSTATbits.R));
  1586                           
  1587                           ;incstack = 0
  1588                           ; Regs used in _i2c_idle: [wreg+status,2]
  1589                           
  1590  039E  1683               	bsf	3,5	;RP0=1, select bank1
  1591  039F  1303               	bcf	3,6	;RP1=0, select bank1
  1592  03A0  1914               	btfsc	20,2	;volatile
  1593  03A1  2B9E               	goto	l236
  1594  03A2                     l1139:	
  1595                           ;Masterst.c: 455: while((!((SSPCON2 & 0x1F) == 0x00)));
  1596                           
  1597  03A2  0811               	movf	17,w	;volatile
  1598  03A3  391F               	andlw	31
  1599  03A4  1903               	btfsc	3,2
  1600  03A5  0008               	return
  1601  03A6  2BA2               	goto	l1139
  1602  03A7                     __end_of_i2c_idle:	
  1603                           
  1604                           	psect	text2
  1605  03C4                     __ptext2:	
  1606 ;; *************** function _delay_ms *****************
  1607 ;; Defined at:
  1608 ;;		line 335 in file "Masterst.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  i               2    2[COMMON] unsigned int 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;		None               void
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0, pclath, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         2       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0
  1625 ;;      Totals:         2       0       0       0       0
  1626 ;;Total ram usage:        2 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    1
  1629 ;; This function calls:
  1630 ;;		_delay1ms
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _delay_ms
  1638  03C4                     _delay_ms:	
  1639                           
  1640                           ;Masterst.c: 337: for(;i!=0x00;i--)
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  1644  03C4  0873               	movf	delay_ms@i+1,w
  1645  03C5  0472               	iorwf	delay_ms@i,w
  1646  03C6  1903               	btfsc	3,2
  1647  03C7  0008               	return
  1648                           
  1649                           ;Masterst.c: 338: delay1ms();
  1650  03C8  120A  118A  23B5  120A  118A  	fcall	_delay1ms
  1651  03CD  3001               	movlw	1
  1652  03CE  02F2               	subwf	delay_ms@i,f
  1653  03CF  3000               	movlw	0
  1654  03D0  1C03               	skipc
  1655  03D1  03F3               	decf	delay_ms@i+1,f
  1656  03D2  02F3               	subwf	delay_ms@i+1,f
  1657  03D3  2BC4               	goto	_delay_ms
  1658  03D4                     __end_of_delay_ms:	
  1659                           
  1660                           	psect	text3
  1661  03B5                     __ptext3:	
  1662 ;; *************** function _delay1ms *****************
  1663 ;; Defined at:
  1664 ;;		line 341 in file "Masterst.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  j               2    0[COMMON] unsigned int 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;		None               void
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         2       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0
  1681 ;;      Totals:         2       0       0       0       0
  1682 ;;Total ram usage:        2 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_delay_ms
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function _delay1ms
  1693  03B5                     _delay1ms:	
  1694                           
  1695                           ;Masterst.c: 343: unsigned int j = 130;
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _delay1ms: [wreg+status,2+status,0]
  1699  03B5  3082               	movlw	130
  1700  03B6  00F0               	movwf	delay1ms@j
  1701  03B7  3000               	movlw	0
  1702  03B8  00F1               	movwf	delay1ms@j+1
  1703  03B9                     L2:	
  1704                           
  1705                           ;Masterst.c: 344: for (;j!=0x00;j--);
  1706  03B9  0871               	movf	delay1ms@j+1,w
  1707  03BA  0470               	iorwf	delay1ms@j,w
  1708  03BB  1903               	btfsc	3,2
  1709  03BC  0008               	return
  1710  03BD  3001               	movlw	1
  1711  03BE  02F0               	subwf	delay1ms@j,f
  1712  03BF  3000               	movlw	0
  1713  03C0  1C03               	skipc
  1714  03C1  03F1               	decf	delay1ms@j+1,f
  1715  03C2  02F1               	subwf	delay1ms@j+1,f
  1716  03C3  2BB9               	goto	L2
  1717  03C4                     __end_of_delay1ms:	
  1718                           
  1719                           	psect	text4
  1720  045C                     __ptext4:	
  1721 ;; *************** function _UART_Read_Text *****************
  1722 ;; Defined at:
  1723 ;;		line 407 in file "Masterst.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  a               2    9[COMMON] PTR const unsigned char 
  1728 ;;		 -> STR_16(12), 
  1729 ;;  i               1   12[COMMON] unsigned char 
  1730 ;;  x               1   11[COMMON] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      PTR unsigned char 
  1733 ;; Registers used:
  1734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1740 ;;      Params:         0       0       0       0       0
  1741 ;;      Locals:         4       0       0       0       0
  1742 ;;      Temps:          1       0       0       0       0
  1743 ;;      Totals:         5       0       0       0       0
  1744 ;;Total ram usage:        5 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    2
  1747 ;; This function calls:
  1748 ;;		_UART_Read
  1749 ;;		_UART_Write_Text
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           
  1756                           ;psect for function _UART_Read_Text
  1757  045C                     _UART_Read_Text:	
  1758                           
  1759                           ;Masterst.c: 409: unsigned const char *a="Keyed in \r\n";
  1760                           
  1761                           ;incstack = 0
  1762                           ; Regs used in _UART_Read_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1763  045C  3000               	movlw	low (STR_16| (0+32768))
  1764  045D  00F9               	movwf	UART_Read_Text@a
  1765  045E  308A               	movlw	high (STR_16| (0+32768))
  1766  045F  00FA               	movwf	UART_Read_Text@a+1
  1767                           
  1768                           ;Masterst.c: 410: unsigned static char string[20];
  1769                           ;Masterst.c: 411: unsigned char x, i = 0;
  1770  0460  01FC               	clrf	UART_Read_Text@i
  1771  0461                     l1149:	
  1772                           ;Masterst.c: 414: while((x = UART_Read()) != 13)
  1773                           
  1774  0461  120A  118A  237E  120A  118A  	fcall	_UART_Read
  1775  0466  00FB               	movwf	UART_Read_Text@x
  1776  0467  3A0D               	xorlw	13
  1777  0468  1903               	btfsc	3,2
  1778  0469  2C77               	goto	l1151
  1779                           
  1780                           ;Masterst.c: 415: {
  1781                           ;Masterst.c: 417: string[i++] = x;
  1782  046A  087B               	movf	UART_Read_Text@x,w
  1783  046B  00F8               	movwf	??_UART_Read_Text
  1784  046C  087C               	movf	UART_Read_Text@i,w
  1785  046D  3E57               	addlw	UART_Read_Text@string& (0+255)
  1786  046E  0084               	movwf	4
  1787  046F  0878               	movf	??_UART_Read_Text,w
  1788  0470  1383               	bcf	3,7	;select IRP bank0
  1789  0471  0080               	movwf	0
  1790  0472  3001               	movlw	1
  1791  0473  00F8               	movwf	??_UART_Read_Text
  1792  0474  0878               	movf	??_UART_Read_Text,w
  1793  0475  07FC               	addwf	UART_Read_Text@i,f
  1794  0476  2C61               	goto	l1149
  1795  0477                     l1151:	
  1796                           
  1797                           ;Masterst.c: 418: }
  1798                           ;Masterst.c: 421: string[i] = '\0';
  1799  0477  087C               	movf	UART_Read_Text@i,w
  1800  0478  3E57               	addlw	UART_Read_Text@string& (0+255)
  1801  0479  0084               	movwf	4
  1802  047A  1383               	bcf	3,7	;select IRP bank0
  1803  047B  0180               	clrf	0
  1804                           
  1805                           ;Masterst.c: 422: UART_Write_Text(a);
  1806  047C  087A               	movf	UART_Read_Text@a+1,w
  1807  047D  01F2               	clrf	UART_Write_Text@text+1
  1808  047E  07F2               	addwf	UART_Write_Text@text+1,f
  1809  047F  0879               	movf	UART_Read_Text@a,w
  1810  0480  01F1               	clrf	UART_Write_Text@text
  1811  0481  07F1               	addwf	UART_Write_Text@text,f
  1812  0482  120A  118A  2487   	fcall	_UART_Write_Text
  1813                           
  1814                           ;Masterst.c: 425: return(string);
  1815  0485  3057               	movlw	UART_Read_Text@string& (0+255)
  1816  0486  0008               	return
  1817  0487                     __end_of_UART_Read_Text:	
  1818                           
  1819                           	psect	text5
  1820  037E                     __ptext5:	
  1821 ;; *************** function _UART_Read *****************
  1822 ;; Defined at:
  1823 ;;		line 401 in file "Masterst.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      unsigned char 
  1830 ;; Registers used:
  1831 ;;		wreg
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0
  1840 ;;      Totals:         0       0       0       0       0
  1841 ;;Total ram usage:        0 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;;		_UART_Read_Text
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _UART_Read
  1853  037E                     _UART_Read:	
  1854  037E                     l207:	
  1855                           ;Masterst.c: 403: while(!RCIF);
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _UART_Read: [wreg]
  1859                           
  1860  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1861  037F  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0380  1E8C               	btfss	12,5	;volatile
  1863  0381  2B7E               	goto	l207
  1864                           
  1865                           ;Masterst.c: 404: return RCREG;
  1866  0382  081A               	movf	26,w	;volatile
  1867  0383  0008               	return
  1868  0384                     __end_of_UART_Read:	
  1869                           
  1870                           	psect	text6
  1871  0553                     __ptext6:	
  1872 ;; *************** function _UART_Init *****************
  1873 ;; Defined at:
  1874 ;;		line 347 in file "Masterst.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  baudrate        4    6[BANK0 ] long 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  x               2    9[COMMON] unsigned int 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      unsigned char 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       4       0       0       0
  1889 ;;      Locals:         2       0       0       0       0
  1890 ;;      Temps:          0      12       0       0       0
  1891 ;;      Totals:         2      16       0       0       0
  1892 ;;Total ram usage:       18 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    1
  1895 ;; This function calls:
  1896 ;;		___aldiv
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _UART_Init
  1904  0553                     _UART_Init:	
  1905                           
  1906                           ;Masterst.c: 349: unsigned int x;
  1907                           ;Masterst.c: 350: x = (8000000 - baudrate*64)/(baudrate*64);
  1908                           
  1909                           ;incstack = 0
  1910                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1911  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0555  0826               	movf	UART_Init@baudrate,w
  1914  0556  00AA               	movwf	??_UART_Init
  1915  0557  0827               	movf	UART_Init@baudrate+1,w
  1916  0558  00AB               	movwf	??_UART_Init+1
  1917  0559  0828               	movf	UART_Init@baudrate+2,w
  1918  055A  00AC               	movwf	??_UART_Init+2
  1919  055B  0829               	movf	UART_Init@baudrate+3,w
  1920  055C  00AD               	movwf	??_UART_Init+3
  1921  055D  3006               	movlw	6
  1922  055E                     u715:	
  1923  055E  1003               	clrc
  1924  055F  0DAA               	rlf	??_UART_Init,f
  1925  0560  0DAB               	rlf	??_UART_Init+1,f
  1926  0561  0DAC               	rlf	??_UART_Init+2,f
  1927  0562  0DAD               	rlf	??_UART_Init+3,f
  1928  0563  3EFF               	addlw	-1
  1929  0564  1D03               	skipz
  1930  0565  2D5E               	goto	u715
  1931  0566  082D               	movf	??_UART_Init+3,w
  1932  0567  00F3               	movwf	___aldiv@divisor+3
  1933  0568  082C               	movf	??_UART_Init+2,w
  1934  0569  00F2               	movwf	___aldiv@divisor+2
  1935  056A  082B               	movf	??_UART_Init+1,w
  1936  056B  00F1               	movwf	___aldiv@divisor+1
  1937  056C  082A               	movf	??_UART_Init,w
  1938  056D  00F0               	movwf	___aldiv@divisor
  1939  056E  3000               	movlw	0
  1940  056F  00AE               	movwf	??_UART_Init+4
  1941  0570  3012               	movlw	18
  1942  0571  00AF               	movwf	??_UART_Init+5
  1943  0572  307A               	movlw	122
  1944  0573  00B0               	movwf	??_UART_Init+6
  1945  0574  3000               	movlw	0
  1946  0575  00B1               	movwf	??_UART_Init+7
  1947  0576  0826               	movf	UART_Init@baudrate,w
  1948  0577  00B2               	movwf	??_UART_Init+8
  1949  0578  0827               	movf	UART_Init@baudrate+1,w
  1950  0579  00B3               	movwf	??_UART_Init+9
  1951  057A  0828               	movf	UART_Init@baudrate+2,w
  1952  057B  00B4               	movwf	??_UART_Init+10
  1953  057C  0829               	movf	UART_Init@baudrate+3,w
  1954  057D  00B5               	movwf	??_UART_Init+11
  1955  057E  3006               	movlw	6
  1956  057F                     u725:	
  1957  057F  1003               	clrc
  1958  0580  0DB2               	rlf	??_UART_Init+8,f
  1959  0581  0DB3               	rlf	??_UART_Init+9,f
  1960  0582  0DB4               	rlf	??_UART_Init+10,f
  1961  0583  0DB5               	rlf	??_UART_Init+11,f
  1962  0584  3EFF               	addlw	-1
  1963  0585  1D03               	skipz
  1964  0586  2D7F               	goto	u725
  1965  0587  09B2               	comf	??_UART_Init+8,f
  1966  0588  09B3               	comf	??_UART_Init+9,f
  1967  0589  09B4               	comf	??_UART_Init+10,f
  1968  058A  09B5               	comf	??_UART_Init+11,f
  1969  058B  0AB2               	incf	??_UART_Init+8,f
  1970  058C  1903               	skipnz
  1971  058D  0AB3               	incf	??_UART_Init+9,f
  1972  058E  1903               	skipnz
  1973  058F  0AB4               	incf	??_UART_Init+10,f
  1974  0590  1903               	skipnz
  1975  0591  0AB5               	incf	??_UART_Init+11,f
  1976  0592  0832               	movf	??_UART_Init+8,w
  1977  0593  07AE               	addwf	??_UART_Init+4,f
  1978  0594  0833               	movf	??_UART_Init+9,w
  1979  0595  1803               	skipnc
  1980  0596  0F33               	incfsz	??_UART_Init+9,w
  1981  0597  2D99               	goto	u730
  1982  0598  2D9A               	goto	u731
  1983  0599                     u730:	
  1984  0599  07AF               	addwf	??_UART_Init+5,f
  1985  059A                     u731:	
  1986  059A  0834               	movf	??_UART_Init+10,w
  1987  059B  1803               	skipnc
  1988  059C  0F34               	incfsz	??_UART_Init+10,w
  1989  059D  2D9F               	goto	u732
  1990  059E  2DA0               	goto	u733
  1991  059F                     u732:	
  1992  059F  07B0               	addwf	??_UART_Init+6,f
  1993  05A0                     u733:	
  1994  05A0  0835               	movf	??_UART_Init+11,w
  1995  05A1  1803               	skipnc
  1996  05A2  0A35               	incf	??_UART_Init+11,w
  1997  05A3  07B1               	addwf	??_UART_Init+7,f
  1998  05A4  0831               	movf	??_UART_Init+7,w
  1999  05A5  00F7               	movwf	___aldiv@dividend+3
  2000  05A6  0830               	movf	??_UART_Init+6,w
  2001  05A7  00F6               	movwf	___aldiv@dividend+2
  2002  05A8  082F               	movf	??_UART_Init+5,w
  2003  05A9  00F5               	movwf	___aldiv@dividend+1
  2004  05AA  082E               	movf	??_UART_Init+4,w
  2005  05AB  00F4               	movwf	___aldiv@dividend
  2006  05AC  120A  118A  24C4  120A  118A  	fcall	___aldiv
  2007  05B1  0871               	movf	?___aldiv+1,w
  2008  05B2  01FA               	clrf	UART_Init@x+1
  2009  05B3  07FA               	addwf	UART_Init@x+1,f
  2010  05B4  0870               	movf	?___aldiv,w
  2011  05B5  01F9               	clrf	UART_Init@x
  2012  05B6  07F9               	addwf	UART_Init@x,f
  2013                           
  2014                           ;Masterst.c: 351: if(x>255)
  2015  05B7  3001               	movlw	1
  2016  05B8  027A               	subwf	UART_Init@x+1,w
  2017  05B9  3000               	movlw	0
  2018  05BA  1903               	skipnz
  2019  05BB  0279               	subwf	UART_Init@x,w
  2020  05BC  1C03               	skipc
  2021  05BD  2E2F               	goto	l1101
  2022                           
  2023                           ;Masterst.c: 352: {
  2024                           ;Masterst.c: 353: x = (8000000 - baudrate*16)/(baudrate*16);
  2025  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2026  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2027  05C0  0826               	movf	UART_Init@baudrate,w
  2028  05C1  00AA               	movwf	??_UART_Init
  2029  05C2  0827               	movf	UART_Init@baudrate+1,w
  2030  05C3  00AB               	movwf	??_UART_Init+1
  2031  05C4  0828               	movf	UART_Init@baudrate+2,w
  2032  05C5  00AC               	movwf	??_UART_Init+2
  2033  05C6  0829               	movf	UART_Init@baudrate+3,w
  2034  05C7  00AD               	movwf	??_UART_Init+3
  2035  05C8  3004               	movlw	4
  2036  05C9                     u755:	
  2037  05C9  1003               	clrc
  2038  05CA  0DAA               	rlf	??_UART_Init,f
  2039  05CB  0DAB               	rlf	??_UART_Init+1,f
  2040  05CC  0DAC               	rlf	??_UART_Init+2,f
  2041  05CD  0DAD               	rlf	??_UART_Init+3,f
  2042  05CE  3EFF               	addlw	-1
  2043  05CF  1D03               	skipz
  2044  05D0  2DC9               	goto	u755
  2045  05D1  082D               	movf	??_UART_Init+3,w
  2046  05D2  00F3               	movwf	___aldiv@divisor+3
  2047  05D3  082C               	movf	??_UART_Init+2,w
  2048  05D4  00F2               	movwf	___aldiv@divisor+2
  2049  05D5  082B               	movf	??_UART_Init+1,w
  2050  05D6  00F1               	movwf	___aldiv@divisor+1
  2051  05D7  082A               	movf	??_UART_Init,w
  2052  05D8  00F0               	movwf	___aldiv@divisor
  2053  05D9  3000               	movlw	0
  2054  05DA  00AE               	movwf	??_UART_Init+4
  2055  05DB  3012               	movlw	18
  2056  05DC  00AF               	movwf	??_UART_Init+5
  2057  05DD  307A               	movlw	122
  2058  05DE  00B0               	movwf	??_UART_Init+6
  2059  05DF  3000               	movlw	0
  2060  05E0  00B1               	movwf	??_UART_Init+7
  2061  05E1  0826               	movf	UART_Init@baudrate,w
  2062  05E2  00B2               	movwf	??_UART_Init+8
  2063  05E3  0827               	movf	UART_Init@baudrate+1,w
  2064  05E4  00B3               	movwf	??_UART_Init+9
  2065  05E5  0828               	movf	UART_Init@baudrate+2,w
  2066  05E6  00B4               	movwf	??_UART_Init+10
  2067  05E7  0829               	movf	UART_Init@baudrate+3,w
  2068  05E8  00B5               	movwf	??_UART_Init+11
  2069  05E9  3004               	movlw	4
  2070  05EA                     u765:	
  2071  05EA  1003               	clrc
  2072  05EB  0DB2               	rlf	??_UART_Init+8,f
  2073  05EC  0DB3               	rlf	??_UART_Init+9,f
  2074  05ED  0DB4               	rlf	??_UART_Init+10,f
  2075  05EE  0DB5               	rlf	??_UART_Init+11,f
  2076  05EF  3EFF               	addlw	-1
  2077  05F0  1D03               	skipz
  2078  05F1  2DEA               	goto	u765
  2079  05F2  09B2               	comf	??_UART_Init+8,f
  2080  05F3  09B3               	comf	??_UART_Init+9,f
  2081  05F4  09B4               	comf	??_UART_Init+10,f
  2082  05F5  09B5               	comf	??_UART_Init+11,f
  2083  05F6  0AB2               	incf	??_UART_Init+8,f
  2084  05F7  1903               	skipnz
  2085  05F8  0AB3               	incf	??_UART_Init+9,f
  2086  05F9  1903               	skipnz
  2087  05FA  0AB4               	incf	??_UART_Init+10,f
  2088  05FB  1903               	skipnz
  2089  05FC  0AB5               	incf	??_UART_Init+11,f
  2090  05FD  0832               	movf	??_UART_Init+8,w
  2091  05FE  07AE               	addwf	??_UART_Init+4,f
  2092  05FF  0833               	movf	??_UART_Init+9,w
  2093  0600  1803               	skipnc
  2094  0601  0F33               	incfsz	??_UART_Init+9,w
  2095  0602  2E04               	goto	u770
  2096  0603  2E05               	goto	u771
  2097  0604                     u770:	
  2098  0604  07AF               	addwf	??_UART_Init+5,f
  2099  0605                     u771:	
  2100  0605  0834               	movf	??_UART_Init+10,w
  2101  0606  1803               	skipnc
  2102  0607  0F34               	incfsz	??_UART_Init+10,w
  2103  0608  2E0A               	goto	u772
  2104  0609  2E0B               	goto	u773
  2105  060A                     u772:	
  2106  060A  07B0               	addwf	??_UART_Init+6,f
  2107  060B                     u773:	
  2108  060B  0835               	movf	??_UART_Init+11,w
  2109  060C  1803               	skipnc
  2110  060D  0A35               	incf	??_UART_Init+11,w
  2111  060E  07B1               	addwf	??_UART_Init+7,f
  2112  060F  0831               	movf	??_UART_Init+7,w
  2113  0610  00F7               	movwf	___aldiv@dividend+3
  2114  0611  0830               	movf	??_UART_Init+6,w
  2115  0612  00F6               	movwf	___aldiv@dividend+2
  2116  0613  082F               	movf	??_UART_Init+5,w
  2117  0614  00F5               	movwf	___aldiv@dividend+1
  2118  0615  082E               	movf	??_UART_Init+4,w
  2119  0616  00F4               	movwf	___aldiv@dividend
  2120  0617  120A  118A  24C4  120A  118A  	fcall	___aldiv
  2121  061C  0871               	movf	?___aldiv+1,w
  2122  061D  01FA               	clrf	UART_Init@x+1
  2123  061E  07FA               	addwf	UART_Init@x+1,f
  2124  061F  0870               	movf	?___aldiv,w
  2125  0620  01F9               	clrf	UART_Init@x
  2126  0621  07F9               	addwf	UART_Init@x,f
  2127                           
  2128                           ;Masterst.c: 355: BRGH = 1;
  2129  0622  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0623  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0624  1518               	bsf	24,2	;volatile
  2132                           
  2133                           ;Masterst.c: 356: SPBRG = x;
  2134  0625  0879               	movf	UART_Init@x,w
  2135  0626  0099               	movwf	25	;volatile
  2136                           
  2137                           ;Masterst.c: 357: SYNC = 0;
  2138  0627  1218               	bcf	24,4	;volatile
  2139                           
  2140                           ;Masterst.c: 358: SPEN = 1;
  2141  0628  1283               	bcf	3,5	;RP0=0, select bank0
  2142  0629  1303               	bcf	3,6	;RP1=0, select bank0
  2143  062A  1798               	bsf	24,7	;volatile
  2144                           
  2145                           ;Masterst.c: 359: CREN = 1;
  2146  062B  1618               	bsf	24,4	;volatile
  2147                           
  2148                           ;Masterst.c: 360: TXEN = 1;
  2149  062C  1683               	bsf	3,5	;RP0=1, select bank1
  2150  062D  1303               	bcf	3,6	;RP1=0, select bank1
  2151  062E  1698               	bsf	24,5	;volatile
  2152  062F                     l1101:	
  2153                           
  2154                           ;Masterst.c: 361: }
  2155                           ;Masterst.c: 362: if(x<256)
  2156  062F  3001               	movlw	1
  2157  0630  027A               	subwf	UART_Init@x+1,w
  2158  0631  3000               	movlw	0
  2159  0632  1903               	skipnz
  2160  0633  0279               	subwf	UART_Init@x,w
  2161  0634  1803               	skipnc
  2162  0635  0008               	return
  2163                           
  2164                           ;Masterst.c: 363: {
  2165                           ;Masterst.c: 364: BRGH = 0;
  2166  0636  1683               	bsf	3,5	;RP0=1, select bank1
  2167  0637  1303               	bcf	3,6	;RP1=0, select bank1
  2168  0638  1118               	bcf	24,2	;volatile
  2169                           
  2170                           ;Masterst.c: 365: SPBRG = x;
  2171  0639  0879               	movf	UART_Init@x,w
  2172  063A  0099               	movwf	25	;volatile
  2173                           
  2174                           ;Masterst.c: 366: SYNC = 0;
  2175  063B  1218               	bcf	24,4	;volatile
  2176                           
  2177                           ;Masterst.c: 367: SPEN = 1;
  2178  063C  1283               	bcf	3,5	;RP0=0, select bank0
  2179  063D  1303               	bcf	3,6	;RP1=0, select bank0
  2180  063E  1798               	bsf	24,7	;volatile
  2181                           
  2182                           ;Masterst.c: 368: CREN = 1;
  2183  063F  1618               	bsf	24,4	;volatile
  2184                           
  2185                           ;Masterst.c: 369: TXEN = 1;
  2186  0640  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0641  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0642  1698               	bsf	24,5	;volatile
  2189                           
  2190                           ;Masterst.c: 370: return 1;
  2191                           ;	Return value of _UART_Init is never used
  2192  0643  0008               	return
  2193  0644                     __end_of_UART_Init:	
  2194                           ;Masterst.c: 371: }
  2195                           ;Masterst.c: 372: return 0;
  2196                           ;	Return value of _UART_Init is never used
  2197                           
  2198                           
  2199                           	psect	text7
  2200  04C4                     __ptext7:	
  2201 ;; *************** function ___aldiv *****************
  2202 ;; Defined at:
  2203 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  divisor         4    0[COMMON] long 
  2206 ;;  dividend        4    4[COMMON] long 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  quotient        4    2[BANK0 ] long 
  2209 ;;  sign            1    1[BANK0 ] unsigned char 
  2210 ;;  counter         1    0[BANK0 ] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  4    0[COMMON] long 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         8       0       0       0       0
  2221 ;;      Locals:         0       6       0       0       0
  2222 ;;      Temps:          1       0       0       0       0
  2223 ;;      Totals:         9       6       0       0       0
  2224 ;;Total ram usage:       15 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_UART_Init
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function ___aldiv
  2235  04C4                     ___aldiv:	
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2239  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2240  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2241  04C6  01A1               	clrf	___aldiv@sign
  2242  04C7  1FF3               	btfss	___aldiv@divisor+3,7
  2243  04C8  2CD6               	goto	l381
  2244  04C9  09F0               	comf	___aldiv@divisor,f
  2245  04CA  09F1               	comf	___aldiv@divisor+1,f
  2246  04CB  09F2               	comf	___aldiv@divisor+2,f
  2247  04CC  09F3               	comf	___aldiv@divisor+3,f
  2248  04CD  0AF0               	incf	___aldiv@divisor,f
  2249  04CE  1903               	skipnz
  2250  04CF  0AF1               	incf	___aldiv@divisor+1,f
  2251  04D0  1903               	skipnz
  2252  04D1  0AF2               	incf	___aldiv@divisor+2,f
  2253  04D2  1903               	skipnz
  2254  04D3  0AF3               	incf	___aldiv@divisor+3,f
  2255  04D4  01A1               	clrf	___aldiv@sign
  2256  04D5  0AA1               	incf	___aldiv@sign,f
  2257  04D6                     l381:	
  2258  04D6  1FF7               	btfss	___aldiv@dividend+3,7
  2259  04D7  2CE7               	goto	l1053
  2260  04D8  09F4               	comf	___aldiv@dividend,f
  2261  04D9  09F5               	comf	___aldiv@dividend+1,f
  2262  04DA  09F6               	comf	___aldiv@dividend+2,f
  2263  04DB  09F7               	comf	___aldiv@dividend+3,f
  2264  04DC  0AF4               	incf	___aldiv@dividend,f
  2265  04DD  1903               	skipnz
  2266  04DE  0AF5               	incf	___aldiv@dividend+1,f
  2267  04DF  1903               	skipnz
  2268  04E0  0AF6               	incf	___aldiv@dividend+2,f
  2269  04E1  1903               	skipnz
  2270  04E2  0AF7               	incf	___aldiv@dividend+3,f
  2271  04E3  3001               	movlw	1
  2272  04E4  00F8               	movwf	??___aldiv
  2273  04E5  0878               	movf	??___aldiv,w
  2274  04E6  06A1               	xorwf	___aldiv@sign,f
  2275  04E7                     l1053:	
  2276  04E7  3000               	movlw	0
  2277  04E8  00A5               	movwf	___aldiv@quotient+3
  2278  04E9  3000               	movlw	0
  2279  04EA  00A4               	movwf	___aldiv@quotient+2
  2280  04EB  3000               	movlw	0
  2281  04EC  00A3               	movwf	___aldiv@quotient+1
  2282  04ED  3000               	movlw	0
  2283  04EE  00A2               	movwf	___aldiv@quotient
  2284  04EF  0873               	movf	___aldiv@divisor+3,w
  2285  04F0  0472               	iorwf	___aldiv@divisor+2,w
  2286  04F1  0471               	iorwf	___aldiv@divisor+1,w
  2287  04F2  0470               	iorwf	___aldiv@divisor,w
  2288  04F3  1903               	skipnz
  2289  04F4  2D3C               	goto	l1075
  2290  04F5  01A0               	clrf	___aldiv@counter
  2291  04F6  0AA0               	incf	___aldiv@counter,f
  2292  04F7                     l1061:	
  2293  04F7  1BF3               	btfsc	___aldiv@divisor+3,7
  2294  04F8  2D07               	goto	l1063
  2295  04F9  3001               	movlw	1
  2296  04FA  00F8               	movwf	??___aldiv
  2297  04FB                     u645:	
  2298  04FB  1003               	clrc
  2299  04FC  0DF0               	rlf	___aldiv@divisor,f
  2300  04FD  0DF1               	rlf	___aldiv@divisor+1,f
  2301  04FE  0DF2               	rlf	___aldiv@divisor+2,f
  2302  04FF  0DF3               	rlf	___aldiv@divisor+3,f
  2303  0500  0BF8               	decfsz	??___aldiv,f
  2304  0501  2CFB               	goto	u645
  2305  0502  3001               	movlw	1
  2306  0503  00F8               	movwf	??___aldiv
  2307  0504  0878               	movf	??___aldiv,w
  2308  0505  07A0               	addwf	___aldiv@counter,f
  2309  0506  2CF7               	goto	l1061
  2310  0507                     l1063:	
  2311  0507  3001               	movlw	1
  2312  0508  00F8               	movwf	??___aldiv
  2313  0509                     u665:	
  2314  0509  1003               	clrc
  2315  050A  0DA2               	rlf	___aldiv@quotient,f
  2316  050B  0DA3               	rlf	___aldiv@quotient+1,f
  2317  050C  0DA4               	rlf	___aldiv@quotient+2,f
  2318  050D  0DA5               	rlf	___aldiv@quotient+3,f
  2319  050E  0BF8               	decfsz	??___aldiv,f
  2320  050F  2D09               	goto	u665
  2321  0510  0873               	movf	___aldiv@divisor+3,w
  2322  0511  0277               	subwf	___aldiv@dividend+3,w
  2323  0512  1D03               	skipz
  2324  0513  2D1E               	goto	u675
  2325  0514  0872               	movf	___aldiv@divisor+2,w
  2326  0515  0276               	subwf	___aldiv@dividend+2,w
  2327  0516  1D03               	skipz
  2328  0517  2D1E               	goto	u675
  2329  0518  0871               	movf	___aldiv@divisor+1,w
  2330  0519  0275               	subwf	___aldiv@dividend+1,w
  2331  051A  1D03               	skipz
  2332  051B  2D1E               	goto	u675
  2333  051C  0870               	movf	___aldiv@divisor,w
  2334  051D  0274               	subwf	___aldiv@dividend,w
  2335  051E                     u675:	
  2336  051E  1C03               	skipc
  2337  051F  2D2F               	goto	l1071
  2338  0520  0870               	movf	___aldiv@divisor,w
  2339  0521  02F4               	subwf	___aldiv@dividend,f
  2340  0522  0871               	movf	___aldiv@divisor+1,w
  2341  0523  1C03               	skipc
  2342  0524  0F71               	incfsz	___aldiv@divisor+1,w
  2343  0525  02F5               	subwf	___aldiv@dividend+1,f
  2344  0526  0872               	movf	___aldiv@divisor+2,w
  2345  0527  1C03               	skipc
  2346  0528  0F72               	incfsz	___aldiv@divisor+2,w
  2347  0529  02F6               	subwf	___aldiv@dividend+2,f
  2348  052A  0873               	movf	___aldiv@divisor+3,w
  2349  052B  1C03               	skipc
  2350  052C  0F73               	incfsz	___aldiv@divisor+3,w
  2351  052D  02F7               	subwf	___aldiv@dividend+3,f
  2352  052E  1422               	bsf	___aldiv@quotient,0
  2353  052F                     l1071:	
  2354  052F  3001               	movlw	1
  2355  0530                     u685:	
  2356  0530  1003               	clrc
  2357  0531  0CF3               	rrf	___aldiv@divisor+3,f
  2358  0532  0CF2               	rrf	___aldiv@divisor+2,f
  2359  0533  0CF1               	rrf	___aldiv@divisor+1,f
  2360  0534  0CF0               	rrf	___aldiv@divisor,f
  2361  0535  3EFF               	addlw	-1
  2362  0536  1D03               	skipz
  2363  0537  2D30               	goto	u685
  2364  0538  3001               	movlw	1
  2365  0539  02A0               	subwf	___aldiv@counter,f
  2366  053A  1D03               	btfss	3,2
  2367  053B  2D07               	goto	l1063
  2368  053C                     l1075:	
  2369  053C  0821               	movf	___aldiv@sign,w
  2370  053D  1903               	btfsc	3,2
  2371  053E  2D4A               	goto	l1079
  2372  053F  09A2               	comf	___aldiv@quotient,f
  2373  0540  09A3               	comf	___aldiv@quotient+1,f
  2374  0541  09A4               	comf	___aldiv@quotient+2,f
  2375  0542  09A5               	comf	___aldiv@quotient+3,f
  2376  0543  0AA2               	incf	___aldiv@quotient,f
  2377  0544  1903               	skipnz
  2378  0545  0AA3               	incf	___aldiv@quotient+1,f
  2379  0546  1903               	skipnz
  2380  0547  0AA4               	incf	___aldiv@quotient+2,f
  2381  0548  1903               	skipnz
  2382  0549  0AA5               	incf	___aldiv@quotient+3,f
  2383  054A                     l1079:	
  2384  054A  0825               	movf	___aldiv@quotient+3,w
  2385  054B  00F3               	movwf	?___aldiv+3
  2386  054C  0824               	movf	___aldiv@quotient+2,w
  2387  054D  00F2               	movwf	?___aldiv+2
  2388  054E  0823               	movf	___aldiv@quotient+1,w
  2389  054F  00F1               	movwf	?___aldiv+1
  2390  0550  0822               	movf	___aldiv@quotient,w
  2391  0551  00F0               	movwf	?___aldiv
  2392  0552  0008               	return
  2393  0553                     __end_of___aldiv:	
  2394                           
  2395                           	psect	text8
  2396  03E7                     __ptext8:	
  2397 ;; *************** function _I2C_init *****************
  2398 ;; Defined at:
  2399 ;;		line 229 in file "Masterst.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;		None               void
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          1       0       0       0       0
  2416 ;;      Totals:         1       0       0       0       0
  2417 ;;Total ram usage:        1 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           
  2427                           ;psect for function _I2C_init
  2428  03E7                     _I2C_init:	
  2429                           
  2430                           ;Masterst.c: 231: TRISCbits.TRISC3 = 1;
  2431                           
  2432                           ;incstack = 0
  2433                           ; Regs used in _I2C_init: [wreg+status,2+status,0]
  2434  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2435  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2436  03E9  1587               	bsf	7,3	;volatile
  2437                           
  2438                           ;Masterst.c: 232: TRISCbits.TRISC4 = 1;
  2439  03EA  1607               	bsf	7,4	;volatile
  2440                           
  2441                           ;Masterst.c: 233: SSPIF=0;
  2442  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2443  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2444  03ED  118C               	bcf	12,3	;volatile
  2445                           
  2446                           ;Masterst.c: 234: SSPCON2=0x00;
  2447  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2448  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2449  03F0  0191               	clrf	17	;volatile
  2450                           
  2451                           ;Masterst.c: 235: SSPSTAT|=0x00;
  2452  03F1  0814               	movf	20,w	;volatile
  2453                           
  2454                           ;Masterst.c: 236: SSPADD=29;
  2455  03F2  301D               	movlw	29
  2456  03F3  0093               	movwf	19	;volatile
  2457                           
  2458                           ;Masterst.c: 237: SSPCON|=0x28;
  2459  03F4  3028               	movlw	40
  2460  03F5  00F0               	movwf	??_I2C_init
  2461  03F6  0870               	movf	??_I2C_init,w
  2462  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2463  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2464  03F9  0494               	iorwf	20,f	;volatile
  2465  03FA  0008               	return
  2466  03FB                     __end_of_I2C_init:	
  2467                           
  2468                           	psect	text9
  2469  0427                     __ptext9:	
  2470 ;; *************** function _I2C_address_send2 *****************
  2471 ;; Defined at:
  2472 ;;		line 310 in file "Masterst.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      unsigned char 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         0       0       0       0       0
  2487 ;;      Locals:         0       0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0
  2489 ;;      Totals:         0       0       0       0       0
  2490 ;;Total ram usage:        0 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function _I2C_address_send2
  2501  0427                     _I2C_address_send2:	
  2502  0427                     l158:	
  2503                           ;Masterst.c: 312: static char con;
  2504                           ;Masterst.c: 313: while(SSPSTATbits.BF);
  2505                           
  2506                           ;incstack = 0
  2507                           ; Regs used in _I2C_address_send2: [wreg+status,2]
  2508                           
  2509  0427  1683               	bsf	3,5	;RP0=1, select bank1
  2510  0428  1303               	bcf	3,6	;RP1=0, select bank1
  2511  0429  1814               	btfsc	20,0	;volatile
  2512  042A  2C27               	goto	l158
  2513                           
  2514                           ;Masterst.c: 314: SSPBUF = 0xCC;
  2515  042B  30CC               	movlw	204
  2516  042C  1283               	bcf	3,5	;RP0=0, select bank0
  2517  042D  1303               	bcf	3,6	;RP1=0, select bank0
  2518  042E  0093               	movwf	19	;volatile
  2519                           
  2520                           ;Masterst.c: 315: if(!(SSPCON2bits.ACKSTAT))
  2521  042F  1683               	bsf	3,5	;RP0=1, select bank1
  2522  0430  1303               	bcf	3,6	;RP1=0, select bank1
  2523  0431  1B11               	btfsc	17,6	;volatile
  2524  0432  2C38               	goto	l1211
  2525                           
  2526                           ;Masterst.c: 316: con=1;
  2527  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0435  01D4               	clrf	I2C_address_send2@con
  2530  0436  0AD4               	incf	I2C_address_send2@con,f
  2531  0437  2C3A               	goto	l1213
  2532  0438                     l1211:	
  2533                           
  2534                           ;Masterst.c: 317: else
  2535                           ;Masterst.c: 318: con=0;
  2536  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0439  01D4               	clrf	I2C_address_send2@con
  2538  043A                     l1213:	
  2539                           
  2540                           ;Masterst.c: 320: PIR1bits.SSPIF = 0;
  2541  043A  118C               	bcf	12,3	;volatile
  2542                           
  2543                           ;Masterst.c: 321: return con;
  2544  043B  0854               	movf	I2C_address_send2@con,w
  2545  043C  0008               	return
  2546  043D                     __end_of_I2C_address_send2:	
  2547                           
  2548                           	psect	text10
  2549  0411                     __ptext10:	
  2550 ;; *************** function _I2C_address_send1 *****************
  2551 ;; Defined at:
  2552 ;;		line 296 in file "Masterst.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      unsigned char 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0
  2569 ;;      Totals:         0       0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_main
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _I2C_address_send1
  2581  0411                     _I2C_address_send1:	
  2582  0411                     l148:	
  2583                           ;Masterst.c: 298: static char con;
  2584                           ;Masterst.c: 299: while(SSPSTATbits.BF);
  2585                           
  2586                           ;incstack = 0
  2587                           ; Regs used in _I2C_address_send1: [wreg+status,2]
  2588                           
  2589  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0413  1814               	btfsc	20,0	;volatile
  2592  0414  2C11               	goto	l148
  2593                           
  2594                           ;Masterst.c: 300: SSPBUF = 0xBB;
  2595  0415  30BB               	movlw	187
  2596  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0418  0093               	movwf	19	;volatile
  2599                           
  2600                           ;Masterst.c: 301: if(!(SSPCON2bits.ACKSTAT))
  2601  0419  1683               	bsf	3,5	;RP0=1, select bank1
  2602  041A  1303               	bcf	3,6	;RP1=0, select bank1
  2603  041B  1B11               	btfsc	17,6	;volatile
  2604  041C  2C22               	goto	l1195
  2605                           
  2606                           ;Masterst.c: 302: con=1;
  2607  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2608  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2609  041F  01D3               	clrf	I2C_address_send1@con
  2610  0420  0AD3               	incf	I2C_address_send1@con,f
  2611  0421  2C24               	goto	l1197
  2612  0422                     l1195:	
  2613                           
  2614                           ;Masterst.c: 303: else
  2615                           ;Masterst.c: 304: con=0;
  2616  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0423  01D3               	clrf	I2C_address_send1@con
  2618  0424                     l1197:	
  2619                           
  2620                           ;Masterst.c: 306: PIR1bits.SSPIF = 0;
  2621  0424  118C               	bcf	12,3	;volatile
  2622                           
  2623                           ;Masterst.c: 307: return con;
  2624  0425  0853               	movf	I2C_address_send1@con,w
  2625  0426  0008               	return
  2626  0427                     __end_of_I2C_address_send1:	
  2627                           
  2628                           	psect	text11
  2629  03FB                     __ptext11:	
  2630 ;; *************** function _I2C_address_send *****************
  2631 ;; Defined at:
  2632 ;;		line 282 in file "Masterst.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      unsigned char 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2646 ;;      Params:         0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0
  2649 ;;      Totals:         0       0       0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function _I2C_address_send
  2661  03FB                     _I2C_address_send:	
  2662  03FB                     l138:	
  2663                           ;Masterst.c: 284: static char con;
  2664                           ;Masterst.c: 285: while(SSPSTATbits.BF);
  2665                           
  2666                           ;incstack = 0
  2667                           ; Regs used in _I2C_address_send: [wreg+status,2]
  2668                           
  2669  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2670  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2671  03FD  1814               	btfsc	20,0	;volatile
  2672  03FE  2BFB               	goto	l138
  2673                           
  2674                           ;Masterst.c: 286: SSPBUF = 0xAA;
  2675  03FF  30AA               	movlw	170
  2676  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2678  0402  0093               	movwf	19	;volatile
  2679                           
  2680                           ;Masterst.c: 287: if(!(SSPCON2bits.ACKSTAT))
  2681  0403  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0404  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0405  1B11               	btfsc	17,6	;volatile
  2684  0406  2C0C               	goto	l1169
  2685                           
  2686                           ;Masterst.c: 288: con=1;
  2687  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0409  01D5               	clrf	I2C_address_send@con
  2690  040A  0AD5               	incf	I2C_address_send@con,f
  2691  040B  2C0E               	goto	l1171
  2692  040C                     l1169:	
  2693                           
  2694                           ;Masterst.c: 289: else
  2695                           ;Masterst.c: 290: con=0;
  2696  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2697  040D  01D5               	clrf	I2C_address_send@con
  2698  040E                     l1171:	
  2699                           
  2700                           ;Masterst.c: 292: PIR1bits.SSPIF = 0;
  2701  040E  118C               	bcf	12,3	;volatile
  2702                           
  2703                           ;Masterst.c: 293: return con;
  2704  040F  0855               	movf	I2C_address_send@con,w
  2705  0410  0008               	return
  2706  0411                     __end_of_I2C_address_send:	
  2707                           
  2708                           	psect	text12
  2709  043D                     __ptext12:	
  2710 ;; *************** function _I2C_Write_Text *****************
  2711 ;; Defined at:
  2712 ;;		line 275 in file "Masterst.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  s               1    wreg     PTR const unsigned char 
  2715 ;;		 -> NULL(0), UART_Read_Text@string(20), 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  s               1   12[COMMON] PTR const unsigned char 
  2718 ;;		 -> NULL(0), UART_Read_Text@string(20), 
  2719 ;;  i               2   10[COMMON] int 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;		None               void
  2722 ;; Registers used:
  2723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2729 ;;      Params:         0       0       0       0       0
  2730 ;;      Locals:         3       0       0       0       0
  2731 ;;      Temps:          1       0       0       0       0
  2732 ;;      Totals:         4       0       0       0       0
  2733 ;;Total ram usage:        4 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    3
  2736 ;; This function calls:
  2737 ;;		_I2C_Write
  2738 ;; This function is called by:
  2739 ;;		_main
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           
  2744                           ;psect for function _I2C_Write_Text
  2745  043D                     _I2C_Write_Text:	
  2746                           
  2747                           ;incstack = 0
  2748                           ; Regs used in _I2C_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2749                           ;I2C_Write_Text@s stored from wreg
  2750  043D  00FC               	movwf	I2C_Write_Text@s
  2751                           
  2752                           ;Masterst.c: 277: int i;
  2753                           ;Masterst.c: 278: for(i=0;s[i]!='\0';i++)
  2754  043E  01FA               	clrf	I2C_Write_Text@i
  2755  043F  01FB               	clrf	I2C_Write_Text@i+1
  2756  0440                     l1183:	
  2757  0440  087A               	movf	I2C_Write_Text@i,w
  2758  0441  077C               	addwf	I2C_Write_Text@s,w
  2759  0442  00F9               	movwf	??_I2C_Write_Text
  2760  0443  0879               	movf	??_I2C_Write_Text,w
  2761  0444  0084               	movwf	4
  2762  0445  1383               	bcf	3,7	;select IRP bank0
  2763  0446  0880               	movf	0,f
  2764  0447  1903               	btfsc	3,2
  2765  0448  0008               	return
  2766                           
  2767                           ;Masterst.c: 279: I2C_Write(s[i]);
  2768  0449  087A               	movf	I2C_Write_Text@i,w
  2769  044A  077C               	addwf	I2C_Write_Text@s,w
  2770  044B  00F9               	movwf	??_I2C_Write_Text
  2771  044C  0879               	movf	??_I2C_Write_Text,w
  2772  044D  0084               	movwf	4
  2773  044E  1383               	bcf	3,7	;select IRP bank0
  2774  044F  0800               	movf	0,w
  2775  0450  120A  118A  23D4  120A  118A  	fcall	_I2C_Write
  2776  0455  3001               	movlw	1
  2777  0456  07FA               	addwf	I2C_Write_Text@i,f
  2778  0457  1803               	skipnc
  2779  0458  0AFB               	incf	I2C_Write_Text@i+1,f
  2780  0459  3000               	movlw	0
  2781  045A  07FB               	addwf	I2C_Write_Text@i+1,f
  2782  045B  2C40               	goto	l1183
  2783  045C                     __end_of_I2C_Write_Text:	
  2784                           
  2785                           	psect	text13
  2786  03D4                     __ptext13:	
  2787 ;; *************** function _I2C_Write *****************
  2788 ;; Defined at:
  2789 ;;		line 265 in file "Masterst.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  Data            1    wreg     unsigned char 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  Data            1    8[COMMON] unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;		None               void
  2796 ;; Registers used:
  2797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2803 ;;      Params:         0       0       0       0       0
  2804 ;;      Locals:         1       0       0       0       0
  2805 ;;      Temps:          0       0       0       0       0
  2806 ;;      Totals:         1       0       0       0       0
  2807 ;;Total ram usage:        1 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    2
  2810 ;; This function calls:
  2811 ;;		_UART_Write_Text
  2812 ;; This function is called by:
  2813 ;;		_main
  2814 ;;		_I2C_Write_Text
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function _I2C_Write
  2820  03D4                     _I2C_Write:	
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in _I2C_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2824                           ;I2C_Write@Data stored from wreg
  2825  03D4  00F8               	movwf	I2C_Write@Data
  2826  03D5                     l121:	
  2827                           ;Masterst.c: 268: while((SSPSTATbits.BF));
  2828                           
  2829  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  2830  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  2831  03D7  1814               	btfsc	20,0	;volatile
  2832  03D8  2BD5               	goto	l121
  2833                           
  2834                           ;Masterst.c: 269: SSPBUF = Data;
  2835  03D9  0878               	movf	I2C_Write@Data,w
  2836  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2837  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2838  03DC  0093               	movwf	19	;volatile
  2839  03DD                     l124:	
  2840                           ;Masterst.c: 270: while(!(PIR1bits.SSPIF));
  2841                           
  2842  03DD  1D8C               	btfss	12,3	;volatile
  2843  03DE  2BDD               	goto	l124
  2844                           
  2845                           ;Masterst.c: 271: UART_Write_Text("\r\nData routine\r\n");
  2846  03DF  30D0               	movlw	low (STR_15| (0+32768))
  2847  03E0  00F1               	movwf	UART_Write_Text@text
  2848  03E1  3089               	movlw	high (STR_15| (0+32768))
  2849  03E2  00F2               	movwf	UART_Write_Text@text+1
  2850  03E3  120A  118A  2487   	fcall	_UART_Write_Text
  2851  03E6  0008               	return
  2852  03E7                     __end_of_I2C_Write:	
  2853                           
  2854                           	psect	text14
  2855  0487                     __ptext14:	
  2856 ;; *************** function _UART_Write_Text *****************
  2857 ;; Defined at:
  2858 ;;		line 387 in file "Masterst.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  text            2    1[COMMON] PTR const unsigned char 
  2861 ;;		 -> NULL(0), UART_Read_Text@string(20), STR_16(12), STR_15(17), 
  2862 ;;		 -> STR_14(36), STR_13(27), STR_12(54), STR_9(38), 
  2863 ;;		 -> STR_8(38), STR_7(38), STR_6(21), STR_5(21), 
  2864 ;;		 -> STR_4(20), STR_3(97), STR_2(24), STR_1(50), 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  i               2    6[COMMON] int 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;		None               void
  2869 ;; Registers used:
  2870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2876 ;;      Params:         2       0       0       0       0
  2877 ;;      Locals:         2       0       0       0       0
  2878 ;;      Temps:          3       0       0       0       0
  2879 ;;      Totals:         7       0       0       0       0
  2880 ;;Total ram usage:        7 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    1
  2883 ;; This function calls:
  2884 ;;		_UART_Write
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;;		_I2C_Write
  2888 ;;		_UART_Read_Text
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _UART_Write_Text
  2894  0487                     _UART_Write_Text:	
  2895                           
  2896                           ;Masterst.c: 389: int i;
  2897                           ;Masterst.c: 390: for(i=0;text[i]!='\0';i++)
  2898                           
  2899                           ;incstack = 0
  2900                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2901  0487  01F6               	clrf	UART_Write_Text@i
  2902  0488  01F7               	clrf	UART_Write_Text@i+1
  2903  0489                     l1019:	
  2904  0489  0876               	movf	UART_Write_Text@i,w
  2905  048A  0771               	addwf	UART_Write_Text@text,w
  2906  048B  00F4               	movwf	??_UART_Write_Text+1
  2907  048C  0872               	movf	UART_Write_Text@text+1,w
  2908  048D  00F3               	movwf	??_UART_Write_Text
  2909  048E  1803               	skipnc
  2910  048F  0AF3               	incf	??_UART_Write_Text,f
  2911  0490  1BF6               	btfsc	UART_Write_Text@i,7
  2912  0491  03F3               	decf	??_UART_Write_Text,f
  2913  0492  0873               	movf	??_UART_Write_Text,w
  2914  0493  00F5               	movwf	??_UART_Write_Text+2
  2915  0494  0875               	movf	??_UART_Write_Text+2,w
  2916  0495  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0496  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0497  00FF               	movwf	127
  2919  0498  0874               	movf	??_UART_Write_Text+1,w
  2920  0499  0084               	movwf	4
  2921  049A  120A  118A  2003  120A  118A  	fcall	stringtab
  2922  049F  3800               	iorlw	0
  2923  04A0  1903               	btfsc	3,2
  2924  04A1  0008               	return
  2925                           
  2926                           ;Masterst.c: 391: UART_Write(text[i]);
  2927  04A2  0876               	movf	UART_Write_Text@i,w
  2928  04A3  0771               	addwf	UART_Write_Text@text,w
  2929  04A4  00F4               	movwf	??_UART_Write_Text+1
  2930  04A5  0872               	movf	UART_Write_Text@text+1,w
  2931  04A6  00F3               	movwf	??_UART_Write_Text
  2932  04A7  1803               	skipnc
  2933  04A8  0AF3               	incf	??_UART_Write_Text,f
  2934  04A9  1BF6               	btfsc	UART_Write_Text@i,7
  2935  04AA  03F3               	decf	??_UART_Write_Text,f
  2936  04AB  0873               	movf	??_UART_Write_Text,w
  2937  04AC  00F5               	movwf	??_UART_Write_Text+2
  2938  04AD  0875               	movf	??_UART_Write_Text+2,w
  2939  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2940  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2941  04B0  00FF               	movwf	127
  2942  04B1  0874               	movf	??_UART_Write_Text+1,w
  2943  04B2  0084               	movwf	4
  2944  04B3  120A  118A  2003  120A  118A  	fcall	stringtab
  2945  04B8  120A  118A  23A7  120A  118A  	fcall	_UART_Write
  2946  04BD  3001               	movlw	1
  2947  04BE  07F6               	addwf	UART_Write_Text@i,f
  2948  04BF  1803               	skipnc
  2949  04C0  0AF7               	incf	UART_Write_Text@i+1,f
  2950  04C1  3000               	movlw	0
  2951  04C2  07F7               	addwf	UART_Write_Text@i+1,f
  2952  04C3  2C89               	goto	l1019
  2953  04C4                     __end_of_UART_Write_Text:	
  2954                           
  2955                           	psect	text15
  2956  03A7                     __ptext15:	
  2957 ;; *************** function _UART_Write *****************
  2958 ;; Defined at:
  2959 ;;		line 375 in file "Masterst.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  data            1    wreg     unsigned char 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  data            1    0[COMMON] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;		None               void
  2966 ;; Registers used:
  2967 ;;		wreg
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       0       0       0       0
  2974 ;;      Locals:         1       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0
  2976 ;;      Totals:         1       0       0       0       0
  2977 ;;Total ram usage:        1 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;;		_UART_Write_Text
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _UART_Write
  2989  03A7                     _UART_Write:	
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in _UART_Write: [wreg]
  2993                           ;UART_Write@data stored from wreg
  2994  03A7  00F0               	movwf	UART_Write@data
  2995  03A8                     l186:	
  2996                           ;Masterst.c: 377: while(!PIR1bits.TXIF);
  2997                           
  2998  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2999  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  3000  03AA  1E0C               	btfss	12,4	;volatile
  3001  03AB  2BA8               	goto	l186
  3002  03AC                     l189:	
  3003                           ;Masterst.c: 378: while(!TRMT);
  3004                           
  3005  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  3006  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  3007  03AE  1C98               	btfss	24,1	;volatile
  3008  03AF  2BAC               	goto	l189
  3009                           
  3010                           ;Masterst.c: 379: TXREG = data;
  3011  03B0  0870               	movf	UART_Write@data,w
  3012  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3013  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3014  03B3  0099               	movwf	25	;volatile
  3015  03B4  0008               	return
  3016  03B5                     __end_of_UART_Write:	
  3017                           
  3018                           	psect	text16
  3019  0395                     __ptext16:	
  3020 ;; *************** function _I2C_Stop *****************
  3021 ;; Defined at:
  3022 ;;		line 255 in file "Masterst.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		None
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0
  3039 ;;      Totals:         0       0       0       0       0
  3040 ;;Total ram usage:        0 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _I2C_Stop
  3051  0395                     _I2C_Stop:	
  3052                           
  3053                           ;Masterst.c: 257: SSPCON2bits.PEN = 1;
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in _I2C_Stop: []
  3057  0395  1683               	bsf	3,5	;RP0=1, select bank1
  3058  0396  1303               	bcf	3,6	;RP1=0, select bank1
  3059  0397  1511               	bsf	17,2	;volatile
  3060  0398                     l115:	
  3061                           ;Masterst.c: 258: while(SSPCON2bits.PEN);
  3062                           
  3063  0398  1911               	btfsc	17,2	;volatile
  3064  0399  2B98               	goto	l115
  3065                           
  3066                           ;Masterst.c: 259: PIR1bits.SSPIF = 0;
  3067  039A  1283               	bcf	3,5	;RP0=0, select bank0
  3068  039B  1303               	bcf	3,6	;RP1=0, select bank0
  3069  039C  118C               	bcf	12,3	;volatile
  3070  039D  0008               	return
  3071  039E                     __end_of_I2C_Stop:	
  3072                           
  3073                           	psect	text17
  3074  038C                     __ptext17:	
  3075 ;; *************** function _I2C_Start *****************
  3076 ;; Defined at:
  3077 ;;		line 244 in file "Masterst.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;		None               void
  3084 ;; Registers used:
  3085 ;;		None
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3091 ;;      Params:         0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0
  3094 ;;      Totals:         0       0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_main
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           
  3105                           ;psect for function _I2C_Start
  3106  038C                     _I2C_Start:	
  3107                           
  3108                           ;Masterst.c: 246: SSPCON2bits.SEN = 1;
  3109                           
  3110                           ;incstack = 0
  3111                           ; Regs used in _I2C_Start: []
  3112  038C  1683               	bsf	3,5	;RP0=1, select bank1
  3113  038D  1303               	bcf	3,6	;RP1=0, select bank1
  3114  038E  1411               	bsf	17,0	;volatile
  3115  038F                     l109:	
  3116                           ;Masterst.c: 247: while(SSPCON2bits.SEN);
  3117                           
  3118  038F  1811               	btfsc	17,0	;volatile
  3119  0390  2B8F               	goto	l109
  3120                           
  3121                           ;Masterst.c: 248: PIR1bits.SSPIF = 0;
  3122  0391  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0392  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0393  118C               	bcf	12,3	;volatile
  3125  0394  0008               	return
  3126  0395                     __end_of_I2C_Start:	
  3127  007E                     btemp	set	126	;btemp
  3128  007E                     wtemp	set	126
  3129  007E                     wtemp0	set	126
  3130  0080                     wtemp1	set	128
  3131  0082                     wtemp2	set	130
  3132  0084                     wtemp3	set	132
  3133  0086                     wtemp4	set	134
  3134  0088                     wtemp5	set	136
  3135  007F                     wtemp6	set	127
  3136  007E                     ttemp	set	126
  3137  007E                     ttemp0	set	126
  3138  0081                     ttemp1	set	129
  3139  0084                     ttemp2	set	132
  3140  0087                     ttemp3	set	135
  3141  007F                     ttemp4	set	127
  3142  007E                     ltemp	set	126
  3143  007E                     ltemp0	set	126
  3144  0082                     ltemp1	set	130
  3145  0086                     ltemp2	set	134
  3146  0080                     ltemp3	set	128


Data Sizes:
    Strings     524
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Read_Text@a	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_16(CODE[12]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 97
		 -> NULL(NULL[0]), UART_Read_Text@string(BANK0[20]), STR_16(CODE[12]), STR_15(CODE[17]), 
		 -> STR_14(CODE[36]), STR_13(CODE[27]), STR_12(CODE[54]), STR_9(CODE[38]), 
		 -> STR_8(CODE[38]), STR_7(CODE[38]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[97]), STR_2(CODE[24]), STR_1(CODE[50]), 

    I2C_Write_Text@s	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), UART_Read_Text@string(BANK0[20]), 

    sp__UART_Read_Text	PTR unsigned char  size(1) Largest target is 20
		 -> UART_Read_Text@string(BANK0[20]), 

    is	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), UART_Read_Text@string(BANK0[20]), 

    main@msgm	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_14(CODE[36]), 

    main@fin	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_13(CODE[27]), 

    main@err	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_12(CODE[54]), 

    main@msg5	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[14]), 

    main@msg4	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[17]), 

    main@msg3	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_9(CODE[38]), 

    main@msg2	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_8(CODE[38]), 

    main@msg1	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_7(CODE[38]), 

    main@arr5	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_6(CODE[21]), 

    main@arr4	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_5(CODE[21]), 

    main@arr3	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), 

    main@arr2	PTR const unsigned char  size(2) Largest target is 97
		 -> STR_3(CODE[97]), 

    main@arr1	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[24]), 

    main@mas	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_1(CODE[50]), 


Critical Paths under _main in COMMON

    _main->_I2C_Write_Text
    _main->_UART_Read_Text
    _delay_ms->_delay1ms
    _UART_Read_Text->_UART_Write_Text
    _UART_Init->___aldiv
    _I2C_Write_Text->_I2C_Write
    _I2C_Write->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    5167
                                             13 COMMON     1     1      0
                                             22 BANK0     29    29      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                     _I2C_Write_Text
                   _I2C_address_send
                  _I2C_address_send1
                  _I2C_address_send2
                           _I2C_init
                          _UART_Init
                          _UART_Read
                     _UART_Read_Text
                         _UART_Write
                    _UART_Write_Text
                           _delay_ms
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (1) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     144
                                              2 COMMON     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (2) _delay1ms                                             2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read_Text                                       5     5      0     999
                                              8 COMMON     5     5      0
                          _UART_Read
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     743
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_address_send2                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_address_send1                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_address_send                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write_Text                                       4     4      0    1100
                                              9 COMMON     4     4      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0     929
                                              8 COMMON     1     1      0
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     907
                                              1 COMMON     7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Start
   _I2C_Stop
   _I2C_Write
     _UART_Write_Text
       _UART_Write
   _I2C_Write_Text
     _I2C_Write
       _UART_Write_Text
         _UART_Write
   _I2C_address_send
   _I2C_address_send1
   _I2C_address_send2
   _I2C_init
   _UART_Init
     ___aldiv
   _UART_Read
   _UART_Read_Text
     _UART_Read
     _UART_Write_Text
       _UART_Write
   _UART_Write
   _UART_Write_Text
     _UART_Write
   _delay_ms
     _delay1ms
   _i2c_idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5A       3        0.0%
BITBANK0            50      0       1       4        1.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     33      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5A      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri May 29 08:37:03 2015

                         pc 0002          __size_of_I2C_Start 0009                 __CFG_CP$OFF 0000  
               _SSPSTATbits 0094          __size_of_I2C_Write 0013                          l93 07EC  
                        l85 0682                          _is 0056                          fsr 0004  
                       l121 03D5                         l115 0398                         l124 03DD  
                       l109 038F                         l207 037E                         l138 03FB  
                       l148 0411                         l236 039E                         l158 0427  
                       l186 03A8                         l189 03AC                         l381 04D6  
              __CFG_CPD$OFF 0000                         u730 0599                         u731 059A  
                       u715 055E                         u732 059F                         u645 04FB  
                       u733 05A0                         u725 057F                         u665 0509  
                       u770 0604                         u675 051E                         u771 0605  
                       u755 05C9                         u772 060A                         u685 0530  
                       u773 060B                         u765 05EA                         fsr0 0004  
                       indf 0000                __CFG_LVP$OFF 0000                        l1101 062F  
                      l1019 0489                        l1211 0438                        l1213 043A  
                      l1061 04F7                        l1053 04E7                        l1071 052F  
                      l1063 0507                        l1151 0477                        l1171 040E  
                      l1075 053C                        l1139 03A2                        l1149 0461  
                      l1183 0440                        l1079 054A                        l1255 0726  
                      l1169 040C                        l1265 075F                        l1195 0422  
                      l1275 0798                        l1197 0424                        l1285 07D1  
                      l1289 07DF                        STR_1 0897                        STR_2 097A  
                      STR_3 0800                        STR_4 09BC                        STR_5 09A7  
                      STR_6 0992                        STR_7 08C9                        STR_8 08EF  
                      STR_9 0915                        _BRGH 04C2                        _CREN 00C4  
                      _RCIF 0065                        _SPEN 00C7                        _TRMT 04C1  
                      _TXEN 04C5                        _TXIF 0064                        _SYNC 04C4  
              __CFG_WRT$OFF 0000                        _main 0644                        btemp 007E  
          __end_of_I2C_Stop 039E               __CFG_BOREN$ON 0000                        ltemp 007E  
          __end_of_I2C_init 03FB                        start 0000                        ttemp 007E  
                      wtemp 007E               __CFG_IESO$OFF 0000        I2C_address_send1@con 0053  
      I2C_address_send2@con 0054               __CFG_MCLRE$ON 0000   __size_of_I2C_address_send 0016  
   __end_of_UART_Write_Text 04C4             __end_of___aldiv 0553                       ?_main 0070  
                     STR_10 09E1                       STR_11 09F2                       STR_12 0861  
                     STR_13 095F                       STR_14 093B                       STR_15 09D0  
                     STR_16 0A00               __CFG_WDTE$OFF 0000                       _RCREG 001A  
                     _SPBRG 0099                       _SSPIF 0063                       _TXREG 0019  
            __CFG_FCMEN$OFF 0000                 ?_UART_Write 0070          __size_of_UART_Init 00F1  
        __size_of_UART_Read 0006        UART_Read_Text@string 0057           __end_of_I2C_Start 0395  
         __end_of_I2C_Write 03E7                       pclath 000A                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
                     ttemp0 007E                       ttemp1 0081                       ttemp2 0084  
                     ttemp3 0087                       ttemp4 007F                       status 0003  
                     wtemp0 007E                       wtemp1 0080                       wtemp2 0082  
                     wtemp3 0084                       wtemp4 0086                       wtemp5 0088  
                     wtemp6 007F             __initialization 07F4                __end_of_main 07F4  
          __end_of_i2c_idle 03A7                      ??_main 007D                      _INTCON 000B  
                    _SSPADD 0093                      _SSPCON 0014                      _SSPBUF 0013  
          __end_of_delay1ms 03C4            __end_of_delay_ms 03D4              __CFG_PWRTE$OFF 0000  
         __end_of_UART_Init 0644           __end_of_UART_Read 0384         __size_of_UART_Write 000E  
                 ??___aldiv 0078            ?_UART_Write_Text 0071     __size_of_UART_Read_Text 002B  
                 ?_I2C_Stop 0070                   ?_I2C_init 0070     __end_of__initialization 07FC  
           I2C_Write_Text@i 007A             I2C_Write_Text@s 007C            _I2C_address_send 03FB  
            __pcstackCOMMON 0070                  ??_I2C_Stop 0070                  ??_I2C_init 0070  
                __pbssBANK0 0053                   ?_i2c_idle 0070                  __pmaintext 0644  
   __size_of_I2C_Write_Text 001F                     _IC2_ack 0358                   ?_delay1ms 0070  
                 ?_delay_ms 0072                ??_UART_Write 0070                     _SSPCON2 0091  
                   _SSPSTAT 0094                  __stringtab 0003                  ??_i2c_idle 0070  
                 _I2C_Start 038C                   _I2C_Write 03D4                     ___aldiv 04C4  
        __end_of_UART_Write 03B5              _UART_Read_Text 045C                     __ptext1 039E  
                   __ptext2 03C4                     __ptext3 03B5                     __ptext4 045C  
                   __ptext5 037E                     __ptext6 0553                     __ptext7 04C4  
                   __ptext8 03E7                     __ptext9 0427                  ??_delay1ms 0070  
          ___aldiv@dividend 0074                  ??_delay_ms 0074                     main@fin 004E  
                   main@mas 003A                     main@err 004C                     clrloop0 0385  
      end_of_initialization 07FC                  ?_I2C_Start 0070                  ?_I2C_Write 0070  
    __end_of_UART_Read_Text 0487            ___aldiv@quotient 0022                __pstringtext 0800  
                 _UART_Init 0553                   _UART_Read 037E              UART_Write@data 0070  
                 _TRISCbits 0087    __end_of_I2C_address_send 0411           __size_of_I2C_Stop 0009  
         __size_of_I2C_init 0014                  main@choice 0052           _I2C_address_send1 0411  
         _I2C_address_send2 0427         I2C_address_send@con 0055             ?_UART_Read_Text 0070  
        ?_I2C_address_send1 0070          ?_I2C_address_send2 0070              _I2C_Write_Text 043D  
                ?_UART_Init 0026                  ?_UART_Read 0070               __pbitbssBANK0 0358  
       ??_I2C_address_send1 0070         ??_I2C_address_send2 0070    __size_of_UART_Write_Text 003D  
       start_initialization 07F4   __end_of_I2C_address_send1 0427   __end_of_I2C_address_send2 043D  
               ??_I2C_Start 0070           __size_of_i2c_idle 0009                 ??_I2C_Write 0078  
  __CFG_FOSC$INTRC_NOCLKOUT 0000      __end_of_I2C_Write_Text 045C                   ___latbits 0002  
             __pcstackBANK0 0020         __end_of__stringdata 0A0C           __size_of_delay1ms 000F  
         __size_of_delay_ms 0010             ?_I2C_Write_Text 0070                    ?___aldiv 0070  
               ??_UART_Init 002A                 ??_UART_Read 0070                   __pstrings 0003  
                  _I2C_Stop 0395                    _I2C_init 03E7                  UART_Init@x 0079  
                 delay1ms@j 0070           ??_UART_Write_Text 0073             ___aldiv@divisor 0070  
           ___aldiv@counter 0020                   delay_ms@i 0072             UART_Read_Text@a 0079  
           UART_Read_Text@i 007C             UART_Read_Text@x 007B  __size_of_I2C_address_send1 0016  
__size_of_I2C_address_send2 0016                   clear_ram0 0384                    _PIR1bits 000C  
         UART_Init@baudrate 0026                 __stringbase 0015                 __stringdata 0800  
         ?_I2C_address_send 0070          ??_I2C_address_send 0070                    _i2c_idle 039E  
          ??_UART_Read_Text 0078               I2C_Write@Data 0078            __size_of___aldiv 008F  
        __end_of__stringtab 0015                    _delay1ms 03B5                    _delay_ms 03C4  
                  __ptext10 0411                    __ptext11 03FB                    __ptext12 043D  
                  __ptext13 03D4                    __ptext14 0487                    __ptext15 03A7  
                  __ptext16 0395                    __ptext17 038C           __CFG_BOR4V$BOR40V 0000  
       UART_Write_Text@text 0071               __size_of_main 01B0                    main@arr1 003C  
                  main@arr2 003E                    main@arr3 0040                    main@arr4 0042  
                  main@arr5 0044                    main@msg1 0046                    main@msg2 0048  
                  main@msg3 004A                    main@msg4 0036                    main@msg5 0038  
                  main@msgm 0050            ??_I2C_Write_Text 0079                   stringcode 000D  
                _OSCCONbits 008F             _UART_Write_Text 0487                    stringtab 0003  
              ___aldiv@sign 0021                  _UART_Write 03A7                 _SSPCON2bits 0091  
          UART_Write_Text@i 0076  
