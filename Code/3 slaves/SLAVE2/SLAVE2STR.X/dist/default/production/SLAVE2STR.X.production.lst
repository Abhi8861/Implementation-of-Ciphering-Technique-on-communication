

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri May 29 08:29:50 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  000E                     	;# 
    40  000E                     	;# 
    41  000F                     	;# 
    42  0010                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0014                     	;# 
    47  0015                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001D                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  0086                     	;# 
    63  0087                     	;# 
    64  0089                     	;# 
    65  008C                     	;# 
    66  008D                     	;# 
    67  008E                     	;# 
    68  008F                     	;# 
    69  0090                     	;# 
    70  0091                     	;# 
    71  0092                     	;# 
    72  0093                     	;# 
    73  0093                     	;# 
    74  0093                     	;# 
    75  0094                     	;# 
    76  0095                     	;# 
    77  0096                     	;# 
    78  0097                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  009F                     	;# 
    87  0105                     	;# 
    88  0107                     	;# 
    89  0108                     	;# 
    90  0109                     	;# 
    91  010C                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  010E                     	;# 
    95  010F                     	;# 
    96  0185                     	;# 
    97  0187                     	;# 
    98  0188                     	;# 
    99  0189                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102                           
   103                           	psect	idataBANK0
   104  04EF                     __pidataBANK0:	
   105                           
   106                           ;initializer for i2c_data_detect@datain
   107  04EF  3447               	retlw	71
   108  000C                     _PIR1bits	set	12
   109  001A                     _RCREG	set	26
   110  0013                     _SSPBUF	set	19
   111  0014                     _SSPCON	set	20
   112  0014                     _SSPCONbits	set	20
   113  0019                     _TXREG	set	25
   114  00C4                     _CREN	set	196
   115  0065                     _RCIF	set	101
   116  00C7                     _SPEN	set	199
   117  0064                     _TXIF	set	100
   118  008F                     _OSCCONbits	set	143
   119  0099                     _SPBRG	set	153
   120  0093                     _SSPADD	set	147
   121  0094                     _SSPSTAT	set	148
   122  0094                     _SSPSTATbits	set	148
   123  0087                     _TRISCbits	set	135
   124  04C2                     _BRGH	set	1218
   125  04C4                     _SYNC	set	1220
   126  04C1                     _TRMT	set	1217
   127  04C5                     _TXEN	set	1221
   128                           
   129                           	psect	strings
   130  0003                     __pstrings:	
   131  0003                     stringtab:	
   132  0003                     __stringtab:	
   133                           
   134                           ;	String table - string pointers are 2 bytes each
   135  0003  1BFF               	btfsc	btemp+1,7
   136  0004  280D               	ljmp	stringcode
   137  0005  1383               	bcf	3,7
   138  0006  187F               	btfsc	btemp+1,0
   139  0007  1783               	bsf	3,7
   140  0008  0800               	movf	0,w
   141  0009  0A84               	incf	4,f
   142  000A  1903               	skipnz
   143  000B  0AFF               	incf	btemp+1,f
   144  000C  0008               	return
   145  000D                     stringcode:	
   146  000D  087F               	movf	btemp+1,w
   147  000E  397F               	andlw	127
   148  000F  008A               	movwf	10
   149  0010  0804               	movf	4,w
   150  0011  0A84               	incf	4,f
   151  0012  1903               	skipnz
   152  0013  0AFF               	incf	btemp+1,f
   153  0014  0082               	movwf	2
   154  0015                     __stringbase:	
   155  0015                     __end_of__stringtab:	
   156                           
   157                           	psect	stringtext
   158  0800                     __pstringtext:	
   159  0800                     __stringdata:	
   160  0800                     STR_1:	
   161  0800  340D               	retlw	13
   162  0801  340A               	retlw	10
   163  0802  342D               	retlw	45	;'-'
   164  0803  342D               	retlw	45	;'-'
   165  0804  342D               	retlw	45	;'-'
   166  0805  342D               	retlw	45	;'-'
   167  0806  342D               	retlw	45	;'-'
   168  0807  342D               	retlw	45	;'-'
   169  0808  342D               	retlw	45	;'-'
   170  0809  342D               	retlw	45	;'-'
   171  080A  342D               	retlw	45	;'-'
   172  080B  342D               	retlw	45	;'-'
   173  080C  342D               	retlw	45	;'-'
   174  080D  342D               	retlw	45	;'-'
   175  080E  342D               	retlw	45	;'-'
   176  080F  3453               	retlw	83	;'S'
   177  0810  344C               	retlw	76	;'L'
   178  0811  3441               	retlw	65	;'A'
   179  0812  3456               	retlw	86	;'V'
   180  0813  3445               	retlw	69	;'E'
   181  0814  3420               	retlw	32	;' '
   182  0815  3431               	retlw	49	;'1'
   183  0816  3428               	retlw	40	;'('
   184  0817  3430               	retlw	48	;'0'
   185  0818  3458               	retlw	88	;'X'
   186  0819  3441               	retlw	65	;'A'
   187  081A  3441               	retlw	65	;'A'
   188  081B  3429               	retlw	41	;')'
   189  081C  342D               	retlw	45	;'-'
   190  081D  342D               	retlw	45	;'-'
   191  081E  342D               	retlw	45	;'-'
   192  081F  342D               	retlw	45	;'-'
   193  0820  342D               	retlw	45	;'-'
   194  0821  342D               	retlw	45	;'-'
   195  0822  342D               	retlw	45	;'-'
   196  0823  342D               	retlw	45	;'-'
   197  0824  342D               	retlw	45	;'-'
   198  0825  342D               	retlw	45	;'-'
   199  0826  342D               	retlw	45	;'-'
   200  0827  342D               	retlw	45	;'-'
   201  0828  342D               	retlw	45	;'-'
   202  0829  342D               	retlw	45	;'-'
   203  082A  342D               	retlw	45	;'-'
   204  082B  340D               	retlw	13
   205  082C  340A               	retlw	10
   206  082D  3400               	retlw	0
   207  082E                     STR_2:	
   208  082E  340D               	retlw	13
   209  082F  340A               	retlw	10
   210  0830  342D               	retlw	45	;'-'
   211  0831  342D               	retlw	45	;'-'
   212  0832  342D               	retlw	45	;'-'
   213  0833  342D               	retlw	45	;'-'
   214  0834  342D               	retlw	45	;'-'
   215  0835  342D               	retlw	45	;'-'
   216  0836  342D               	retlw	45	;'-'
   217  0837  342D               	retlw	45	;'-'
   218  0838  342D               	retlw	45	;'-'
   219  0839  342D               	retlw	45	;'-'
   220  083A  342D               	retlw	45	;'-'
   221  083B  342D               	retlw	45	;'-'
   222  083C  342D               	retlw	45	;'-'
   223  083D  3453               	retlw	83	;'S'
   224  083E  344C               	retlw	76	;'L'
   225  083F  3441               	retlw	65	;'A'
   226  0840  3456               	retlw	86	;'V'
   227  0841  3445               	retlw	69	;'E'
   228  0842  3420               	retlw	32	;' '
   229  0843  3432               	retlw	50	;'2'
   230  0844  3428               	retlw	40	;'('
   231  0845  3430               	retlw	48	;'0'
   232  0846  3458               	retlw	88	;'X'
   233  0847  3442               	retlw	66	;'B'
   234  0848  3442               	retlw	66	;'B'
   235  0849  3429               	retlw	41	;')'
   236  084A  342D               	retlw	45	;'-'
   237  084B  342D               	retlw	45	;'-'
   238  084C  342D               	retlw	45	;'-'
   239  084D  342D               	retlw	45	;'-'
   240  084E  342D               	retlw	45	;'-'
   241  084F  342D               	retlw	45	;'-'
   242  0850  342D               	retlw	45	;'-'
   243  0851  342D               	retlw	45	;'-'
   244  0852  342D               	retlw	45	;'-'
   245  0853  342D               	retlw	45	;'-'
   246  0854  342D               	retlw	45	;'-'
   247  0855  342D               	retlw	45	;'-'
   248  0856  342D               	retlw	45	;'-'
   249  0857  342D               	retlw	45	;'-'
   250  0858  342D               	retlw	45	;'-'
   251  0859  340D               	retlw	13
   252  085A  340A               	retlw	10
   253  085B  3400               	retlw	0
   254  085C                     STR_3:	
   255  085C  340D               	retlw	13
   256  085D  340A               	retlw	10
   257  085E  342D               	retlw	45	;'-'
   258  085F  342D               	retlw	45	;'-'
   259  0860  342D               	retlw	45	;'-'
   260  0861  342D               	retlw	45	;'-'
   261  0862  342D               	retlw	45	;'-'
   262  0863  342D               	retlw	45	;'-'
   263  0864  342D               	retlw	45	;'-'
   264  0865  342D               	retlw	45	;'-'
   265  0866  342D               	retlw	45	;'-'
   266  0867  342D               	retlw	45	;'-'
   267  0868  342D               	retlw	45	;'-'
   268  0869  342D               	retlw	45	;'-'
   269  086A  342D               	retlw	45	;'-'
   270  086B  3453               	retlw	83	;'S'
   271  086C  344C               	retlw	76	;'L'
   272  086D  3441               	retlw	65	;'A'
   273  086E  3456               	retlw	86	;'V'
   274  086F  3445               	retlw	69	;'E'
   275  0870  3420               	retlw	32	;' '
   276  0871  3433               	retlw	51	;'3'
   277  0872  3428               	retlw	40	;'('
   278  0873  3430               	retlw	48	;'0'
   279  0874  3458               	retlw	88	;'X'
   280  0875  3443               	retlw	67	;'C'
   281  0876  3443               	retlw	67	;'C'
   282  0877  3429               	retlw	41	;')'
   283  0878  342D               	retlw	45	;'-'
   284  0879  342D               	retlw	45	;'-'
   285  087A  342D               	retlw	45	;'-'
   286  087B  342D               	retlw	45	;'-'
   287  087C  342D               	retlw	45	;'-'
   288  087D  342D               	retlw	45	;'-'
   289  087E  342D               	retlw	45	;'-'
   290  087F  342D               	retlw	45	;'-'
   291  0880  342D               	retlw	45	;'-'
   292  0881  342D               	retlw	45	;'-'
   293  0882  342D               	retlw	45	;'-'
   294  0883  342D               	retlw	45	;'-'
   295  0884  342D               	retlw	45	;'-'
   296  0885  342D               	retlw	45	;'-'
   297  0886  342D               	retlw	45	;'-'
   298  0887  340D               	retlw	13
   299  0888  340A               	retlw	10
   300  0889  3400               	retlw	0
   301  088A                     STR_10:	
   302  088A  340D               	retlw	13
   303  088B  340A               	retlw	10
   304  088C  3420               	retlw	32	;' '
   305  088D  344E               	retlw	78	;'N'
   306  088E  3465               	retlw	101	;'e'
   307  088F  3478               	retlw	120	;'x'
   308  0890  3474               	retlw	116	;'t'
   309  0891  3420               	retlw	32	;' '
   310  0892  346C               	retlw	108	;'l'
   311  0893  3469               	retlw	105	;'i'
   312  0894  346E               	retlw	110	;'n'
   313  0895  3465               	retlw	101	;'e'
   314  0896  3420               	retlw	32	;' '
   315  0897  3462               	retlw	98	;'b'
   316  0898  346C               	retlw	108	;'l'
   317  0899  3461               	retlw	97	;'a'
   318  089A  346E               	retlw	110	;'n'
   319  089B  346B               	retlw	107	;'k'
   320  089C  3420               	retlw	32	;' '
   321  089D  3461               	retlw	97	;'a'
   322  089E  3472               	retlw	114	;'r'
   323  089F  3472               	retlw	114	;'r'
   324  08A0  3461               	retlw	97	;'a'
   325  08A1  3479               	retlw	121	;'y'
   326  08A2  3420               	retlw	32	;' '
   327  08A3  3470               	retlw	112	;'p'
   328  08A4  3472               	retlw	114	;'r'
   329  08A5  3469               	retlw	105	;'i'
   330  08A6  346E               	retlw	110	;'n'
   331  08A7  3474               	retlw	116	;'t'
   332  08A8  340D               	retlw	13
   333  08A9  340A               	retlw	10
   334  08AA  3400               	retlw	0
   335  08AB                     STR_9:	
   336  08AB  340D               	retlw	13
   337  08AC  340A               	retlw	10
   338  08AD  3453               	retlw	83	;'S'
   339  08AE  346C               	retlw	108	;'l'
   340  08AF  3461               	retlw	97	;'a'
   341  08B0  3476               	retlw	118	;'v'
   342  08B1  3465               	retlw	101	;'e'
   343  08B2  3420               	retlw	32	;' '
   344  08B3  3449               	retlw	73	;'I'
   345  08B4  3432               	retlw	50	;'2'
   346  08B5  3443               	retlw	67	;'C'
   347  08B6  3420               	retlw	32	;' '
   348  08B7  3469               	retlw	105	;'i'
   349  08B8  346E               	retlw	110	;'n'
   350  08B9  3469               	retlw	105	;'i'
   351  08BA  3474               	retlw	116	;'t'
   352  08BB  3469               	retlw	105	;'i'
   353  08BC  3461               	retlw	97	;'a'
   354  08BD  346C               	retlw	108	;'l'
   355  08BE  3469               	retlw	105	;'i'
   356  08BF  3473               	retlw	115	;'s'
   357  08C0  3465               	retlw	101	;'e'
   358  08C1  3464               	retlw	100	;'d'
   359  08C2  343A               	retlw	58	;':'
   360  08C3  340D               	retlw	13
   361  08C4  340A               	retlw	10
   362  08C5  3400               	retlw	0
   363  08C6                     STR_4:	
   364  08C6  340D               	retlw	13
   365  08C7  340A               	retlw	10
   366  08C8  3457               	retlw	87	;'W'
   367  08C9  3461               	retlw	97	;'a'
   368  08CA  3469               	retlw	105	;'i'
   369  08CB  3474               	retlw	116	;'t'
   370  08CC  3469               	retlw	105	;'i'
   371  08CD  346E               	retlw	110	;'n'
   372  08CE  3467               	retlw	103	;'g'
   373  08CF  3420               	retlw	32	;' '
   374  08D0  3466               	retlw	102	;'f'
   375  08D1  346F               	retlw	111	;'o'
   376  08D2  3472               	retlw	114	;'r'
   377  08D3  3420               	retlw	32	;' '
   378  08D4  344D               	retlw	77	;'M'
   379  08D5  3461               	retlw	97	;'a'
   380  08D6  3473               	retlw	115	;'s'
   381  08D7  3474               	retlw	116	;'t'
   382  08D8  3465               	retlw	101	;'e'
   383  08D9  3472               	retlw	114	;'r'
   384  08DA  340D               	retlw	13
   385  08DB  340A               	retlw	10
   386  08DC  3400               	retlw	0
   387  08DD                     STR_6:	
   388  08DD  340D               	retlw	13
   389  08DE  340A               	retlw	10
   390  08DF  3420               	retlw	32	;' '
   391  08E0  3441               	retlw	65	;'A'
   392  08E1  3464               	retlw	100	;'d'
   393  08E2  3464               	retlw	100	;'d'
   394  08E3  3472               	retlw	114	;'r'
   395  08E4  3465               	retlw	101	;'e'
   396  08E5  3473               	retlw	115	;'s'
   397  08E6  3473               	retlw	115	;'s'
   398  08E7  3420               	retlw	32	;' '
   399  08E8  3464               	retlw	100	;'d'
   400  08E9  3465               	retlw	101	;'e'
   401  08EA  3474               	retlw	116	;'t'
   402  08EB  3465               	retlw	101	;'e'
   403  08EC  3463               	retlw	99	;'c'
   404  08ED  3474               	retlw	116	;'t'
   405  08EE  3465               	retlw	101	;'e'
   406  08EF  3464               	retlw	100	;'d'
   407  08F0  340D               	retlw	13
   408  08F1  340A               	retlw	10
   409  08F2  3400               	retlw	0
   410  08F3                     STR_7:	
   411  08F3  340D               	retlw	13
   412  08F4  340A               	retlw	10
   413  08F5  3420               	retlw	32	;' '
   414  08F6  3444               	retlw	68	;'D'
   415  08F7  3461               	retlw	97	;'a'
   416  08F8  3474               	retlw	116	;'t'
   417  08F9  3461               	retlw	97	;'a'
   418  08FA  3420               	retlw	32	;' '
   419  08FB  3472               	retlw	114	;'r'
   420  08FC  3465               	retlw	101	;'e'
   421  08FD  3463               	retlw	99	;'c'
   422  08FE  3469               	retlw	105	;'i'
   423  08FF  3465               	retlw	101	;'e'
   424  0900  3476               	retlw	118	;'v'
   425  0901  3465               	retlw	101	;'e'
   426  0902  3464               	retlw	100	;'d'
   427  0903  343F               	retlw	63	;'?'
   428  0904  343F               	retlw	63	;'?'
   429  0905  340D               	retlw	13
   430  0906  340A               	retlw	10
   431  0907  3400               	retlw	0
   432  0908                     STR_8:	
   433  0908  340D               	retlw	13
   434  0909  340A               	retlw	10
   435  090A  3455               	retlw	85	;'U'
   436  090B  3441               	retlw	65	;'A'
   437  090C  3452               	retlw	82	;'R'
   438  090D  3454               	retlw	84	;'T'
   439  090E  3420               	retlw	32	;' '
   440  090F  3449               	retlw	73	;'I'
   441  0910  346E               	retlw	110	;'n'
   442  0911  3469               	retlw	105	;'i'
   443  0912  3474               	retlw	116	;'t'
   444  0913  3469               	retlw	105	;'i'
   445  0914  3461               	retlw	97	;'a'
   446  0915  346C               	retlw	108	;'l'
   447  0916  3469               	retlw	105	;'i'
   448  0917  3473               	retlw	115	;'s'
   449  0918  3465               	retlw	101	;'e'
   450  0919  3464               	retlw	100	;'d'
   451  091A  340D               	retlw	13
   452  091B  340A               	retlw	10
   453  091C  3400               	retlw	0
   454  091D                     STR_5:	
   455  091D  340D               	retlw	13
   456  091E  340A               	retlw	10
   457  091F  3420               	retlw	32	;' '
   458  0920  3442               	retlw	66	;'B'
   459  0921  3465               	retlw	101	;'e'
   460  0922  3466               	retlw	102	;'f'
   461  0923  346F               	retlw	111	;'o'
   462  0924  3472               	retlw	114	;'r'
   463  0925  3465               	retlw	101	;'e'
   464  0926  3420               	retlw	32	;' '
   465  0927  3473               	retlw	115	;'s'
   466  0928  3474               	retlw	116	;'t'
   467  0929  3461               	retlw	97	;'a'
   468  092A  3472               	retlw	114	;'r'
   469  092B  3474               	retlw	116	;'t'
   470  092C  340D               	retlw	13
   471  092D  340A               	retlw	10
   472  092E  3400               	retlw	0
   473  092F                     STR_12:	
   474  092F  340D               	retlw	13
   475  0930  340A               	retlw	10
   476  0931  3444               	retlw	68	;'D'
   477  0932  3441               	retlw	65	;'A'
   478  0933  3454               	retlw	84	;'T'
   479  0934  3441               	retlw	65	;'A'
   480  0935  3420               	retlw	32	;' '
   481  0936  3452               	retlw	82	;'R'
   482  0937  3445               	retlw	69	;'E'
   483  0938  3441               	retlw	65	;'A'
   484  0939  3444               	retlw	68	;'D'
   485  093A  340D               	retlw	13
   486  093B  340A               	retlw	10
   487  093C  3400               	retlw	0
   488  093D                     STR_13:	
   489  093D  344B               	retlw	75	;'K'
   490  093E  3465               	retlw	101	;'e'
   491  093F  3479               	retlw	121	;'y'
   492  0940  3465               	retlw	101	;'e'
   493  0941  3464               	retlw	100	;'d'
   494  0942  3420               	retlw	32	;' '
   495  0943  3469               	retlw	105	;'i'
   496  0944  346E               	retlw	110	;'n'
   497  0945  3420               	retlw	32	;' '
   498  0946  340D               	retlw	13
   499  0947  340A               	retlw	10
   500  0948  3400               	retlw	0
   501  0949                     __end_of__stringdata:	
   502                           
   503                           ; #config settings
   504  0000                     
   505                           	psect	cinit
   506  07EF                     start_initialization:	
   507  07EF                     __initialization:	
   508                           
   509                           ; Clear objects allocated to BANK0
   510  07EF  1383               	bcf	3,7	;select IRP bank0
   511  07F0  303E               	movlw	low __pbssBANK0
   512  07F1  0084               	movwf	4
   513  07F2  3054               	movlw	low (__pbssBANK0+22)
   514  07F3  120A  118A  24F5  120A  118A  	fcall	clear_ram0
   515                           
   516                           ; Initialize objects allocated to BANK0
   517  07F8  120A  118A  24EF   	fcall	__pidataBANK0	;fetch initializer
   518  07FB  00D4               	movwf	__pdataBANK0& (0+127)
   519  07FC                     end_of_initialization:	
   520                           ;End of C runtime variable initialization code
   521                           
   522  07FC                     __end_of__initialization:	
   523  07FC  0183               	clrf	3
   524  07FD  120A  118A  2E29   	ljmp	_main	;jump to C main() function
   525                           
   526                           	psect	bssBANK0
   527  003E                     __pbssBANK0:	
   528  003E                     _addr:	
   529  003E                     	ds	1
   530  003F                     i2c_address_detect@condition:	
   531  003F                     	ds	1
   532  0040                     UART_Read_Text@string:	
   533  0040                     	ds	20
   534                           
   535                           	psect	dataBANK0
   536  0054                     __pdataBANK0:	
   537  0054                     i2c_data_detect@datain:	
   538  0054                     	ds	1
   539                           
   540                           	psect	clrtext
   541  04F5                     clear_ram0:	
   542                           ;	Called with FSR containing the base address, and
   543                           ;	W with the last address+1
   544                           
   545  04F5  0064               	clrwdt	;clear the watchdog before getting into this loop
   546  04F6                     clrloop0:	
   547  04F6  0180               	clrf	0	;clear RAM location pointed to by FSR
   548  04F7  0A84               	incf	4,f	;increment pointer
   549  04F8  0604               	xorwf	4,w	;XOR with final address
   550  04F9  1903               	btfsc	3,2	;have we reached the end yet?
   551  04FA  3400               	retlw	0	;all done for this memory range, return
   552  04FB  0604               	xorwf	4,w	;XOR again to restore value
   553  04FC  2CF6               	goto	clrloop0	;do the next byte
   554                           
   555                           	psect	cstackBANK3
   556  0190                     __pcstackBANK3:	
   557  0190                     main@array:	
   558                           
   559                           ; 80 bytes @ 0x0
   560  0190                     	ds	80
   561  01E0                     main@main2:	
   562                           
   563                           ; 2 bytes @ 0x50
   564  01E0                     	ds	2
   565  01E2                     main@msg1:	
   566                           
   567                           ; 2 bytes @ 0x52
   568  01E2                     	ds	2
   569  01E4                     main@arr1:	
   570                           
   571                           ; 2 bytes @ 0x54
   572  01E4                     	ds	2
   573  01E6                     main@arr2:	
   574                           
   575                           ; 2 bytes @ 0x56
   576  01E6                     	ds	2
   577  01E8                     main@i:	
   578                           
   579                           ; 1 bytes @ 0x58
   580  01E8                     	ds	1
   581                           
   582                           	psect	cstackCOMMON
   583  0070                     __pcstackCOMMON:	
   584  0070                     ?_i2c_slave_init:	
   585  0070                     ??_i2c_slave_init:	
   586                           ; 0 bytes @ 0x0
   587                           
   588  0070                     ?_i2c_start_detect:	
   589                           ; 0 bytes @ 0x0
   590                           
   591  0070                     ??_i2c_start_detect:	
   592                           ; 0 bytes @ 0x0
   593                           
   594  0070                     ?_i2c_address_detect:	
   595                           ; 0 bytes @ 0x0
   596                           
   597  0070                     ??_i2c_address_detect:	
   598                           ; 0 bytes @ 0x0
   599                           
   600  0070                     ?_UART_Write:	
   601                           ; 0 bytes @ 0x0
   602                           
   603  0070                     ??_UART_Write:	
   604                           ; 0 bytes @ 0x0
   605                           
   606  0070                     ??_i2c_data_detect:	
   607                           ; 0 bytes @ 0x0
   608                           
   609  0070                     ?_delay1ms:	
   610                           ; 0 bytes @ 0x0
   611                           
   612  0070                     ??_delay1ms:	
   613                           ; 0 bytes @ 0x0
   614                           
   615  0070                     ?_main:	
   616                           ; 0 bytes @ 0x0
   617                           
   618  0070                     ?_i2c_data_detect:	
   619                           ; 0 bytes @ 0x0
   620                           
   621  0070                     ?___aldiv:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     UART_Write@data:	
   625                           ; 4 bytes @ 0x0
   626                           
   627  0070                     delay1ms@j:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ___aldiv@divisor:	
   631                           ; 2 bytes @ 0x0
   632                           
   633                           
   634                           ; 4 bytes @ 0x0
   635  0070                     	ds	1
   636  0071                     ?_UART_Write_Text:	
   637  0071                     UART_Write_Text@text:	
   638                           ; 0 bytes @ 0x1
   639                           
   640                           
   641                           ; 2 bytes @ 0x1
   642  0071                     	ds	1
   643  0072                     ?_delay_ms:	
   644  0072                     delay_ms@i:	
   645                           ; 0 bytes @ 0x2
   646                           
   647                           
   648                           ; 2 bytes @ 0x2
   649  0072                     	ds	1
   650  0073                     ??_UART_Write_Text:	
   651                           
   652                           ; 0 bytes @ 0x3
   653  0073                     	ds	1
   654  0074                     ??_delay_ms:	
   655  0074                     ___aldiv@dividend:	
   656                           ; 0 bytes @ 0x4
   657                           
   658                           
   659                           ; 4 bytes @ 0x4
   660  0074                     	ds	2
   661  0076                     UART_Write_Text@i:	
   662                           
   663                           ; 2 bytes @ 0x6
   664  0076                     	ds	2
   665  0078                     ??___aldiv:	
   666                           
   667                           ; 0 bytes @ 0x8
   668  0078                     	ds	1
   669  0079                     UART_Init@x:	
   670                           
   671                           ; 2 bytes @ 0x9
   672  0079                     	ds	2
   673  007B                     ??_main:	
   674                           
   675                           ; 0 bytes @ 0xB
   676  007B                     	ds	1
   677  007C                     main@main1:	
   678                           
   679                           ; 2 bytes @ 0xC
   680  007C                     	ds	2
   681                           
   682                           	psect	cstackBANK0
   683  0020                     __pcstackBANK0:	
   684  0020                     ___aldiv@counter:	
   685                           
   686                           ; 1 bytes @ 0x0
   687  0020                     	ds	1
   688  0021                     ___aldiv@sign:	
   689                           
   690                           ; 1 bytes @ 0x1
   691  0021                     	ds	1
   692  0022                     ___aldiv@quotient:	
   693                           
   694                           ; 4 bytes @ 0x2
   695  0022                     	ds	4
   696  0026                     ?_UART_Init:	
   697  0026                     UART_Init@baudrate:	
   698                           ; 1 bytes @ 0x6
   699                           
   700                           
   701                           ; 4 bytes @ 0x6
   702  0026                     	ds	4
   703  002A                     ??_UART_Init:	
   704                           
   705                           ; 0 bytes @ 0xA
   706  002A                     	ds	12
   707  0036                     main@main3:	
   708                           
   709                           ; 2 bytes @ 0x16
   710  0036                     	ds	2
   711  0038                     main@t1:	
   712                           
   713                           ; 2 bytes @ 0x18
   714  0038                     	ds	2
   715  003A                     main@t2:	
   716                           
   717                           ; 2 bytes @ 0x1A
   718  003A                     	ds	2
   719  003C                     main@t3:	
   720                           
   721                           ; 2 bytes @ 0x1C
   722  003C                     	ds	2
   723                           
   724                           	psect	maintext
   725  0629                     __pmaintext:	
   726 ;;
   727 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   728 ;;
   729 ;; *************** function _main *****************
   730 ;; Defined at:
   731 ;;		line 50 in file "slavestr2.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  array          80    0[BANK3 ] unsigned char [80]
   736 ;;  arr2            2   86[BANK3 ] PTR const unsigned char 
   737 ;;		 -> STR_9(27), 
   738 ;;  arr1            2   84[BANK3 ] PTR const unsigned char 
   739 ;;		 -> STR_8(21), 
   740 ;;  msg1            2   82[BANK3 ] PTR const unsigned char 
   741 ;;		 -> STR_4(23), 
   742 ;;  main2           2   80[BANK3 ] PTR const unsigned char 
   743 ;;		 -> STR_2(46), 
   744 ;;  t3              2   28[BANK0 ] PTR const unsigned char 
   745 ;;		 -> STR_7(21), 
   746 ;;  t2              2   26[BANK0 ] PTR const unsigned char 
   747 ;;		 -> STR_6(22), 
   748 ;;  t1              2   24[BANK0 ] PTR const unsigned char 
   749 ;;		 -> STR_5(18), 
   750 ;;  main3           2   22[BANK0 ] PTR const unsigned char 
   751 ;;		 -> STR_3(46), 
   752 ;;  main1           2   12[COMMON] PTR const unsigned char 
   753 ;;		 -> STR_1(46), 
   754 ;;  i               1   88[BANK3 ] unsigned char 
   755 ;; Return value:  Size  Location     Type
   756 ;;		None               void
   757 ;; Registers used:
   758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 17F/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   764 ;;      Params:         0       0       0       0       0
   765 ;;      Locals:         2       8       0      89       0
   766 ;;      Temps:          1       0       0       0       0
   767 ;;      Totals:         3       8       0      89       0
   768 ;;Total ram usage:      100 bytes
   769 ;; Hardware stack levels required when called:    2
   770 ;; This function calls:
   771 ;;		_UART_Init
   772 ;;		_UART_Write
   773 ;;		_UART_Write_Text
   774 ;;		_delay_ms
   775 ;;		_i2c_address_detect
   776 ;;		_i2c_data_detect
   777 ;;		_i2c_slave_init
   778 ;;		_i2c_start_detect
   779 ;; This function is called by:
   780 ;;		Startup code after reset
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _main
   786  0629                     _main:	
   787                           
   788                           ;slavestr2.c: 52: unsigned char i;
   789                           ;slavestr2.c: 54: unsigned char array[80];
   790                           ;slavestr2.c: 56: const char *main1="\r\n-------------SLAVE 1(0XAA)---------------\r\n";
   791                           
   792                           ;incstack = 0
   793                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   794  0629  3000               	movlw	low (STR_1| (0+32768))
   795  062A  00FC               	movwf	main@main1
   796  062B  3088               	movlw	high (STR_1| (0+32768))
   797  062C  00FD               	movwf	main@main1+1
   798                           
   799                           ;slavestr2.c: 58: const char *main2="\r\n-------------SLAVE 2(0XBB)---------------\r\n";
   800  062D  302E               	movlw	low (STR_2| (0+32768))
   801  062E  1683               	bsf	3,5	;RP0=1, select bank3
   802  062F  1703               	bsf	3,6	;RP1=1, select bank3
   803  0630  00E0               	movwf	main@main2^(0+384)
   804  0631  3088               	movlw	high (STR_2| (0+32768))
   805  0632  00E1               	movwf	(main@main2^(0+384)+1)
   806                           
   807                           ;slavestr2.c: 60: const char *main3="\r\n-------------SLAVE 3(0XCC)---------------\r\n";
   808  0633  305C               	movlw	low (STR_3| (0+32768))
   809  0634  1283               	bcf	3,5	;RP0=0, select bank0
   810  0635  1303               	bcf	3,6	;RP1=0, select bank0
   811  0636  00B6               	movwf	main@main3
   812  0637  3088               	movlw	high (STR_3| (0+32768))
   813  0638  00B7               	movwf	main@main3+1
   814                           
   815                           ;slavestr2.c: 62: const char *msg1="\r\nWaiting for Master\r\n";
   816  0639  30C6               	movlw	low (STR_4| (0+32768))
   817  063A  1683               	bsf	3,5	;RP0=1, select bank3
   818  063B  1703               	bsf	3,6	;RP1=1, select bank3
   819  063C  00E2               	movwf	main@msg1^(0+384)
   820  063D  3088               	movlw	high (STR_4| (0+32768))
   821  063E  00E3               	movwf	(main@msg1^(0+384)+1)
   822                           
   823                           ;slavestr2.c: 64: const char *t1="\r\n Before start\r\n";
   824  063F  301D               	movlw	low (STR_5| (0+32768))
   825  0640  1283               	bcf	3,5	;RP0=0, select bank0
   826  0641  1303               	bcf	3,6	;RP1=0, select bank0
   827  0642  00B8               	movwf	main@t1
   828  0643  3089               	movlw	high (STR_5| (0+32768))
   829  0644  00B9               	movwf	main@t1+1
   830                           
   831                           ;slavestr2.c: 66: const char *t2="\r\n Address detected\r\n";
   832  0645  30DD               	movlw	low (STR_6| (0+32768))
   833  0646  00BA               	movwf	main@t2
   834  0647  3088               	movlw	high (STR_6| (0+32768))
   835  0648  00BB               	movwf	main@t2+1
   836                           
   837                           ;slavestr2.c: 68: const char *t3="\r\n Data recieved??\r\n";
   838  0649  30F3               	movlw	low (STR_7| (0+32768))
   839  064A  00BC               	movwf	main@t3
   840  064B  3088               	movlw	high (STR_7| (0+32768))
   841  064C  00BD               	movwf	main@t3+1
   842                           
   843                           ;slavestr2.c: 70: const unsigned char *arr1= "\r\nUART Initialised\r\n";
   844  064D  3008               	movlw	low (STR_8| (0+32768))
   845  064E  1683               	bsf	3,5	;RP0=1, select bank3
   846  064F  1703               	bsf	3,6	;RP1=1, select bank3
   847  0650  00E4               	movwf	main@arr1^(0+384)
   848  0651  3089               	movlw	high (STR_8| (0+32768))
   849  0652  00E5               	movwf	(main@arr1^(0+384)+1)
   850                           
   851                           ;slavestr2.c: 72: const unsigned char *arr2= "\r\nSlave I2C initialised:\r\n";
   852  0653  30AB               	movlw	low (STR_9| (0+32768))
   853  0654  00E6               	movwf	main@arr2^(0+384)
   854  0655  3088               	movlw	high (STR_9| (0+32768))
   855  0656  00E7               	movwf	(main@arr2^(0+384)+1)
   856                           
   857                           ;slavestr2.c: 74: OSCCONbits.IRCF = 0x07;
   858  0657  3070               	movlw	112
   859  0658  1683               	bsf	3,5	;RP0=1, select bank1
   860  0659  1303               	bcf	3,6	;RP1=0, select bank1
   861  065A  048F               	iorwf	15,f	;volatile
   862  065B                     l63:	
   863                           ;slavestr2.c: 76: while(!OSCCONbits.HTS);
   864                           
   865  065B  1D0F               	btfss	15,2	;volatile
   866  065C  2E5B               	goto	l63
   867                           
   868                           ;slavestr2.c: 78: UART_Init(9600);
   869  065D  3000               	movlw	0
   870  065E  1283               	bcf	3,5	;RP0=0, select bank0
   871  065F  1303               	bcf	3,6	;RP1=0, select bank0
   872  0660  00A9               	movwf	UART_Init@baudrate+3
   873  0661  3000               	movlw	0
   874  0662  00A8               	movwf	UART_Init@baudrate+2
   875  0663  3025               	movlw	37
   876  0664  00A7               	movwf	UART_Init@baudrate+1
   877  0665  3080               	movlw	128
   878  0666  00A6               	movwf	UART_Init@baudrate
   879  0667  120A  118A  26FE  120A  118A  	fcall	_UART_Init
   880                           
   881                           ;slavestr2.c: 80: UART_Write_Text(main2);
   882  066C  1683               	bsf	3,5	;RP0=1, select bank3
   883  066D  1703               	bsf	3,6	;RP1=1, select bank3
   884  066E  0861               	movf	(main@main2+1)^(0+384),w
   885  066F  01F2               	clrf	UART_Write_Text@text+1
   886  0670  07F2               	addwf	UART_Write_Text@text+1,f
   887  0671  0860               	movf	main@main2^(0+384),w
   888  0672  01F1               	clrf	UART_Write_Text@text
   889  0673  07F1               	addwf	UART_Write_Text@text,f
   890  0674  120A  118A  255D  120A  118A  	fcall	_UART_Write_Text
   891                           
   892                           ;slavestr2.c: 82: UART_Write_Text(arr1);
   893  0679  1683               	bsf	3,5	;RP0=1, select bank3
   894  067A  1703               	bsf	3,6	;RP1=1, select bank3
   895  067B  0865               	movf	(main@arr1+1)^(0+384),w
   896  067C  01F2               	clrf	UART_Write_Text@text+1
   897  067D  07F2               	addwf	UART_Write_Text@text+1,f
   898  067E  0864               	movf	main@arr1^(0+384),w
   899  067F  01F1               	clrf	UART_Write_Text@text
   900  0680  07F1               	addwf	UART_Write_Text@text,f
   901  0681  120A  118A  255D  120A  118A  	fcall	_UART_Write_Text
   902                           
   903                           ;slavestr2.c: 84: delay_ms(500);
   904  0686  30F4               	movlw	244
   905  0687  00F2               	movwf	delay_ms@i
   906  0688  3001               	movlw	1
   907  0689  00F3               	movwf	delay_ms@i+1
   908  068A  120A  118A  2528  120A  118A  	fcall	_delay_ms
   909                           
   910                           ;slavestr2.c: 86: UART_Write_Text(msg1);
   911  068F  1683               	bsf	3,5	;RP0=1, select bank3
   912  0690  1703               	bsf	3,6	;RP1=1, select bank3
   913  0691  0863               	movf	(main@msg1+1)^(0+384),w
   914  0692  01F2               	clrf	UART_Write_Text@text+1
   915  0693  07F2               	addwf	UART_Write_Text@text+1,f
   916  0694  0862               	movf	main@msg1^(0+384),w
   917  0695  01F1               	clrf	UART_Write_Text@text
   918  0696  07F1               	addwf	UART_Write_Text@text,f
   919  0697  120A  118A  255D  120A  118A  	fcall	_UART_Write_Text
   920                           
   921                           ;slavestr2.c: 88: i2c_slave_init();
   922  069C  120A  118A  2538  120A  118A  	fcall	_i2c_slave_init
   923                           
   924                           ;slavestr2.c: 90: UART_Write_Text(arr2);
   925  06A1  1683               	bsf	3,5	;RP0=1, select bank3
   926  06A2  1703               	bsf	3,6	;RP1=1, select bank3
   927  06A3  0867               	movf	(main@arr2+1)^(0+384),w
   928  06A4  01F2               	clrf	UART_Write_Text@text+1
   929  06A5  07F2               	addwf	UART_Write_Text@text+1,f
   930  06A6  0866               	movf	main@arr2^(0+384),w
   931  06A7  01F1               	clrf	UART_Write_Text@text
   932  06A8  07F1               	addwf	UART_Write_Text@text,f
   933  06A9                     L1:	
   934  06A9  120A  118A  255D  120A  118A  	fcall	_UART_Write_Text
   935                           
   936                           ;slavestr2.c: 93: {
   937                           ;slavestr2.c: 94: for(i=0;i<=80;i++)
   938                           
   939                           ;slavestr2.c: 92: while(1)
   940  06AE  1683               	bsf	3,5	;RP0=1, select bank3
   941  06AF  1703               	bsf	3,6	;RP1=1, select bank3
   942  06B0  01E8               	clrf	main@i^(0+384)
   943  06B1  3051               	movlw	81
   944  06B2  0268               	subwf	main@i^(0+384),w
   945  06B3  1803               	btfsc	3,0
   946  06B4  2EC2               	goto	l1017
   947  06B5                     l1011:	
   948                           
   949                           ;slavestr2.c: 95: {
   950                           ;slavestr2.c: 96: array[i]=0;
   951  06B5  0868               	movf	main@i^(0+384),w
   952  06B6  3E90               	addlw	main@array& (0+255)
   953  06B7  0084               	movwf	4
   954  06B8  1783               	bsf	3,7	;select IRP bank3
   955  06B9  0180               	clrf	0
   956  06BA  3001               	movlw	1
   957  06BB  00FB               	movwf	??_main
   958  06BC  087B               	movf	??_main,w
   959  06BD  07E8               	addwf	main@i^(0+384),f
   960  06BE  3051               	movlw	81
   961  06BF  0268               	subwf	main@i^(0+384),w
   962  06C0  1C03               	skipc
   963  06C1  2EB5               	goto	l1011
   964  06C2                     l1017:	
   965                           
   966                           ;slavestr2.c: 97: }
   967                           ;slavestr2.c: 98: i=0;
   968  06C2  01E8               	clrf	main@i^(0+384)
   969                           
   970                           ;slavestr2.c: 102: UART_Write_Text("\r\n Next line blank array print\r\n");
   971  06C3  308A               	movlw	low (STR_10| (0+32768))
   972  06C4  00F1               	movwf	UART_Write_Text@text
   973  06C5  3088               	movlw	high (STR_10| (0+32768))
   974  06C6  00F2               	movwf	UART_Write_Text@text+1
   975  06C7  120A  118A  255D  120A  118A  	fcall	_UART_Write_Text
   976                           
   977                           ;slavestr2.c: 104: UART_Write_Text(array);
   978  06CC  3090               	movlw	main@array& (0+255)
   979  06CD  00F1               	movwf	UART_Write_Text@text
   980  06CE  3001               	movlw	1
   981  06CF  00F2               	movwf	UART_Write_Text@text+1
   982  06D0  120A  118A  255D  120A  118A  	fcall	_UART_Write_Text
   983                           
   984                           ;slavestr2.c: 106: UART_Write_Text("\r\n");
   985  06D5  3046               	movlw	low ((STR_13+9)| (0+32768))
   986  06D6  00F1               	movwf	UART_Write_Text@text
   987  06D7  3089               	movlw	high ((STR_13+9)| (0+32768))
   988  06D8  00F2               	movwf	UART_Write_Text@text+1
   989  06D9  120A  118A  255D  120A  118A  	fcall	_UART_Write_Text
   990                           
   991                           ;slavestr2.c: 110: i2c_start_detect();
   992  06DE  120A  118A  24F0  120A  118A  	fcall	_i2c_start_detect
   993                           
   994                           ;slavestr2.c: 112: PIR1bits.SSPIF=0;
   995  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   996  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   997  06E5  118C               	bcf	12,3	;volatile
   998                           
   999                           ;slavestr2.c: 114: i2c_address_detect();
  1000  06E6  120A  118A  250B  120A  118A  	fcall	_i2c_address_detect
  1001  06EB                     l1031:	
  1002                           ;slavestr2.c: 116: do
  1003                           
  1004                           
  1005                           ;slavestr2.c: 117: {
  1006                           ;slavestr2.c: 118: UART_Write(i2c_data_detect());
  1007  06EB  120A  118A  2549  120A  118A  	fcall	_i2c_data_detect
  1008  06F0  120A  118A  24FD  120A  118A  	fcall	_UART_Write
  1009                           
  1010                           ;slavestr2.c: 120: }while(!(SSPSTATbits.P));
  1011  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  1012  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  1013  06F7  1E14               	btfss	20,4	;volatile
  1014  06F8  2EEB               	goto	l1031
  1015                           
  1016                           ;slavestr2.c: 121: UART_Write_Text("\r\nDATA READ\r\n");
  1017  06F9  302F               	movlw	low (STR_12| (0+32768))
  1018  06FA  00F1               	movwf	UART_Write_Text@text
  1019  06FB  3089               	movlw	high (STR_12| (0+32768))
  1020  06FC  00F2               	movwf	UART_Write_Text@text+1
  1021  06FD  2EA9               	goto	L1
  1022  06FE                     __end_of_main:	
  1023                           
  1024                           	psect	text1
  1025  04F0                     __ptext1:	
  1026 ;; *************** function _i2c_start_detect *****************
  1027 ;; Defined at:
  1028 ;;		line 154 in file "slavestr2.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;		None               void
  1035 ;; Registers used:
  1036 ;;		None
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1042 ;;      Params:         0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0
  1045 ;;      Totals:         0       0       0       0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; This function calls:
  1049 ;;		Nothing
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function _i2c_start_detect
  1057  04F0                     _i2c_start_detect:	
  1058  04F0                     l79:	
  1059                           ;slavestr2.c: 157: while(!(SSPSTATbits.S));
  1060                           
  1061                           ;incstack = 0
  1062                           ; Regs used in _i2c_start_detect: []
  1063                           
  1064  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  1065  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  1066  04F2  1994               	btfsc	20,3	;volatile
  1067  04F3  0008               	return
  1068  04F4  2CF0               	goto	l79
  1069  04F5                     __end_of_i2c_start_detect:	
  1070                           
  1071                           	psect	text2
  1072  0538                     __ptext2:	
  1073 ;; *************** function _i2c_slave_init *****************
  1074 ;; Defined at:
  1075 ;;		line 142 in file "slavestr2.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;		None               void
  1082 ;; Registers used:
  1083 ;;		wreg, status,2
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0
  1092 ;;      Totals:         0       0       0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _i2c_slave_init
  1104  0538                     _i2c_slave_init:	
  1105                           
  1106                           ;slavestr2.c: 144: TRISCbits.TRISC3 = 1;
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _i2c_slave_init: [wreg+status,2]
  1110  0538  1683               	bsf	3,5	;RP0=1, select bank1
  1111  0539  1303               	bcf	3,6	;RP1=0, select bank1
  1112  053A  1587               	bsf	7,3	;volatile
  1113                           
  1114                           ;slavestr2.c: 145: TRISCbits.TRISC4 = 1;
  1115  053B  1607               	bsf	7,4	;volatile
  1116                           
  1117                           ;slavestr2.c: 146: SSPADD = 0xBB;
  1118  053C  30BB               	movlw	187
  1119  053D  0093               	movwf	19	;volatile
  1120                           
  1121                           ;slavestr2.c: 148: SSPCON = 0X36;
  1122  053E  3036               	movlw	54
  1123  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0541  0094               	movwf	20	;volatile
  1126                           
  1127                           ;slavestr2.c: 149: SSPSTAT =0;
  1128  0542  1683               	bsf	3,5	;RP0=1, select bank1
  1129  0543  1303               	bcf	3,6	;RP1=0, select bank1
  1130  0544  0194               	clrf	20	;volatile
  1131                           
  1132                           ;slavestr2.c: 151: PIR1bits.SSPIF = 0;
  1133  0545  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0546  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0547  118C               	bcf	12,3	;volatile
  1136  0548  0008               	return
  1137  0549                     __end_of_i2c_slave_init:	
  1138                           
  1139                           	psect	text3
  1140  0549                     __ptext3:	
  1141 ;; *************** function _i2c_data_detect *****************
  1142 ;; Defined at:
  1143 ;;		line 182 in file "slavestr2.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      unsigned char 
  1150 ;; Registers used:
  1151 ;;		wreg
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0
  1159 ;;      Temps:          1       0       0       0       0
  1160 ;;      Totals:         1       0       0       0       0
  1161 ;;Total ram usage:        1 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _i2c_data_detect
  1172  0549                     _i2c_data_detect:	
  1173  0549                     l98:	
  1174                           ;incstack = 0
  1175                           ; Regs used in _i2c_data_detect: [wreg]
  1176                           ;slavestr2.c: 184: unsigned static char datain='G';
  1177                           ;slavestr2.c: 185: do
  1178                           
  1179                           
  1180                           ;slavestr2.c: 186: {
  1181                           ;slavestr2.c: 187: SSPCONbits.SSPOV = 0;
  1182  0549  1283               	bcf	3,5	;RP0=0, select bank0
  1183  054A  1303               	bcf	3,6	;RP1=0, select bank0
  1184  054B  1314               	bcf	20,6	;volatile
  1185                           
  1186                           ;slavestr2.c: 188: }while((!(SSPSTATbits.BF)) && (!(SSPSTATbits.P)));
  1187  054C  1683               	bsf	3,5	;RP0=1, select bank1
  1188  054D  1303               	bcf	3,6	;RP1=0, select bank1
  1189  054E  1814               	btfsc	20,0	;volatile
  1190  054F  2D52               	goto	l981
  1191  0550  1E14               	btfss	20,4	;volatile
  1192  0551  2D49               	goto	l98
  1193  0552                     l981:	
  1194                           
  1195                           ;slavestr2.c: 189: datain=SSPBUF;
  1196  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0554  0813               	movf	19,w	;volatile
  1199  0555  00F0               	movwf	??_i2c_data_detect
  1200  0556  0870               	movf	??_i2c_data_detect,w
  1201  0557  00D4               	movwf	i2c_data_detect@datain
  1202                           
  1203                           ;slavestr2.c: 192: SSPCONbits.CKP = 0;
  1204  0558  1214               	bcf	20,4	;volatile
  1205                           
  1206                           ;slavestr2.c: 194: PIR1bits.SSPIF = 0;
  1207  0559  118C               	bcf	12,3	;volatile
  1208                           
  1209                           ;slavestr2.c: 195: SSPCONbits.CKP = 1;
  1210  055A  1614               	bsf	20,4	;volatile
  1211                           
  1212                           ;slavestr2.c: 196: return datain;
  1213  055B  0854               	movf	i2c_data_detect@datain,w
  1214  055C  0008               	return
  1215  055D                     __end_of_i2c_data_detect:	
  1216                           
  1217                           	psect	text4
  1218  050B                     __ptext4:	
  1219 ;; *************** function _i2c_address_detect *****************
  1220 ;; Defined at:
  1221 ;;		line 163 in file "slavestr2.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;		None               void
  1228 ;; Registers used:
  1229 ;;		wreg
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0
  1237 ;;      Temps:          1       0       0       0       0
  1238 ;;      Totals:         1       0       0       0       0
  1239 ;;Total ram usage:        1 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           
  1249                           ;psect for function _i2c_address_detect
  1250  050B                     _i2c_address_detect:	
  1251  050B                     l87:	
  1252                           ;slavestr2.c: 166: static unsigned char condition;
  1253                           ;slavestr2.c: 168: while(!(SSPSTATbits.BF));
  1254                           
  1255                           ;incstack = 0
  1256                           ; Regs used in _i2c_address_detect: [wreg]
  1257                           
  1258  050B  1683               	bsf	3,5	;RP0=1, select bank1
  1259  050C  1303               	bcf	3,6	;RP1=0, select bank1
  1260  050D  1C14               	btfss	20,0	;volatile
  1261  050E  2D0B               	goto	l87
  1262  050F                     l90:	
  1263                           ;slavestr2.c: 170: while(SSPSTATbits.D_A);
  1264                           
  1265  050F  1A94               	btfsc	20,5	;volatile
  1266  0510  2D0F               	goto	l90
  1267                           
  1268                           ;slavestr2.c: 172: addr=SSPBUF;
  1269  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1270  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1271  0513  0813               	movf	19,w	;volatile
  1272  0514  00F0               	movwf	??_i2c_address_detect
  1273  0515  0870               	movf	??_i2c_address_detect,w
  1274  0516  00BE               	movwf	_addr
  1275                           
  1276                           ;slavestr2.c: 175: PIR1bits.SSPIF = 0;
  1277  0517  118C               	bcf	12,3	;volatile
  1278  0518  0008               	return
  1279  0519                     __end_of_i2c_address_detect:	
  1280                           
  1281                           	psect	text5
  1282  0528                     __ptext5:	
  1283 ;; *************** function _delay_ms *****************
  1284 ;; Defined at:
  1285 ;;		line 311 in file "slavestr2.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  i               2    2[COMMON] unsigned int 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, pclath, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         2       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0
  1302 ;;      Totals:         2       0       0       0       0
  1303 ;;Total ram usage:        2 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		_delay1ms
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _delay_ms
  1315  0528                     _delay_ms:	
  1316                           
  1317                           ;slavestr2.c: 313: for(;i!=0x00;i--)
  1318                           
  1319                           ;incstack = 0
  1320                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  1321  0528  0873               	movf	delay_ms@i+1,w
  1322  0529  0472               	iorwf	delay_ms@i,w
  1323  052A  1903               	btfsc	3,2
  1324  052B  0008               	return
  1325                           
  1326                           ;slavestr2.c: 314: delay1ms();
  1327  052C  120A  118A  2519  120A  118A  	fcall	_delay1ms
  1328  0531  3001               	movlw	1
  1329  0532  02F2               	subwf	delay_ms@i,f
  1330  0533  3000               	movlw	0
  1331  0534  1C03               	skipc
  1332  0535  03F3               	decf	delay_ms@i+1,f
  1333  0536  02F3               	subwf	delay_ms@i+1,f
  1334  0537  2D28               	goto	_delay_ms
  1335  0538                     __end_of_delay_ms:	
  1336                           
  1337                           	psect	text6
  1338  0519                     __ptext6:	
  1339 ;; *************** function _delay1ms *****************
  1340 ;; Defined at:
  1341 ;;		line 317 in file "slavestr2.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  j               2    0[COMMON] unsigned int 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;		None               void
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         2       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0
  1358 ;;      Totals:         2       0       0       0       0
  1359 ;;Total ram usage:        2 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_delay_ms
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _delay1ms
  1370  0519                     _delay1ms:	
  1371                           
  1372                           ;slavestr2.c: 319: unsigned int j = 130;
  1373                           
  1374                           ;incstack = 0
  1375                           ; Regs used in _delay1ms: [wreg+status,2+status,0]
  1376  0519  3082               	movlw	130
  1377  051A  00F0               	movwf	delay1ms@j
  1378  051B  3000               	movlw	0
  1379  051C  00F1               	movwf	delay1ms@j+1
  1380  051D                     L2:	
  1381                           
  1382                           ;slavestr2.c: 320: for (;j!=0x00;j--);
  1383  051D  0871               	movf	delay1ms@j+1,w
  1384  051E  0470               	iorwf	delay1ms@j,w
  1385  051F  1903               	btfsc	3,2
  1386  0520  0008               	return
  1387  0521  3001               	movlw	1
  1388  0522  02F0               	subwf	delay1ms@j,f
  1389  0523  3000               	movlw	0
  1390  0524  1C03               	skipc
  1391  0525  03F1               	decf	delay1ms@j+1,f
  1392  0526  02F1               	subwf	delay1ms@j+1,f
  1393  0527  2D1D               	goto	L2
  1394  0528                     __end_of_delay1ms:	
  1395                           
  1396                           	psect	text7
  1397  055D                     __ptext7:	
  1398 ;; *************** function _UART_Write_Text *****************
  1399 ;; Defined at:
  1400 ;;		line 240 in file "slavestr2.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  text            2    1[COMMON] PTR const unsigned char 
  1403 ;;		 -> STR_13(12), STR_12(14), STR_11(3), STR_10(33), 
  1404 ;;		 -> main@array(80), STR_9(27), STR_8(21), STR_4(23), 
  1405 ;;		 -> STR_2(46), 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  i               2    6[COMMON] int 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;		None               void
  1410 ;; Registers used:
  1411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1417 ;;      Params:         2       0       0       0       0
  1418 ;;      Locals:         2       0       0       0       0
  1419 ;;      Temps:          3       0       0       0       0
  1420 ;;      Totals:         7       0       0       0       0
  1421 ;;Total ram usage:        7 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    1
  1424 ;; This function calls:
  1425 ;;		_UART_Write
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;;		_UART_Read_Text
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function _UART_Write_Text
  1434  055D                     _UART_Write_Text:	
  1435                           
  1436                           ;slavestr2.c: 242: int i;
  1437                           ;slavestr2.c: 243: for(i=0;text[i]!='\0';i++)
  1438                           
  1439                           ;incstack = 0
  1440                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1441  055D  01F6               	clrf	UART_Write_Text@i
  1442  055E  01F7               	clrf	UART_Write_Text@i+1
  1443  055F                     l951:	
  1444  055F  0876               	movf	UART_Write_Text@i,w
  1445  0560  0771               	addwf	UART_Write_Text@text,w
  1446  0561  00F4               	movwf	??_UART_Write_Text+1
  1447  0562  0872               	movf	UART_Write_Text@text+1,w
  1448  0563  00F3               	movwf	??_UART_Write_Text
  1449  0564  1803               	skipnc
  1450  0565  0AF3               	incf	??_UART_Write_Text,f
  1451  0566  1BF6               	btfsc	UART_Write_Text@i,7
  1452  0567  03F3               	decf	??_UART_Write_Text,f
  1453  0568  0873               	movf	??_UART_Write_Text,w
  1454  0569  00F5               	movwf	??_UART_Write_Text+2
  1455  056A  0875               	movf	??_UART_Write_Text+2,w
  1456  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1457  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1458  056D  00FF               	movwf	127
  1459  056E  0874               	movf	??_UART_Write_Text+1,w
  1460  056F  0084               	movwf	4
  1461  0570  120A  118A  2003  120A  118A  	fcall	stringtab
  1462  0575  3800               	iorlw	0
  1463  0576  1903               	btfsc	3,2
  1464  0577  0008               	return
  1465                           
  1466                           ;slavestr2.c: 244: UART_Write(text[i]);
  1467  0578  0876               	movf	UART_Write_Text@i,w
  1468  0579  0771               	addwf	UART_Write_Text@text,w
  1469  057A  00F4               	movwf	??_UART_Write_Text+1
  1470  057B  0872               	movf	UART_Write_Text@text+1,w
  1471  057C  00F3               	movwf	??_UART_Write_Text
  1472  057D  1803               	skipnc
  1473  057E  0AF3               	incf	??_UART_Write_Text,f
  1474  057F  1BF6               	btfsc	UART_Write_Text@i,7
  1475  0580  03F3               	decf	??_UART_Write_Text,f
  1476  0581  0873               	movf	??_UART_Write_Text,w
  1477  0582  00F5               	movwf	??_UART_Write_Text+2
  1478  0583  0875               	movf	??_UART_Write_Text+2,w
  1479  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0586  00FF               	movwf	127
  1482  0587  0874               	movf	??_UART_Write_Text+1,w
  1483  0588  0084               	movwf	4
  1484  0589  120A  118A  2003  120A  118A  	fcall	stringtab
  1485  058E  120A  118A  24FD  120A  118A  	fcall	_UART_Write
  1486  0593  3001               	movlw	1
  1487  0594  07F6               	addwf	UART_Write_Text@i,f
  1488  0595  1803               	skipnc
  1489  0596  0AF7               	incf	UART_Write_Text@i+1,f
  1490  0597  3000               	movlw	0
  1491  0598  07F7               	addwf	UART_Write_Text@i+1,f
  1492  0599  2D5F               	goto	l951
  1493  059A                     __end_of_UART_Write_Text:	
  1494                           
  1495                           	psect	text8
  1496  04FD                     __ptext8:	
  1497 ;; *************** function _UART_Write *****************
  1498 ;; Defined at:
  1499 ;;		line 228 in file "slavestr2.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  data            1    wreg     unsigned char 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  data            1    0[COMMON] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;		None               void
  1506 ;; Registers used:
  1507 ;;		wreg
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       0       0       0       0
  1514 ;;      Locals:         1       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0
  1516 ;;      Totals:         1       0       0       0       0
  1517 ;;Total ram usage:        1 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;;		_UART_Write_Text
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _UART_Write
  1529  04FD                     _UART_Write:	
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _UART_Write: [wreg]
  1533                           ;UART_Write@data stored from wreg
  1534  04FD  00F0               	movwf	UART_Write@data
  1535  04FE                     l110:	
  1536                           ;slavestr2.c: 230: while(!PIR1bits.TXIF);
  1537                           
  1538  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  1539  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0500  1E0C               	btfss	12,4	;volatile
  1541  0501  2CFE               	goto	l110
  1542  0502                     l113:	
  1543                           ;slavestr2.c: 231: while(!TRMT);
  1544                           
  1545  0502  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0503  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0504  1C98               	btfss	24,1	;volatile
  1548  0505  2D02               	goto	l113
  1549                           
  1550                           ;slavestr2.c: 232: TXREG = data;
  1551  0506  0870               	movf	UART_Write@data,w
  1552  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0509  0099               	movwf	25	;volatile
  1555  050A  0008               	return
  1556  050B                     __end_of_UART_Write:	
  1557                           
  1558                           	psect	text9
  1559  06FE                     __ptext9:	
  1560 ;; *************** function _UART_Init *****************
  1561 ;; Defined at:
  1562 ;;		line 199 in file "slavestr2.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  baudrate        4    6[BANK0 ] long 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  x               2    9[COMMON] unsigned int 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      unsigned char 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0, pclath, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1576 ;;      Params:         0       4       0       0       0
  1577 ;;      Locals:         2       0       0       0       0
  1578 ;;      Temps:          0      12       0       0       0
  1579 ;;      Totals:         2      16       0       0       0
  1580 ;;Total ram usage:       18 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    1
  1583 ;; This function calls:
  1584 ;;		___aldiv
  1585 ;; This function is called by:
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           
  1591                           ;psect for function _UART_Init
  1592  06FE                     _UART_Init:	
  1593                           
  1594                           ;slavestr2.c: 201: unsigned int x;
  1595                           ;slavestr2.c: 202: x = (8000000 - baudrate*64)/(baudrate*64);
  1596                           
  1597                           ;incstack = 0
  1598                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1599  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  1600  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  1601  0700  0826               	movf	UART_Init@baudrate,w
  1602  0701  00AA               	movwf	??_UART_Init
  1603  0702  0827               	movf	UART_Init@baudrate+1,w
  1604  0703  00AB               	movwf	??_UART_Init+1
  1605  0704  0828               	movf	UART_Init@baudrate+2,w
  1606  0705  00AC               	movwf	??_UART_Init+2
  1607  0706  0829               	movf	UART_Init@baudrate+3,w
  1608  0707  00AD               	movwf	??_UART_Init+3
  1609  0708  3006               	movlw	6
  1610  0709                     u575:	
  1611  0709  1003               	clrc
  1612  070A  0DAA               	rlf	??_UART_Init,f
  1613  070B  0DAB               	rlf	??_UART_Init+1,f
  1614  070C  0DAC               	rlf	??_UART_Init+2,f
  1615  070D  0DAD               	rlf	??_UART_Init+3,f
  1616  070E  3EFF               	addlw	-1
  1617  070F  1D03               	skipz
  1618  0710  2F09               	goto	u575
  1619  0711  082D               	movf	??_UART_Init+3,w
  1620  0712  00F3               	movwf	___aldiv@divisor+3
  1621  0713  082C               	movf	??_UART_Init+2,w
  1622  0714  00F2               	movwf	___aldiv@divisor+2
  1623  0715  082B               	movf	??_UART_Init+1,w
  1624  0716  00F1               	movwf	___aldiv@divisor+1
  1625  0717  082A               	movf	??_UART_Init,w
  1626  0718  00F0               	movwf	___aldiv@divisor
  1627  0719  3000               	movlw	0
  1628  071A  00AE               	movwf	??_UART_Init+4
  1629  071B  3012               	movlw	18
  1630  071C  00AF               	movwf	??_UART_Init+5
  1631  071D  307A               	movlw	122
  1632  071E  00B0               	movwf	??_UART_Init+6
  1633  071F  3000               	movlw	0
  1634  0720  00B1               	movwf	??_UART_Init+7
  1635  0721  0826               	movf	UART_Init@baudrate,w
  1636  0722  00B2               	movwf	??_UART_Init+8
  1637  0723  0827               	movf	UART_Init@baudrate+1,w
  1638  0724  00B3               	movwf	??_UART_Init+9
  1639  0725  0828               	movf	UART_Init@baudrate+2,w
  1640  0726  00B4               	movwf	??_UART_Init+10
  1641  0727  0829               	movf	UART_Init@baudrate+3,w
  1642  0728  00B5               	movwf	??_UART_Init+11
  1643  0729  3006               	movlw	6
  1644  072A                     u585:	
  1645  072A  1003               	clrc
  1646  072B  0DB2               	rlf	??_UART_Init+8,f
  1647  072C  0DB3               	rlf	??_UART_Init+9,f
  1648  072D  0DB4               	rlf	??_UART_Init+10,f
  1649  072E  0DB5               	rlf	??_UART_Init+11,f
  1650  072F  3EFF               	addlw	-1
  1651  0730  1D03               	skipz
  1652  0731  2F2A               	goto	u585
  1653  0732  09B2               	comf	??_UART_Init+8,f
  1654  0733  09B3               	comf	??_UART_Init+9,f
  1655  0734  09B4               	comf	??_UART_Init+10,f
  1656  0735  09B5               	comf	??_UART_Init+11,f
  1657  0736  0AB2               	incf	??_UART_Init+8,f
  1658  0737  1903               	skipnz
  1659  0738  0AB3               	incf	??_UART_Init+9,f
  1660  0739  1903               	skipnz
  1661  073A  0AB4               	incf	??_UART_Init+10,f
  1662  073B  1903               	skipnz
  1663  073C  0AB5               	incf	??_UART_Init+11,f
  1664  073D  0832               	movf	??_UART_Init+8,w
  1665  073E  07AE               	addwf	??_UART_Init+4,f
  1666  073F  0833               	movf	??_UART_Init+9,w
  1667  0740  1803               	skipnc
  1668  0741  0F33               	incfsz	??_UART_Init+9,w
  1669  0742  2F44               	goto	u590
  1670  0743  2F45               	goto	u591
  1671  0744                     u590:	
  1672  0744  07AF               	addwf	??_UART_Init+5,f
  1673  0745                     u591:	
  1674  0745  0834               	movf	??_UART_Init+10,w
  1675  0746  1803               	skipnc
  1676  0747  0F34               	incfsz	??_UART_Init+10,w
  1677  0748  2F4A               	goto	u592
  1678  0749  2F4B               	goto	u593
  1679  074A                     u592:	
  1680  074A  07B0               	addwf	??_UART_Init+6,f
  1681  074B                     u593:	
  1682  074B  0835               	movf	??_UART_Init+11,w
  1683  074C  1803               	skipnc
  1684  074D  0A35               	incf	??_UART_Init+11,w
  1685  074E  07B1               	addwf	??_UART_Init+7,f
  1686  074F  0831               	movf	??_UART_Init+7,w
  1687  0750  00F7               	movwf	___aldiv@dividend+3
  1688  0751  0830               	movf	??_UART_Init+6,w
  1689  0752  00F6               	movwf	___aldiv@dividend+2
  1690  0753  082F               	movf	??_UART_Init+5,w
  1691  0754  00F5               	movwf	___aldiv@dividend+1
  1692  0755  082E               	movf	??_UART_Init+4,w
  1693  0756  00F4               	movwf	___aldiv@dividend
  1694  0757  120A  118A  259A  120A  118A  	fcall	___aldiv
  1695  075C  0871               	movf	?___aldiv+1,w
  1696  075D  01FA               	clrf	UART_Init@x+1
  1697  075E  07FA               	addwf	UART_Init@x+1,f
  1698  075F  0870               	movf	?___aldiv,w
  1699  0760  01F9               	clrf	UART_Init@x
  1700  0761  07F9               	addwf	UART_Init@x,f
  1701                           
  1702                           ;slavestr2.c: 203: if(x>255)
  1703  0762  3001               	movlw	1
  1704  0763  027A               	subwf	UART_Init@x+1,w
  1705  0764  3000               	movlw	0
  1706  0765  1903               	skipnz
  1707  0766  0279               	subwf	UART_Init@x,w
  1708  0767  1C03               	skipc
  1709  0768  2FDA               	goto	l929
  1710                           
  1711                           ;slavestr2.c: 204: {
  1712                           ;slavestr2.c: 205: x = (8000000 - baudrate*16)/(baudrate*16);
  1713  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1714  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1715  076B  0826               	movf	UART_Init@baudrate,w
  1716  076C  00AA               	movwf	??_UART_Init
  1717  076D  0827               	movf	UART_Init@baudrate+1,w
  1718  076E  00AB               	movwf	??_UART_Init+1
  1719  076F  0828               	movf	UART_Init@baudrate+2,w
  1720  0770  00AC               	movwf	??_UART_Init+2
  1721  0771  0829               	movf	UART_Init@baudrate+3,w
  1722  0772  00AD               	movwf	??_UART_Init+3
  1723  0773  3004               	movlw	4
  1724  0774                     u615:	
  1725  0774  1003               	clrc
  1726  0775  0DAA               	rlf	??_UART_Init,f
  1727  0776  0DAB               	rlf	??_UART_Init+1,f
  1728  0777  0DAC               	rlf	??_UART_Init+2,f
  1729  0778  0DAD               	rlf	??_UART_Init+3,f
  1730  0779  3EFF               	addlw	-1
  1731  077A  1D03               	skipz
  1732  077B  2F74               	goto	u615
  1733  077C  082D               	movf	??_UART_Init+3,w
  1734  077D  00F3               	movwf	___aldiv@divisor+3
  1735  077E  082C               	movf	??_UART_Init+2,w
  1736  077F  00F2               	movwf	___aldiv@divisor+2
  1737  0780  082B               	movf	??_UART_Init+1,w
  1738  0781  00F1               	movwf	___aldiv@divisor+1
  1739  0782  082A               	movf	??_UART_Init,w
  1740  0783  00F0               	movwf	___aldiv@divisor
  1741  0784  3000               	movlw	0
  1742  0785  00AE               	movwf	??_UART_Init+4
  1743  0786  3012               	movlw	18
  1744  0787  00AF               	movwf	??_UART_Init+5
  1745  0788  307A               	movlw	122
  1746  0789  00B0               	movwf	??_UART_Init+6
  1747  078A  3000               	movlw	0
  1748  078B  00B1               	movwf	??_UART_Init+7
  1749  078C  0826               	movf	UART_Init@baudrate,w
  1750  078D  00B2               	movwf	??_UART_Init+8
  1751  078E  0827               	movf	UART_Init@baudrate+1,w
  1752  078F  00B3               	movwf	??_UART_Init+9
  1753  0790  0828               	movf	UART_Init@baudrate+2,w
  1754  0791  00B4               	movwf	??_UART_Init+10
  1755  0792  0829               	movf	UART_Init@baudrate+3,w
  1756  0793  00B5               	movwf	??_UART_Init+11
  1757  0794  3004               	movlw	4
  1758  0795                     u625:	
  1759  0795  1003               	clrc
  1760  0796  0DB2               	rlf	??_UART_Init+8,f
  1761  0797  0DB3               	rlf	??_UART_Init+9,f
  1762  0798  0DB4               	rlf	??_UART_Init+10,f
  1763  0799  0DB5               	rlf	??_UART_Init+11,f
  1764  079A  3EFF               	addlw	-1
  1765  079B  1D03               	skipz
  1766  079C  2F95               	goto	u625
  1767  079D  09B2               	comf	??_UART_Init+8,f
  1768  079E  09B3               	comf	??_UART_Init+9,f
  1769  079F  09B4               	comf	??_UART_Init+10,f
  1770  07A0  09B5               	comf	??_UART_Init+11,f
  1771  07A1  0AB2               	incf	??_UART_Init+8,f
  1772  07A2  1903               	skipnz
  1773  07A3  0AB3               	incf	??_UART_Init+9,f
  1774  07A4  1903               	skipnz
  1775  07A5  0AB4               	incf	??_UART_Init+10,f
  1776  07A6  1903               	skipnz
  1777  07A7  0AB5               	incf	??_UART_Init+11,f
  1778  07A8  0832               	movf	??_UART_Init+8,w
  1779  07A9  07AE               	addwf	??_UART_Init+4,f
  1780  07AA  0833               	movf	??_UART_Init+9,w
  1781  07AB  1803               	skipnc
  1782  07AC  0F33               	incfsz	??_UART_Init+9,w
  1783  07AD  2FAF               	goto	u630
  1784  07AE  2FB0               	goto	u631
  1785  07AF                     u630:	
  1786  07AF  07AF               	addwf	??_UART_Init+5,f
  1787  07B0                     u631:	
  1788  07B0  0834               	movf	??_UART_Init+10,w
  1789  07B1  1803               	skipnc
  1790  07B2  0F34               	incfsz	??_UART_Init+10,w
  1791  07B3  2FB5               	goto	u632
  1792  07B4  2FB6               	goto	u633
  1793  07B5                     u632:	
  1794  07B5  07B0               	addwf	??_UART_Init+6,f
  1795  07B6                     u633:	
  1796  07B6  0835               	movf	??_UART_Init+11,w
  1797  07B7  1803               	skipnc
  1798  07B8  0A35               	incf	??_UART_Init+11,w
  1799  07B9  07B1               	addwf	??_UART_Init+7,f
  1800  07BA  0831               	movf	??_UART_Init+7,w
  1801  07BB  00F7               	movwf	___aldiv@dividend+3
  1802  07BC  0830               	movf	??_UART_Init+6,w
  1803  07BD  00F6               	movwf	___aldiv@dividend+2
  1804  07BE  082F               	movf	??_UART_Init+5,w
  1805  07BF  00F5               	movwf	___aldiv@dividend+1
  1806  07C0  082E               	movf	??_UART_Init+4,w
  1807  07C1  00F4               	movwf	___aldiv@dividend
  1808  07C2  120A  118A  259A  120A  118A  	fcall	___aldiv
  1809  07C7  0871               	movf	?___aldiv+1,w
  1810  07C8  01FA               	clrf	UART_Init@x+1
  1811  07C9  07FA               	addwf	UART_Init@x+1,f
  1812  07CA  0870               	movf	?___aldiv,w
  1813  07CB  01F9               	clrf	UART_Init@x
  1814  07CC  07F9               	addwf	UART_Init@x,f
  1815                           
  1816                           ;slavestr2.c: 207: BRGH = 1;
  1817  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  1818  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  1819  07CF  1518               	bsf	24,2	;volatile
  1820                           
  1821                           ;slavestr2.c: 208: SPBRG = x;
  1822  07D0  0879               	movf	UART_Init@x,w
  1823  07D1  0099               	movwf	25	;volatile
  1824                           
  1825                           ;slavestr2.c: 209: SYNC = 0;
  1826  07D2  1218               	bcf	24,4	;volatile
  1827                           
  1828                           ;slavestr2.c: 210: SPEN = 1;
  1829  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1830  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1831  07D5  1798               	bsf	24,7	;volatile
  1832                           
  1833                           ;slavestr2.c: 212: CREN = 1;
  1834  07D6  1618               	bsf	24,4	;volatile
  1835                           
  1836                           ;slavestr2.c: 213: TXEN = 1;
  1837  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  1838  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  1839  07D9  1698               	bsf	24,5	;volatile
  1840  07DA                     l929:	
  1841                           
  1842                           ;slavestr2.c: 214: }
  1843                           ;slavestr2.c: 215: if(x<256)
  1844  07DA  3001               	movlw	1
  1845  07DB  027A               	subwf	UART_Init@x+1,w
  1846  07DC  3000               	movlw	0
  1847  07DD  1903               	skipnz
  1848  07DE  0279               	subwf	UART_Init@x,w
  1849  07DF  1803               	skipnc
  1850  07E0  0008               	return
  1851                           
  1852                           ;slavestr2.c: 216: {
  1853                           ;slavestr2.c: 217: BRGH = 0;
  1854  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  1855  07E2  1303               	bcf	3,6	;RP1=0, select bank1
  1856  07E3  1118               	bcf	24,2	;volatile
  1857                           
  1858                           ;slavestr2.c: 218: SPBRG = x;
  1859  07E4  0879               	movf	UART_Init@x,w
  1860  07E5  0099               	movwf	25	;volatile
  1861                           
  1862                           ;slavestr2.c: 219: SYNC = 0;
  1863  07E6  1218               	bcf	24,4	;volatile
  1864                           
  1865                           ;slavestr2.c: 220: SPEN = 1;
  1866  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1867  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1868  07E9  1798               	bsf	24,7	;volatile
  1869                           
  1870                           ;slavestr2.c: 221: CREN = 1;
  1871  07EA  1618               	bsf	24,4	;volatile
  1872                           
  1873                           ;slavestr2.c: 222: TXEN = 1;
  1874  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  1875  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  1876  07ED  1698               	bsf	24,5	;volatile
  1877                           
  1878                           ;slavestr2.c: 223: return 1;
  1879                           ;	Return value of _UART_Init is never used
  1880  07EE  0008               	return
  1881  07EF                     __end_of_UART_Init:	
  1882                           ;slavestr2.c: 224: }
  1883                           ;slavestr2.c: 225: return 0;
  1884                           ;	Return value of _UART_Init is never used
  1885                           
  1886                           
  1887                           	psect	text10
  1888  059A                     __ptext10:	
  1889 ;; *************** function ___aldiv *****************
  1890 ;; Defined at:
  1891 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  divisor         4    0[COMMON] long 
  1894 ;;  dividend        4    4[COMMON] long 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  quotient        4    2[BANK0 ] long 
  1897 ;;  sign            1    1[BANK0 ] unsigned char 
  1898 ;;  counter         1    0[BANK0 ] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  4    0[COMMON] long 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         8       0       0       0       0
  1909 ;;      Locals:         0       6       0       0       0
  1910 ;;      Temps:          1       0       0       0       0
  1911 ;;      Totals:         9       6       0       0       0
  1912 ;;Total ram usage:       15 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_UART_Init
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function ___aldiv
  1923  059A                     ___aldiv:	
  1924                           
  1925                           ;incstack = 0
  1926                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1927  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1928  059B  1303               	bcf	3,6	;RP1=0, select bank0
  1929  059C  01A1               	clrf	___aldiv@sign
  1930  059D  1FF3               	btfss	___aldiv@divisor+3,7
  1931  059E  2DAC               	goto	l311
  1932  059F  09F0               	comf	___aldiv@divisor,f
  1933  05A0  09F1               	comf	___aldiv@divisor+1,f
  1934  05A1  09F2               	comf	___aldiv@divisor+2,f
  1935  05A2  09F3               	comf	___aldiv@divisor+3,f
  1936  05A3  0AF0               	incf	___aldiv@divisor,f
  1937  05A4  1903               	skipnz
  1938  05A5  0AF1               	incf	___aldiv@divisor+1,f
  1939  05A6  1903               	skipnz
  1940  05A7  0AF2               	incf	___aldiv@divisor+2,f
  1941  05A8  1903               	skipnz
  1942  05A9  0AF3               	incf	___aldiv@divisor+3,f
  1943  05AA  01A1               	clrf	___aldiv@sign
  1944  05AB  0AA1               	incf	___aldiv@sign,f
  1945  05AC                     l311:	
  1946  05AC  1FF7               	btfss	___aldiv@dividend+3,7
  1947  05AD  2DBD               	goto	l881
  1948  05AE  09F4               	comf	___aldiv@dividend,f
  1949  05AF  09F5               	comf	___aldiv@dividend+1,f
  1950  05B0  09F6               	comf	___aldiv@dividend+2,f
  1951  05B1  09F7               	comf	___aldiv@dividend+3,f
  1952  05B2  0AF4               	incf	___aldiv@dividend,f
  1953  05B3  1903               	skipnz
  1954  05B4  0AF5               	incf	___aldiv@dividend+1,f
  1955  05B5  1903               	skipnz
  1956  05B6  0AF6               	incf	___aldiv@dividend+2,f
  1957  05B7  1903               	skipnz
  1958  05B8  0AF7               	incf	___aldiv@dividend+3,f
  1959  05B9  3001               	movlw	1
  1960  05BA  00F8               	movwf	??___aldiv
  1961  05BB  0878               	movf	??___aldiv,w
  1962  05BC  06A1               	xorwf	___aldiv@sign,f
  1963  05BD                     l881:	
  1964  05BD  3000               	movlw	0
  1965  05BE  00A5               	movwf	___aldiv@quotient+3
  1966  05BF  3000               	movlw	0
  1967  05C0  00A4               	movwf	___aldiv@quotient+2
  1968  05C1  3000               	movlw	0
  1969  05C2  00A3               	movwf	___aldiv@quotient+1
  1970  05C3  3000               	movlw	0
  1971  05C4  00A2               	movwf	___aldiv@quotient
  1972  05C5  0873               	movf	___aldiv@divisor+3,w
  1973  05C6  0472               	iorwf	___aldiv@divisor+2,w
  1974  05C7  0471               	iorwf	___aldiv@divisor+1,w
  1975  05C8  0470               	iorwf	___aldiv@divisor,w
  1976  05C9  1903               	skipnz
  1977  05CA  2E12               	goto	l903
  1978  05CB  01A0               	clrf	___aldiv@counter
  1979  05CC  0AA0               	incf	___aldiv@counter,f
  1980  05CD                     l889:	
  1981  05CD  1BF3               	btfsc	___aldiv@divisor+3,7
  1982  05CE  2DDD               	goto	l891
  1983  05CF  3001               	movlw	1
  1984  05D0  00F8               	movwf	??___aldiv
  1985  05D1                     u505:	
  1986  05D1  1003               	clrc
  1987  05D2  0DF0               	rlf	___aldiv@divisor,f
  1988  05D3  0DF1               	rlf	___aldiv@divisor+1,f
  1989  05D4  0DF2               	rlf	___aldiv@divisor+2,f
  1990  05D5  0DF3               	rlf	___aldiv@divisor+3,f
  1991  05D6  0BF8               	decfsz	??___aldiv,f
  1992  05D7  2DD1               	goto	u505
  1993  05D8  3001               	movlw	1
  1994  05D9  00F8               	movwf	??___aldiv
  1995  05DA  0878               	movf	??___aldiv,w
  1996  05DB  07A0               	addwf	___aldiv@counter,f
  1997  05DC  2DCD               	goto	l889
  1998  05DD                     l891:	
  1999  05DD  3001               	movlw	1
  2000  05DE  00F8               	movwf	??___aldiv
  2001  05DF                     u525:	
  2002  05DF  1003               	clrc
  2003  05E0  0DA2               	rlf	___aldiv@quotient,f
  2004  05E1  0DA3               	rlf	___aldiv@quotient+1,f
  2005  05E2  0DA4               	rlf	___aldiv@quotient+2,f
  2006  05E3  0DA5               	rlf	___aldiv@quotient+3,f
  2007  05E4  0BF8               	decfsz	??___aldiv,f
  2008  05E5  2DDF               	goto	u525
  2009  05E6  0873               	movf	___aldiv@divisor+3,w
  2010  05E7  0277               	subwf	___aldiv@dividend+3,w
  2011  05E8  1D03               	skipz
  2012  05E9  2DF4               	goto	u535
  2013  05EA  0872               	movf	___aldiv@divisor+2,w
  2014  05EB  0276               	subwf	___aldiv@dividend+2,w
  2015  05EC  1D03               	skipz
  2016  05ED  2DF4               	goto	u535
  2017  05EE  0871               	movf	___aldiv@divisor+1,w
  2018  05EF  0275               	subwf	___aldiv@dividend+1,w
  2019  05F0  1D03               	skipz
  2020  05F1  2DF4               	goto	u535
  2021  05F2  0870               	movf	___aldiv@divisor,w
  2022  05F3  0274               	subwf	___aldiv@dividend,w
  2023  05F4                     u535:	
  2024  05F4  1C03               	skipc
  2025  05F5  2E05               	goto	l899
  2026  05F6  0870               	movf	___aldiv@divisor,w
  2027  05F7  02F4               	subwf	___aldiv@dividend,f
  2028  05F8  0871               	movf	___aldiv@divisor+1,w
  2029  05F9  1C03               	skipc
  2030  05FA  0F71               	incfsz	___aldiv@divisor+1,w
  2031  05FB  02F5               	subwf	___aldiv@dividend+1,f
  2032  05FC  0872               	movf	___aldiv@divisor+2,w
  2033  05FD  1C03               	skipc
  2034  05FE  0F72               	incfsz	___aldiv@divisor+2,w
  2035  05FF  02F6               	subwf	___aldiv@dividend+2,f
  2036  0600  0873               	movf	___aldiv@divisor+3,w
  2037  0601  1C03               	skipc
  2038  0602  0F73               	incfsz	___aldiv@divisor+3,w
  2039  0603  02F7               	subwf	___aldiv@dividend+3,f
  2040  0604  1422               	bsf	___aldiv@quotient,0
  2041  0605                     l899:	
  2042  0605  3001               	movlw	1
  2043  0606                     u545:	
  2044  0606  1003               	clrc
  2045  0607  0CF3               	rrf	___aldiv@divisor+3,f
  2046  0608  0CF2               	rrf	___aldiv@divisor+2,f
  2047  0609  0CF1               	rrf	___aldiv@divisor+1,f
  2048  060A  0CF0               	rrf	___aldiv@divisor,f
  2049  060B  3EFF               	addlw	-1
  2050  060C  1D03               	skipz
  2051  060D  2E06               	goto	u545
  2052  060E  3001               	movlw	1
  2053  060F  02A0               	subwf	___aldiv@counter,f
  2054  0610  1D03               	btfss	3,2
  2055  0611  2DDD               	goto	l891
  2056  0612                     l903:	
  2057  0612  0821               	movf	___aldiv@sign,w
  2058  0613  1903               	btfsc	3,2
  2059  0614  2E20               	goto	l907
  2060  0615  09A2               	comf	___aldiv@quotient,f
  2061  0616  09A3               	comf	___aldiv@quotient+1,f
  2062  0617  09A4               	comf	___aldiv@quotient+2,f
  2063  0618  09A5               	comf	___aldiv@quotient+3,f
  2064  0619  0AA2               	incf	___aldiv@quotient,f
  2065  061A  1903               	skipnz
  2066  061B  0AA3               	incf	___aldiv@quotient+1,f
  2067  061C  1903               	skipnz
  2068  061D  0AA4               	incf	___aldiv@quotient+2,f
  2069  061E  1903               	skipnz
  2070  061F  0AA5               	incf	___aldiv@quotient+3,f
  2071  0620                     l907:	
  2072  0620  0825               	movf	___aldiv@quotient+3,w
  2073  0621  00F3               	movwf	?___aldiv+3
  2074  0622  0824               	movf	___aldiv@quotient+2,w
  2075  0623  00F2               	movwf	?___aldiv+2
  2076  0624  0823               	movf	___aldiv@quotient+1,w
  2077  0625  00F1               	movwf	?___aldiv+1
  2078  0626  0822               	movf	___aldiv@quotient,w
  2079  0627  00F0               	movwf	?___aldiv
  2080  0628  0008               	return
  2081  0629                     __end_of___aldiv:	
  2082  007E                     btemp	set	126	;btemp
  2083  007E                     wtemp	set	126
  2084  007E                     wtemp0	set	126
  2085  0080                     wtemp1	set	128
  2086  0082                     wtemp2	set	130
  2087  0084                     wtemp3	set	132
  2088  0086                     wtemp4	set	134
  2089  0088                     wtemp5	set	136
  2090  007F                     wtemp6	set	127
  2091  007E                     ttemp	set	126
  2092  007E                     ttemp0	set	126
  2093  0081                     ttemp1	set	129
  2094  0084                     ttemp2	set	132
  2095  0087                     ttemp3	set	135
  2096  007F                     ttemp4	set	127
  2097  007E                     ltemp	set	126
  2098  007E                     ltemp0	set	126
  2099  0082                     ltemp1	set	130
  2100  0086                     ltemp2	set	134
  2101  0080                     ltemp3	set	128


Data Sizes:
    Strings     329
    Constant    0
    Data        1
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      53
    BANK1            80      0       0
    BANK3            96     89      89
    BANK2            96      0       0

Pointer List with Targets:

    sp__UART_Read_Text	PTR unsigned char  size(1) Largest target is 20
		 -> UART_Read_Text@string(BANK0[20]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[12]), STR_12(CODE[14]), STR_11(CODE[3]), STR_10(CODE[33]), 
		 -> main@array(BANK3[80]), STR_9(CODE[27]), STR_8(CODE[21]), STR_4(CODE[23]), 
		 -> STR_2(CODE[46]), 

    main@arr2	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_9(CODE[27]), 

    main@arr1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_8(CODE[21]), 

    main@t3	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_7(CODE[21]), 

    main@t2	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_6(CODE[22]), 

    main@t1	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[18]), 

    main@msg1	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), 

    main@main3	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_3(CODE[46]), 

    main@main2	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_2(CODE[46]), 

    main@main1	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_1(CODE[46]), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _delay_ms->_delay1ms
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               100   100      0    1712
                                             11 COMMON     3     3      0
                                             22 BANK0      8     8      0
                                              0 BANK3     89    89      0
                          _UART_Init
                         _UART_Write
                    _UART_Write_Text
                           _delay_ms
                 _i2c_address_detect
                    _i2c_data_detect
                     _i2c_slave_init
                   _i2c_start_detect
 ---------------------------------------------------------------------------------
 (1) _i2c_start_detect                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_data_detect                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_address_detect                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     144
                                              2 COMMON     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (2) _delay1ms                                             2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     589
                                              1 COMMON     7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     743
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Write
   _UART_Write_Text
     _UART_Write
   _delay_ms
     _delay1ms
   _i2c_address_detect
   _i2c_data_detect
   _i2c_slave_init
   _i2c_start_detect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     59      59       9       92.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      35       5       66.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9C      12        0.0%
ABS                  0      0      9C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri May 29 08:29:50 2015

                          pc 0002              _i2c_data_detect 0549                  __CFG_CP$OFF 0000  
                _SSPSTATbits 0094                           l63 065B                           l90 050F  
                         l87 050B                           l79 04F0                           l98 0549  
                         fsr 0004                          l110 04FE                          l113 0502  
                        l311 05AC                          l903 0612                          l907 0620  
                        l951 055F                          l881 05BD                          l929 07DA  
                        l891 05DD                          l981 0552                          l889 05CD  
                        l899 0605                          u505 05D1                 __CFG_CPD$OFF 0000  
                        u525 05DF                          u630 07AF                          u535 05F4  
                        u631 07B0                          u615 0774                          u632 07B5  
                        u545 0606                          u633 07B6                          u625 0795  
                        u590 0744                          u591 0745                          u575 0709  
                        u592 074A                          u593 074B                          u585 072A  
   __end_of_i2c_start_detect 04F5                          fsr0 0004                          indf 0000  
               __CFG_LVP$OFF 0000                         l1011 06B5                         l1031 06EB  
                       l1017 06C2                         STR_1 0800                         STR_2 082E  
                       STR_3 085C                         STR_4 08C6                         STR_5 091D  
                       STR_6 08DD                         STR_7 08F3                         STR_8 0908  
                       STR_9 08AB                         _BRGH 04C2                         _CREN 00C4  
                       _RCIF 0065                         _SPEN 00C7                         _TRMT 04C1  
                       _TXEN 04C5                         _TXIF 0064                         _SYNC 04C4  
               __CFG_WRT$OFF 0000                         _addr 003E                         _main 0629  
                       btemp 007E                __CFG_BOREN$ON 0000                         ltemp 007E  
                       start 0000                         ttemp 007E                         wtemp 007E  
              __CFG_IESO$OFF 0000                __CFG_MCLRE$ON 0000      __end_of_UART_Write_Text 059A  
      i2c_data_detect@datain 0054              __end_of___aldiv 0629                        ?_main 0070  
                      STR_10 088A                        STR_11 0946                        STR_12 092F  
                      STR_13 093D                __CFG_WDTE$OFF 0000                        _RCREG 001A  
                      _SPBRG 0099                        _TXREG 0019               __CFG_FCMEN$OFF 0000  
                ?_UART_Write 0070           __size_of_UART_Init 00F1         UART_Read_Text@string 0040  
__size_of_i2c_address_detect 000E                        main@i 01E8                        pclath 000A  
                      ltemp0 007E                        ltemp1 0082                        ltemp2 0086  
                      ltemp3 0080                        ttemp0 007E                        ttemp1 0081  
                      ttemp2 0084                        ttemp3 0087                        ttemp4 007F  
                      status 0003                        wtemp0 007E                        wtemp1 0080  
                      wtemp2 0082                        wtemp3 0084                        wtemp4 0086  
                      wtemp5 0088                        wtemp6 007F      __end_of_i2c_data_detect 055D  
i2c_address_detect@condition 003F              __initialization 07EF                 __end_of_main 06FE  
                     ??_main 007B               _i2c_slave_init 0538                       _SSPADD 0093  
                     _SSPCON 0014                       _SSPBUF 0013             __end_of_delay1ms 0528  
           __end_of_delay_ms 0538               __CFG_PWRTE$OFF 0000            __end_of_UART_Init 07EF  
        __size_of_UART_Write 000E                    ??___aldiv 0078             ?_UART_Write_Text 0071  
                     main@t1 0038                       main@t2 003A                       main@t3 003C  
     __end_of_i2c_slave_init 0549      __end_of__initialization 07FC             ?_i2c_data_detect 0070  
             __pcstackCOMMON 0070                 __pidataBANK0 04EF              ?_i2c_slave_init 0070  
          ?_i2c_start_detect 0070           ??_i2c_start_detect 0070                   __pbssBANK0 003E  
                 __pmaintext 0629                    ?_delay1ms 0070                    ?_delay_ms 0072  
               ??_UART_Write 0070                      _SSPSTAT 0094                   __stringtab 0003  
                    ___aldiv 059A           __end_of_UART_Write 050B                      __ptext1 04F0  
                    __ptext2 0538                      __ptext3 0549                      __ptext4 050B  
                    __ptext5 0528                      __ptext6 0519                      __ptext7 055D  
                    __ptext8 04FD                      __ptext9 06FE                   ??_delay1ms 0070  
           ___aldiv@dividend 0074                   ??_delay_ms 0074   __end_of_i2c_address_detect 0519  
                    clrloop0 04F6         end_of_initialization 07FC             ___aldiv@quotient 0022  
               __pstringtext 0800                    _UART_Init 06FE               UART_Write@data 0070  
                  _TRISCbits 0087             ??_i2c_slave_init 0070                   ?_UART_Init 0026  
   __size_of_UART_Write_Text 003D          start_initialization 07EF     __CFG_FOSC$INTRC_NOCLKOUT 0000  
  __size_of_i2c_start_detect 0005                  __pdataBANK0 0054     __size_of_i2c_data_detect 0014  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK3 0190  
        __end_of__stringdata 0949            __size_of_delay1ms 000F            __size_of_delay_ms 0010  
                   ?___aldiv 0070                  ??_UART_Init 002A                    __pstrings 0003  
                 UART_Init@x 0079                    delay1ms@j 0070            ??_UART_Write_Text 0073  
            ___aldiv@divisor 0070              ___aldiv@counter 0020                    delay_ms@i 0072  
                  clear_ram0 04F5           _i2c_address_detect 050B                     _PIR1bits 000C  
        ?_i2c_address_detect 0070            UART_Init@baudrate 0026                  __stringbase 0015  
                __stringdata 0800                    main@main1 007C                    main@main2 01E0  
                  main@main3 0036                    main@array 0190            ??_i2c_data_detect 0070  
       ??_i2c_address_detect 0070             _i2c_start_detect 04F0             __size_of___aldiv 008F  
         __end_of__stringtab 0015                     _delay1ms 0519                     _delay_ms 0528  
                   __ptext10 059A            __CFG_BOR4V$BOR40V 0000          UART_Write_Text@text 0071  
              __size_of_main 00D5                     main@arr1 01E4                     main@arr2 01E6  
                   main@msg1 01E2                    stringcode 000D                   _OSCCONbits 008F  
            _UART_Write_Text 055D      __size_of_i2c_slave_init 0011                     stringtab 0003  
               ___aldiv@sign 0021                   _UART_Write 04FD             UART_Write_Text@i 0076  
                 _SSPCONbits 0014  
